### 6502bench SourceGen dis65 v1.0 ###
{
"_ContentVersion":3,
"FileDataLength":20480,
"FileDataCrc32":-1410598391,
"ProjectProps":{
"CpuName":"6502",
"IncludeUndocumentedInstr":true,
"TwoByteBrk":false,
"EntryFlags":32702671,
"AutoLabelStyle":"Simple",
"AnalysisParams":{
"AnalyzeUncategorizedData":false,
"DefaultTextScanMode":"LowHighAscii",
"MinCharsForString":3,
"SeekNearbyTargets":true,
"SmartPlpHandling":true},

"PlatformSymbolFileIdentifiers":["PROJ:APPLE2.ROM.sym65"],
"ExtensionScriptFileIdentifiers":[],
"ProjectSyms":{
"_REMOVED":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"_REMOVED",
"Value":65221,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A1H":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor General Purpose A1-Reg, High",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A1H",
"Value":61,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A1L":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor General Purpose A1-Reg, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A1L",
"Value":60,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A1PC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A1PC",
"Value":65141,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A1PCLP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A1PCLP",
"Value":65144,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A1PCRTS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A1PCRTS",
"Value":65151,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A2H":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor General Purpose A2-Reg, High",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A2H",
"Value":63,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A2L":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor General Purpose A2-Reg, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A2L",
"Value":62,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A3H":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor General Purpose A3-Reg, High",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A3H",
"Value":65,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A3L":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor General Purpose A3-Reg, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A3L",
"Value":64,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A4H":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor General Purpose A4-Reg, High",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A4H",
"Value":67,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A4L":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor General Purpose A4-Reg, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A4L",
"Value":66,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"A5L":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor General Purpose A5-Reg, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"A5L",
"Value":68,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ABS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ABS",
"Value":60335,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ACC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"A-Reg Safe (Accumulator) [Destroys A5H!]",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ACC",
"Value":69,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ADD":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ADD",
"Value":64977,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ADD_EXPONENTS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ADD_EXPONENTS",
"Value":59918,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ADD_EXPONENTS_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ADD_EXPONENTS_1",
"Value":59920,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ADDACC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ADDACC",
"Value":60629,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ADDINP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ADDINP",
"Value":64900,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ADDON":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ADDON",
"Value":55704,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ADVANCE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ADVANCE",
"Value":64500,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"AND":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"AND",
"Value":57173,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"APPLEII":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"APPLEII",
"Value":64352,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ARG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Secondary Floating Point Accumulator  (6B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ARG",
"Value":165,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ARGEXT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"ARG Extra Precision Byte for FP Op\u0027s  (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ARGEXT",
"Value":146,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ARGSIGN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Secondary FAC Unpacked Sign (msb)     (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ARGSIGN",
"Value":170,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ARGVPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Temporary Variable Pointer  (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ARGVPTR",
"Value":168,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ARRAY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ARRAY",
"Value":57630,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ARYTAB":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Start of Arrays Pointer     (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ARYTAB",
"Value":107,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ASC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ASC",
"Value":59109,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ATN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ATN",
"Value":61598,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"AUTORUN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"AutoRun/Lock: No User Access If \u003e=$80 (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"AUTORUN",
"Value":214,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"AYINT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"AYINT",
"Value":57612,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BADNAM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BADNAM",
"Value":57332,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BAS_LOAD":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BAS_LOAD",
"Value":55497,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BAS_READ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BAS_READ",
"Value":56290,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BAS_SAVE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BAS_SAVE",
"Value":55472,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BAS_USRPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft USR() Command Pointer        (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BAS_USRPTR",
"Value":11,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BAS_USRVEC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft USR() Command Vector (JMP)   (3B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BAS_USRVEC",
"Value":10,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BASCALC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BASCALC",
"Value":64449,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BASCLC2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BASCLC2",
"Value":64464,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BASCONT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BASCONT",
"Value":65203,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BASH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Text Base Address, High",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BASH",
"Value":41,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BASL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Text Base Address, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BASL",
"Value":40,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BCKSPC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BCKSPC",
"Value":64881,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BELL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BELL",
"Value":65338,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BELL1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BELL1",
"Value":64473,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BELL2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BELL2",
"Value":64484,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BKGND":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BKGND",
"Value":62454,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BL1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BL1",
"Value":65024,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BLANK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BLANK",
"Value":65028,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BLTU":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BLTU",
"Value":54163,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BLTU2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BLTU2",
"Value":54170,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BREAK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BREAK",
"Value":64076,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BRKV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"User BRK Vector (Address of Break Handler)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BRKV",
"Value":1008,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"BS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"BS",
"Value":64528,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"C_ZERO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"C_ZERO",
"Value":57498,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CALL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CALL",
"Value":61909,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CANCEL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CANCEL",
"Value":64866,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CAPTST":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CAPTST",
"Value":64894,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CAT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CAT",
"Value":58775,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Cursor Horizontal Displacement",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CH",
"Value":36,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHAR1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHAR1",
"Value":63924,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHAR2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHAR2",
"Value":63930,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHARAC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft String Terminator, Alternate",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHARAC",
"Value":13,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHECK_BUMP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHECK_BUMP",
"Value":58706,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHECK_EXIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHECK_EXIT",
"Value":58717,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHECK_SIMPLE_VARIABLE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHECK_SIMPLE_VARIABLE",
"Value":58649,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHECK_VARIABLE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHECK_VARIABLE",
"Value":58659,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHKCLS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHKCLS",
"Value":57016,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHKCOM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHKCOM",
"Value":57022,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHKMEM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHKMEM",
"Value":54230,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHKNUM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHKNUM",
"Value":56682,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHKOPN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHKOPN",
"Value":57019,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHKSTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHKSTR",
"Value":56684,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHKVAL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHKVAL",
"Value":56685,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHRGET":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"~$C8: Get Next Char/Token ZP-Routine (24B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHRGET",
"Value":177,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHRGOT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"~$C8: CHRGET w/o advancing TXTPTR    (18B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHRGOT",
"Value":183,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHRSRCH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHRSRCH",
"Value":65402,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHRSTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHRSTR",
"Value":58950,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CHRTBL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CHRTBL",
"Value":65484,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLEAR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLEAR",
"Value":54890,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLEARC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLEARC",
"Value":54892,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLEOLZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLEOLZ",
"Value":64670,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLEOP1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLEOP1",
"Value":64582,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLREOL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLREOL",
"Value":64668,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLREOL2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLREOL2",
"Value":64672,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLREOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLREOP",
"Value":64578,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLRSC2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLRSC2",
"Value":63544,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLRSC3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLRSC3",
"Value":63548,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLRSCR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLRSCR",
"Value":63538,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CLRTOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CLRTOP",
"Value":63542,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CMPDONE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CMPDONE",
"Value":57281,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CNVTBL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"6+2 Conversion Table (128 Bytes of Memory)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CNVTBL",
"Value":854,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COLD_START":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COLD_START",
"Value":61736,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COLON":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COLON",
"Value":55362,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COLOR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COLOR",
"Value":62031,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COLOR_SHIFT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COLOR_SHIFT",
"Value":62590,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COLORTBL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COLORTBL",
"Value":63222,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COMBYTE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COMBYTE",
"Value":59212,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COMPLEMENT_FAC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COMPLEMENT_FAC",
"Value":59550,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COMPLEMENT_FAC_MANTISSA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COMPLEMENT_FAC_MANTISSA",
"Value":59556,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_03":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_03",
"Value":62668,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_04":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_04",
"Value":62727,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_1C":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_1C",
"Value":62905,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_99999999_9":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_99999999_9",
"Value":60682,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_999999999":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_999999999",
"Value":60687,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_BILLION":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_BILLION",
"Value":60692,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_HALF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_HALF",
"Value":61028,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_LOG_E":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_LOG_E",
"Value":61147,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_LOG_TWO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_LOG_TWO",
"Value":59708,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_NEG_HALF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_NEG_HALF",
"Value":59703,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_ONE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_ONE",
"Value":59667,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_PI_DOUB":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_PI_DOUB",
"Value":61547,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_PI_HALF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_PI_HALF",
"Value":61542,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_RND_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_RND_1",
"Value":61350,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_RND_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_RND_2",
"Value":61354,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_SQR_HALF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_SQR_HALF",
"Value":59693,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_SQR_TWO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_SQR_TWO",
"Value":59698,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CON_TEN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CON_TEN",
"Value":59984,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CONINT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CONINT",
"Value":59131,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CONT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CONT",
"Value":55446,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COPY_ARG_TO_FAC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COPY_ARG_TO_FAC",
"Value":60243,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COPY_FAC_TO_ARG_ROUNDED":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COPY_FAC_TO_ARG_ROUNDED",
"Value":60259,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COPY_RESULT_INTO_FAC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COPY_RESULT_INTO_FAC",
"Value":60134,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COS",
"Value":61418,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COSINE_TABLE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COSINE_TABLE",
"Value":62906,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COUT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COUT",
"Value":65005,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COUT1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COUT1",
"Value":65008,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"COUTZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"COUTZ",
"Value":65014,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CPRTYP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft FRMEVL Compare Flag (\u003e,=,\u003c) (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CPRTYP",
"Value":137,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CR",
"Value":64610,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CRDO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CRDO",
"Value":56059,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CRMON":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CRMON",
"Value":65270,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CROUT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CROUT",
"Value":64910,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CROUT1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CROUT1",
"Value":64907,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CSWL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Character Output Hook, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CSWL",
"Value":54,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CTRL_C_TYPED":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CTRL_C_TYPED",
"Value":55395,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CURLIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Current Applesoft Line Number         (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CURLIN",
"Value":117,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CURLINH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Current Applesoft Line Number, High   (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CURLINH",
"Value":118,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CURLSV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Current Line Safe           (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CURLSV",
"Value":246,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"CV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Cursor Vertical Displacement",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"CV",
"Value":37,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DATA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DATA",
"Value":55701,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DATAFLG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft DATA Statement Flag",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DATAFLG",
"Value":19,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DATAN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DATAN",
"Value":55715,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DATAOUT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DATAOUT",
"Value":64950,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DATLIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Line Number of Current DATA Statement (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DATLIN",
"Value":123,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DECTBL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DECTBL",
"Value":61033,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DEF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DEF",
"Value":58131,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DEL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DEL",
"Value":62257,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DIG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DIG",
"Value":65418,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DIM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DIM",
"Value":57305,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DIMFLG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Array Dimension Flag (DIM Call \u003c\u003e 0)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DIMFLG",
"Value":16,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DISKID":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DISKID",
"Value":64258,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DIV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DIV",
"Value":59998,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DIV10":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DIV10",
"Value":59989,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DOSPC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DOSPC",
"Value":56117,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DRAW":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DRAW",
"Value":63337,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DRAW1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DRAW1",
"Value":62981,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DRWPNT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DRWPNT",
"Value":63277,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DSCLEN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft String Descriptor Length    (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DSCLEN",
"Value":143,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DSCPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft String Descriptor Pointer   (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DSCPTR",
"Value":140,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"DSTPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Move Strings Destination Pointer      (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"DSTPTR",
"Value":96,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"END":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"END",
"Value":55408,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"END2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"END2",
"Value":55409,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"END4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"END4",
"Value":55434,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ENDCHR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft String Terminator, Primary",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ENDCHR",
"Value":14,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"EQUL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"EQUL",
"Value":57040,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"EQUOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"EQUOP",
"Value":56984,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERLIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERLIN",
"Value":56191,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERR",
"Value":63653,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERR_EXTRA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERR_EXTRA",
"Value":56543,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERR_REENTRY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERR_REENTRY",
"Value":56559,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERR0R":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERR0R",
"Value":54290,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERRDIR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERRDIR",
"Value":58118,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERRFLG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"ONERR GOTO is Active If = #$80        (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERRFLG",
"Value":216,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERRLIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Line# Where ERROR Occurred  (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERRLIN",
"Value":218,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERRNUM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Current Applesoft Error Number Safe   (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERRNUM",
"Value":222,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERROR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERROR",
"Value":54290,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERROR_MSGS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERROR_MSGS",
"Value":53856,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERRPOS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Error Handler TXTPTR Safe   (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERRPOS",
"Value":220,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ERRSTK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Stack Ptr before Error Safe (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ERRSTK",
"Value":223,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ESC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ESC",
"Value":64815,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ESC1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ESC1",
"Value":64556,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ESCNEW":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ESCNEW",
"Value":64421,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ESCNOW":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ESCNOW",
"Value":64411,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ESCOLD":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ESCOLD",
"Value":64407,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"EXECUTE_STATEMENT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"EXECUTE_STATEMENT",
"Value":55336,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"EXECUTE_STATEMENT_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"EXECUTE_STATEMENT_1",
"Value":55338,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"EXIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"EXIT",
"Value":56925,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"EXP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"EXP",
"Value":61193,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"EXPON":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Exponent Safe               (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"EXPON",
"Value":154,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"EXPSGN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Exponent Sign Safe          (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"EXPSGN",
"Value":156,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FAC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Primary Floating Point Accumulator    (6B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FAC",
"Value":157,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FACEXT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"FAC Extra Precision Byte for FP Op\u0027s  (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FACEXT",
"Value":172,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FACSIGN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Primary FAC Unpacked Sign (msb)       (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FACSIGN",
"Value":162,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FADD":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FADD",
"Value":59326,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FADD_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FADD_1",
"Value":59321,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FADD_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FADD_2",
"Value":59342,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FADD_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FADD_3",
"Value":59386,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FADD_4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FADD_4",
"Value":59477,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FADDH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FADDH",
"Value":59296,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FADDT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FADDT",
"Value":59329,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FAE_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FAE_1",
"Value":57939,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FAE_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FAE_2",
"Value":57967,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FAE_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FAE_3",
"Value":57968,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FALSE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FALSE",
"Value":57181,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FCOMP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FCOMP",
"Value":60338,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FCOMP2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FCOMP2",
"Value":60340,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FDIV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FDIV",
"Value":60006,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FDIVT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FDIVT",
"Value":60009,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN",
"Value":60490,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN_1",
"Value":60513,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN_10":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN_10",
"Value":60568,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN_2",
"Value":60516,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN_3",
"Value":60518,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN_4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN_4",
"Value":60551,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN_5":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN_5",
"Value":60554,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN_6":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN_6",
"Value":60556,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN_7":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN_7",
"Value":60574,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN_8":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN_8",
"Value":60576,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIN_9":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIN_9",
"Value":60609,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIND_ARRAY_ELEMENT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIND_ARRAY_ELEMENT",
"Value":57931,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIND_HIGHEST_STRING":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIND_HIGHEST_STRING",
"Value":58504,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FINDATA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FINDATA",
"Value":56480,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIRST":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Lo-Res Plot Coordinates               (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIRST",
"Value":240,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIX_LINKS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIX_LINKS",
"Value":54514,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FIXSEV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FIXSEV",
"Value":64155,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FL1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FL1",
"Value":54814,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FLASH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FLASH",
"Value":62080,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FLOAT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FLOAT",
"Value":60307,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FLOAT_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FLOAT_1",
"Value":60315,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FLOAT_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FLOAT_2",
"Value":60320,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FMT1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FMT1",
"Value":63842,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FMT2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FMT2",
"Value":63910,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FMULT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FMULT",
"Value":59775,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FMULTT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FMULTT",
"Value":59778,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FN_":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FN_",
"Value":56996,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FNC_":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FNC_",
"Value":58177,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FNCDATA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FNCDATA",
"Value":58287,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FNCNAM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Function Name Pointer       (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FNCNAM",
"Value":138,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FNDLIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FNDLIN",
"Value":54810,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FOR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FOR",
"Value":55142,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FORPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft General Purpose Pointer     (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FORPTR",
"Value":133,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FOUT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FOUT",
"Value":60724,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FOUT1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FOUT1",
"Value":60726,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FOUT2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FOUT2",
"Value":60812,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FOUT3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FOUT3",
"Value":60951,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FOUT4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FOUT4",
"Value":61015,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FOUT5":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FOUT5",
"Value":61018,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FOUT6":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FOUT6",
"Value":61023,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FOUTBUFF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Start String at STACK-1 ($FF)         (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FOUTBUFF",
"Value":255,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FPWRT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FPWRT",
"Value":61079,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRE",
"Value":58078,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FREFAC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FREFAC",
"Value":58880,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRESPC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft String Routines\u0027 Temp Ptr   (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRESPC",
"Value":113,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRESTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRESTR",
"Value":58877,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRETMP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRETMP",
"Value":58884,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRETMS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRETMS",
"Value":58933,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRETOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"FreSpcEnd \u0026 StringStorageStart Ptr    (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRETOP",
"Value":111,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRM_ELEMENT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRM_ELEMENT",
"Value":56928,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRM_PERFORM_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRM_PERFORM_1",
"Value":56890,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRM_PERFORM_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRM_PERFORM_2",
"Value":56899,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRM_PRECEDENCE_TEST":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRM_PRECEDENCE_TEST",
"Value":56781,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRM_RECURSE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRM_RECURSE",
"Value":56829,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRM_RELATIONAL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRM_RELATIONAL",
"Value":56804,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRM_STACK_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRM_STACK_1",
"Value":56848,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRM_STACK_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRM_STACK_2",
"Value":56853,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRM_STACK_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRM_STACK_3",
"Value":56864,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRM_VARIABLE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRM_VARIABLE",
"Value":57045,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRMEVL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRMEVL",
"Value":56699,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRMEVL_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRMEVL_1",
"Value":56710,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRMEVL_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRMEVL_2",
"Value":56725,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FRMNUM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FRMNUM",
"Value":56679,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FSUB":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FSUB",
"Value":59303,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FSUBT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FSUBT",
"Value":59306,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"FUNCT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"FUNCT",
"Value":58196,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GARBAG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GARBAG",
"Value":58500,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GARLEN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Garbage Collection Length   (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GARLEN",
"Value":145,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GBASCALC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GBASCALC",
"Value":63559,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GBASH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Graphics Base Address, High",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GBASH",
"Value":39,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GBASL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Graphics Base Address, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GBASL",
"Value":38,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GBCALC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GBCALC",
"Value":63574,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GENERIC_CHRGET":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GENERIC_CHRGET",
"Value":61707,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GENERIC_TXTPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GENERIC_TXTPTR",
"Value":61713,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GERR",
"Value":56589,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GET":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GET",
"Value":56224,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETADR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETADR",
"Value":59218,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETARY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETARY",
"Value":57581,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETARY2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETARY2",
"Value":57583,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETARYPT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETARYPT",
"Value":63449,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETBYT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETBYT",
"Value":59128,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETCHR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETCHR",
"Value":55084,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETEXP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETEXP",
"Value":60648,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETFMT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETFMT",
"Value":63657,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETLN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETLN",
"Value":64874,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETLN1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETLN1",
"Value":64879,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETLNZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETLNZ",
"Value":64871,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETNUM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETNUM",
"Value":65447,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETSPA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETSPA",
"Value":58450,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GETSTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GETSTR",
"Value":59100,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GGERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GGERR",
"Value":63206,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GIQ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GIQ",
"Value":59720,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GIVAYF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GIVAYF",
"Value":58098,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GME":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GME",
"Value":57964,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GO",
"Value":65206,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GO_MOVMF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GO_MOVMF",
"Value":61415,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GO_STROUT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GO_STROUT",
"Value":60721,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GO_TO_LINE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GO_TO_LINE",
"Value":55605,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GOBRKV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Set by DOS to JMP for User BRK Vector",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GOBRKV",
"Value":1007,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GOEND":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GOEND",
"Value":55334,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GOERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GOERR",
"Value":61958,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GOEX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GOEX",
"Value":56888,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GOIQ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GOIQ",
"Value":59122,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GOSUB":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GOSUB",
"Value":55585,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GOTO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GOTO",
"Value":55614,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GR",
"Value":62352,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GSE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GSE",
"Value":57961,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GTBYTC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GTBYTC",
"Value":59125,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GTFORPNT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GTFORPNT",
"Value":54117,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"GTNUM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"GTNUM",
"Value":59206,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"H2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Right End of Horizontal Line (HLINE)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"H2",
"Value":44,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HANDLERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HANDLERR",
"Value":62185,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HCOLOR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HCOLOR",
"Value":63209,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HCOLOR1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Hi-Res Color Mask",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HCOLOR1",
"Value":28,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HCOUNT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Hi-Res Line Step            (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HCOUNT",
"Value":29,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HEADR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HEADR",
"Value":64713,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HFNS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HFNS",
"Value":63161,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGLIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGLIN",
"Value":62778,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGR",
"Value":62434,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGR2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGR2",
"Value":62424,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRCLSN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Graphics Collision Counter     (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRCLSN",
"Value":234,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRCOLOR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Graphics Color Flag/Safe       (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRCOLOR",
"Value":228,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRDX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Drawing Horizontal X-Position  (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRDX",
"Value":208,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRDY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Drawing  Vertical  Y-Position  (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRDY",
"Value":210,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Used in Hi-Res Graphics Drawing       (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRE",
"Value":212,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRHORIZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Byte Horiz. Index from GBASL,H (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRHORIZ",
"Value":229,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRPAGE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Base Page (HPg1=$20, HPg2=$40) (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRPAGE",
"Value":230,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRQUAD":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Graphics Drawing Quadrant      (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRQUAD",
"Value":211,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRROT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Graphics Rotation Value        (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRROT",
"Value":249,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRSCALE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Graphics Drawing Scale Factor  (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRSCALE",
"Value":231,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRSHPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Graphics Shape Pointer         (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRSHPTR",
"Value":232,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Graphics X-Coordinate (H-POSN) (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRX",
"Value":224,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HGRY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Hi-Res Graphics Y-Coordinate (V-POSN) (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HGRY",
"Value":226,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HIGHDS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Copy Ptr: Highest Destination Adrs +1 (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HIGHDS",
"Value":148,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HIGHTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Copy Ptr: Highest Source Address +1   (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HIGHTR",
"Value":150,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HIMEM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HIMEM",
"Value":62086,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HLIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HLIN",
"Value":62002,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HLINE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HLINE",
"Value":63513,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HLINE1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HLINE1",
"Value":63516,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HMASK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Graphics On-the-Fly Color Bit Mask Safe",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HMASK",
"Value":48,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HOME":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HOME",
"Value":64600,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HPLOT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HPLOT",
"Value":63230,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HPLOT0":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HPLOT0",
"Value":62551,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HPOSN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HPOSN",
"Value":62481,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HSHAPE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Hi-Res Screen Byte Pointer",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HSHAPE",
"Value":26,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"HTAB":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"HTAB",
"Value":63463,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IEVEN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IEVEN",
"Value":63643,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IF",
"Value":55753,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IF_TRUE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IF_TRUE",
"Value":55777,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IMGLINNUM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"New Line Image\u0027s Line Number",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IMGLINNUM",
"Value":510,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IMGNXLNPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"New Line Image\u0027s Next Line Pointer",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IMGNXLNPTR",
"Value":508,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IN_NUMBER":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IN_NUMBER",
"Value":61918,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INBUFF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Input Buffer [Range:(512~767)=($200~$2FF)]",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INBUFF",
"Value":512,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INCHR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INCHR",
"Value":54611,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INCREMENT_FAC_MANTISSA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INCREMENT_FAC_MANTISSA",
"Value":59590,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INCREMENT_MANTISSA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INCREMENT_MANTISSA",
"Value":60282,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INDEX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Move Strings Index Pointer            (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INDEX",
"Value":94,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INIT",
"Value":64303,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INLIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INLIN",
"Value":54572,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INLIN2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INLIN2",
"Value":54574,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPDONE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPDONE",
"Value":56518,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPERR",
"Value":56198,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPFIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPFIN",
"Value":56473,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPORT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPORT",
"Value":65163,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPRT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPRT",
"Value":65165,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Input Pointer               (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPTR",
"Value":127,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPUT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPUT",
"Value":56242,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPUT_DATA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPUT_DATA",
"Value":56425,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPUT_FLAG_ZERO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPUT_FLAG_ZERO",
"Value":56297,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPUT_MORE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPUT_MORE",
"Value":56434,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPUTERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPUTERR",
"Value":56177,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INPUTFLG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Input Flag ($00=INPUT, $40=GET, $98=READ)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INPUTFLG",
"Value":21,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INSDS1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INSDS1",
"Value":63618,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INSTART":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INSTART",
"Value":56363,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INSTDSP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INSTDSP",
"Value":63696,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INT",
"Value":60451,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INTFLG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Negative for Integer Variable (%)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INTFLG",
"Value":18,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INVERSE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INVERSE",
"Value":62071,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"INVFLG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Text Mask (Normal=$FF, Flash=$7F, Inv=$3F)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"INVFLG",
"Value":50,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IOPRT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IOPRT",
"Value":65179,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IOPRT1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IOPRT1",
"Value":65191,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IOPRT2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IOPRT2",
"Value":65193,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IQERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IQERR",
"Value":57753,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IRQ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IRQ",
"Value":64064,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"IRQADDR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Address of IRQ Handler",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"IRQADDR",
"Value":1022,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ISCNTC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ISCNTC",
"Value":55384,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ISLETC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ISLETC",
"Value":57469,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"JER":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"JER",
"Value":57755,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"JERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"JERR",
"Value":58418,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"JERROR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"JERROR",
"Value":56696,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"JMM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"JMM",
"Value":62102,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"JMPADRS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Jump (from ZP) to \u003cAddress\u003e (3B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"JMPADRS",
"Value":144,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"JOV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"JOV",
"Value":59958,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"JSYN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"JSYN",
"Value":62254,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"KBDWAIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"KBDWAIT",
"Value":64392,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"KEYIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"KEYIN",
"Value":64795,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"KEYIN2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"KEYIN2",
"Value":64801,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"KSWL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Character Input Hook, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"KSWL",
"Value":56,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LASTPT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"SD Stack: Last Temp Descriptor Ptr    (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LASTPT",
"Value":83,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LEFTSTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LEFTSTR",
"Value":58970,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LEN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LEN",
"Value":59094,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LENGTH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Disassembler Instruction Display Length",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LENGTH",
"Value":47,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LET":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LET",
"Value":55878,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LET_STRING":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LET_STRING",
"Value":55930,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LET2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LET2",
"Value":55907,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LF",
"Value":64614,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LINCOOR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LINCOOR",
"Value":61961,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LINEIMAGE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Program\u0027s New Line Image (should be zero)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LINEIMAGE",
"Value":507,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LINGET":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LINGET",
"Value":55820,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LINNUM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Line Number                 (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LINNUM",
"Value":80,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LINPRT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LINPRT",
"Value":60708,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LIST":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LIST",
"Value":65118,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LIST_0":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LIST_0",
"Value":55002,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LIST_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LIST_1",
"Value":55038,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LIST_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LIST_2",
"Value":55042,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LIST_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LIST_3",
"Value":55076,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LIST_4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LIST_4",
"Value":55092,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LIST2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LIST2",
"Value":65123,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOAD":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOAD",
"Value":55497,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOAD_ARG_FROM_YA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOAD_ARG_FROM_YA",
"Value":59875,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOAD_FAC_FROM_YA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOAD_FAC_FROM_YA",
"Value":60153,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOC0":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Preset to JMP OpCode [$4C] (3B) ;AKA: GOWARM",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOC0",
"Value":0,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOC1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Preset to BASIC Soft/Warm/Ctrl-C Entry (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOC1",
"Value":1,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOC2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Used in Shifting Right (ROR) LOC1-4,X  (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOC2",
"Value":2,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOC3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"=GOSTROUT; Preset to JMP OpCode ($4C)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOC3",
"Value":3,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOC4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"=GOSTROUT+1",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOC4",
"Value":4,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOG",
"Value":59713,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOG_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOG_2",
"Value":59723,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOMEM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOMEM",
"Value":62118,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LOWTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Copy Ptr: Lowest Source Address       (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LOWTR",
"Value":155,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LR_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LR_1",
"Value":62574,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LR_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LR_2",
"Value":62577,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LR_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LR_3",
"Value":62582,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LR_4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LR_4",
"Value":62584,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LRUD1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LRUD1",
"Value":62643,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LRUD2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LRUD2",
"Value":62644,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LRUD3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LRUD3",
"Value":62660,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LRUD4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LRUD4",
"Value":62664,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LRUDX1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LRUDX1",
"Value":62620,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LRUDX2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LRUDX2",
"Value":62621,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LT",
"Value":65056,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"LT2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"LT2",
"Value":65058,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"M_EQU":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"M_EQU",
"Value":53450,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"M_NEG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"M_NEG",
"Value":53447,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"M_REL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"M_REL",
"Value":53453,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MAF":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MAF",
"Value":60262,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MAKE_NEW_ARRAY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MAKE_NEW_ARRAY",
"Value":57784,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MAKE_NEW_VARIABLE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MAKE_NEW_VARIABLE",
"Value":57500,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MAKINT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MAKINT",
"Value":57602,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MASK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Lo-Res Graphics Color Mask (Apple IIc)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MASK",
"Value":46,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MATHTBL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Math Operator Branch Address Table",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MATHTBL",
"Value":53426,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MEMERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MEMERR",
"Value":54288,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MEMSIZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft End of String Space (HIMEM) (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MEMSIZ",
"Value":115,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MFA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MFA",
"Value":60245,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MI1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MI1",
"Value":57625,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MI2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MI2",
"Value":57627,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MIDSTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MIDSTR",
"Value":59025,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MIN",
"Value":57038,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MKINT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MKINT",
"Value":57608,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MNEML":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MNEML",
"Value":63936,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MNEMR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MNEMR",
"Value":64000,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MNNDX1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MNNDX1",
"Value":63678,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MNNDX2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MNNDX2",
"Value":63682,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MNNDX3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MNNDX3",
"Value":63689,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOD8CHK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOD8CHK",
"Value":64941,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MODE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor Mode Flag",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MODE",
"Value":49,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MON":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MON",
"Value":65381,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MONZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MONZ",
"Value":65385,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVE",
"Value":65068,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVE_DOWN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVE_DOWN",
"Value":62725,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVE_HIGHEST_STRING_TO_TOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVE_HIGHEST_STRING_TO_TOP",
"Value":58722,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVE_LEFT_OR_RIGHT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVE_LEFT_OR_RIGHT",
"Value":62565,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVE_RIGHT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVE_RIGHT",
"Value":62602,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVE_UP_OR_DOWN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVE_UP_OR_DOWN",
"Value":62675,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVEX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVEX",
"Value":62844,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVEX2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVEX2",
"Value":62849,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVINS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVINS",
"Value":58836,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVSTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVSTR",
"Value":58850,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MOVSTR_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MOVSTR_1",
"Value":58854,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MSKTBL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MSKTBL",
"Value":62898,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MSLOT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Slot Number ($CS) of Peripheral Card",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MSLOT",
"Value":2040,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MUL10":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MUL10",
"Value":59961,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MULTIPLY_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MULTIPLY_1",
"Value":59824,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MULTIPLY_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MULTIPLY_2",
"Value":59829,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MULTIPLY_SUBS_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MULTIPLY_SUBS_1",
"Value":58038,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"MULTIPLY_SUBSCRIPT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"MULTIPLY_SUBSCRIPT",
"Value":58029,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"N_I_":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"N_I_",
"Value":62073,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"N_I_F_":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"N_I_F_",
"Value":62075,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NAME_NOT_FOUND":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NAME_NOT_FOUND",
"Value":57479,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NAMOK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NAMOK",
"Value":57335,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NEG32768":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NEG32768",
"Value":57598,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NEGATE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NEGATE",
"Value":56064,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NEGOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NEGOP",
"Value":61136,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NEW":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NEW",
"Value":54857,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NEWSTT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NEWSTT",
"Value":55250,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NEXT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NEXT",
"Value":56569,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NEXT_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NEXT_1",
"Value":56575,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NEXT_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NEXT_2",
"Value":56578,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NEXT_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NEXT_3",
"Value":56591,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NEXTCOL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NEXTCOL",
"Value":63583,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NOFIX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NOFIX",
"Value":64163,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NORMAL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NORMAL",
"Value":62067,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NORMALIZE_FAC_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NORMALIZE_FAC_1",
"Value":59433,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NORMALIZE_FAC_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NORMALIZE_FAC_2",
"Value":59438,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NORMALIZE_FAC_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NORMALIZE_FAC_3",
"Value":59508,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NORMALIZE_FAC_4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NORMALIZE_FAC_4",
"Value":59520,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NORMALIZE_FAC_5":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NORMALIZE_FAC_5",
"Value":59533,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NORMALIZE_FAC_6":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NORMALIZE_FAC_6",
"Value":59535,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NOT_":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NOT_",
"Value":56976,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NOTCR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NOTCR",
"Value":64829,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NOTCR1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NOTCR1",
"Value":64863,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NOTMATH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NOTMATH",
"Value":56885,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NOTRACE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NOTRACE",
"Value":62063,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NOWAIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NOWAIT",
"Value":64404,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NUMBERED_LINE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NUMBERED_LINE",
"Value":54364,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NUMCMP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NUMCMP",
"Value":57264,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXDIM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXDIM",
"Value":57302,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXIN",
"Value":56284,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXOP",
"Value":56790,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXSPC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXSPC",
"Value":56108,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXTA1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXTA1",
"Value":64698,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXTA4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXTA4",
"Value":64692,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXTBAS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXTBAS",
"Value":65432,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXTBIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXTBIT",
"Value":65424,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXTBS2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXTBS2",
"Value":65442,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXTBYT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXTBYT",
"Value":64199,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXTCHAR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXTCHAR",
"Value":64885,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXTCHR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXTCHR",
"Value":65453,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXTCOL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXTCOL",
"Value":63733,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"NXTITM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"NXTITM",
"Value":65395,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OLDBRK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OLDBRK",
"Value":64089,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OLDRST":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OLDRST",
"Value":65369,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OLDTEXT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Old Text Pointer            (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OLDTEXT",
"Value":121,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ON_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ON_1",
"Value":55796,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ON_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ON_2",
"Value":55800,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ONEDLY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ONEDLY",
"Value":64738,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ONERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ONERR",
"Value":62155,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ONGOTO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ONGOTO",
"Value":55788,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OR",
"Value":57167,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OUTDO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OUTDO",
"Value":56156,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OUTOFRNG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OUTOFRNG",
"Value":59947,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OUTPORT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OUTPORT",
"Value":65173,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OUTPRT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OUTPRT",
"Value":65175,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OUTQUES":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OUTQUES",
"Value":56154,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OUTSP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OUTSP",
"Value":56151,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"OVERFLOW":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"OVERFLOW",
"Value":59605,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PARCHK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PARCHK",
"Value":57010,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PARSE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PARSE",
"Value":54636,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PARSE_INPUT_LINE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PARSE_INPUT_LINE",
"Value":54617,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PCADJ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PCADJ",
"Value":63827,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PCADJ2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PCADJ2",
"Value":63828,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PCADJ3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PCADJ3",
"Value":63830,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PCADJ4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PCADJ4",
"Value":63836,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PCH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Program Counter Safe, High",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PCH",
"Value":59,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PCL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Program Counter Safe, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PCL",
"Value":58,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PDL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PDL",
"Value":57293,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PEEK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PEEK",
"Value":59236,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PLOT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PLOT",
"Value":63488,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PLOT1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PLOT1",
"Value":63502,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PLOTFNS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PLOTFNS",
"Value":61932,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POINT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POINT",
"Value":59197,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POKE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POKE",
"Value":59259,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POLY_ATN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POLY_ATN",
"Value":61646,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POLY_EXP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POLY_EXP",
"Value":61152,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POLY_LOG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POLY_LOG",
"Value":59672,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POLY_SIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POLY_SIN",
"Value":61557,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POLYNOMIAL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POLYNOMIAL",
"Value":61298,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POLYNOMIAL_ODD":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POLYNOMIAL_ODD",
"Value":61276,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POP",
"Value":55659,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POPRTN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POPRTN",
"Value":55659,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"POS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"POS",
"Value":58111,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PR_COMMA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PR_COMMA",
"Value":56067,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PR_NEXT_CHAR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PR_NEXT_CHAR",
"Value":56111,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PR_NUMBER":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PR_NUMBER",
"Value":61925,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PR_STRING":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PR_STRING",
"Value":56015,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PR_TAB_OR_SPC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PR_TAB_OR_SPC",
"Value":56086,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRA1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRA1",
"Value":64914,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRADR1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRADR1",
"Value":63760,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRADR2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRADR2",
"Value":63764,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRADR3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRADR3",
"Value":63782,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRADR4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRADR4",
"Value":63786,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRADR5":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRADR5",
"Value":63792,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRBL2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRBL2",
"Value":63818,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRBLNK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRBLNK",
"Value":63816,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRBYTE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRBYTE",
"Value":64986,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PREAD":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PREAD",
"Value":64286,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PREAD2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PREAD2",
"Value":64293,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PREFNC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PREFNC",
"Value":56822,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRERR",
"Value":65325,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRGEND":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft End of Program Pointer      (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRGEND",
"Value":175,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRHEX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRHEX",
"Value":64995,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRHEXZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRHEXZ",
"Value":64997,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRINT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRINT",
"Value":56021,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRINT_ERROR_LINNUM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRINT_ERROR_LINNUM",
"Value":54321,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRINT_FAC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRINT_FAC",
"Value":60718,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRINT2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRINT2",
"Value":56023,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRMN2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRMN2",
"Value":63737,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRNTAX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRNTAX",
"Value":63809,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRNTBL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRNTBL",
"Value":63707,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRNTOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRNTOP",
"Value":63700,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRNTX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRNTX",
"Value":63812,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRNTYX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRNTYX",
"Value":63808,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PROCESS_INPUT_ITEM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PROCESS_INPUT_ITEM",
"Value":56305,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PROCESS_INPUT_LIST":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PROCESS_INPUT_LIST",
"Value":56299,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PROGIO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PROGIO",
"Value":55553,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PROMPT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Command Prompt Character",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PROMPT",
"Value":51,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PRYX2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PRYX2",
"Value":64918,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PTRGET":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PTRGET",
"Value":57315,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PTRGET2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PTRGET2",
"Value":57320,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PTRGET3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PTRGET3",
"Value":57322,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PTRGET4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PTRGET4",
"Value":57351,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PULL3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PULL3",
"Value":55749,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PUT_NEW_LINE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PUT_NEW_LINE",
"Value":54453,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PUTEMP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PUTEMP",
"Value":58421,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PUTNEW":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PUTNEW",
"Value":58410,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PUTSTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PUTSTR",
"Value":55931,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PWRCON":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PWRCON",
"Value":64253,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PWREDUP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Power-Up Reset CHKSUM [(SOFTEV+1)EOR #$A5]",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PWREDUP",
"Value":1012,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"PWRUP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"PWRUP",
"Value":64166,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"QINT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"QINT",
"Value":60402,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"QINT_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"QINT_2",
"Value":60434,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"QINT_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"QINT_3",
"Value":60480,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"QT_BREAK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"QT_BREAK",
"Value":54109,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"QT_ERROR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"QT_ERROR",
"Value":54096,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"QT_IN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"QT_IN",
"Value":54104,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"QUARTER":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"QUARTER",
"Value":61552,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RD2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RD2",
"Value":65290,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RD2BIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RD2BIT",
"Value":64762,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RD3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RD3",
"Value":65302,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RDBIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RDBIT",
"Value":64765,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RDBYT2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RDBYT2",
"Value":64750,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RDBYTE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RDBYTE",
"Value":64748,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RDCHAR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RDCHAR",
"Value":64821,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RDKEY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RDKEY",
"Value":64780,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RDSP1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RDSP1",
"Value":64228,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"READ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"READ",
"Value":65277,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"READERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"READERR",
"Value":56187,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ReadSector":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ReadSector",
"Value":50780,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"REASON":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"REASON",
"Value":54243,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RECALL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RECALL",
"Value":62396,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"REGDSP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"REGDSP",
"Value":64215,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"REGZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"REGZ",
"Value":65215,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RELADR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RELADR",
"Value":63800,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RELOPS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RELOPS",
"Value":57189,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"REM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"REM",
"Value":55772,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"REMN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"REMN",
"Value":55718,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"REMSTK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Stack Ptr Before Each Statement Safe  (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"REMSTK",
"Value":248,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RESET":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RESET",
"Value":64098,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RESPERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RESPERR",
"Value":56199,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RESTART":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RESTART",
"Value":54332,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RESTORE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RESTORE",
"Value":65343,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RESTR1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RESTR1",
"Value":65348,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RESULT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"~$66: FP Result of Last Mult* or Div/ (5B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RESULT",
"Value":98,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RESUME":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RESUME",
"Value":62232,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RETURN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RETURN",
"Value":55684,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RGDSP1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RGDSP1",
"Value":64218,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RIGHTSTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RIGHTSTR",
"Value":59014,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RND":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RND",
"Value":61358,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RNDH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Keyin Random Counter Value, High",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RNDH",
"Value":79,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RNDL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Keyin Random Counter Value, Low",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RNDL",
"Value":78,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ROT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ROT",
"Value":63265,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ROUND_FAC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ROUND_FAC",
"Value":60274,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTBL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTBL",
"Value":64281,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTMASK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTMASK",
"Value":63500,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTMSKZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTMSKZ",
"Value":63615,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_1",
"Value":54856,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_10":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_10",
"Value":59295,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_11":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_11",
"Value":59549,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_12":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_12",
"Value":59604,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_13":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_13",
"Value":59874,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_14":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_14",
"Value":60273,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_15":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_15",
"Value":60303,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_16":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_16",
"Value":60433,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_17":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_17",
"Value":60489,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_18":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_18",
"Value":61146,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_19":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_19",
"Value":61349,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_2",
"Value":54934,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_20":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_20",
"Value":61645,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_22":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_22",
"Value":62976,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_23":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_23",
"Value":63221,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_3",
"Value":55383,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_4",
"Value":55471,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_5":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_5",
"Value":55658,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_6":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_6",
"Value":55714,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_7":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_7",
"Value":55819,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_8":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_8",
"Value":56066,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS_9":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS_9",
"Value":58028,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS1",
"Value":63537,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS2",
"Value":63841,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS2B":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS2B",
"Value":64495,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS2D":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS2D",
"Value":64302,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS3",
"Value":64508,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS4",
"Value":64555,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS4B":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS4B",
"Value":64712,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS4C":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS4C",
"Value":64965,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RTS5":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RTS5",
"Value":65047,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"RUN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"RUN",
"Value":55570,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SAV1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SAV1",
"Value":65356,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SAVE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SAVE",
"Value":65354,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SAVE6502":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"6502 Registers Safe (Save Locations)+5",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SAVE6502",
"Value":74,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SAVOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SAVOP",
"Value":56791,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SCALE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SCALE",
"Value":63271,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SCREEN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SCREEN",
"Value":57081,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SCRL1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SCRL1",
"Value":64630,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SCRL2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SCRL2",
"Value":64652,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SCRL3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SCRL3",
"Value":64661,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SCRN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SCRN",
"Value":63601,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SCRN2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SCRN2",
"Value":63609,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SCROLL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SCROLL",
"Value":64624,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SCRTCH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SCRTCH",
"Value":54859,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SERLEN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Holds Length of Series-1              (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SERLEN",
"Value":163,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SERMAIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SERMAIN",
"Value":61302,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SET_VARPNT_AND_YA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SET_VARPNT_AND_YA",
"Value":57566,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETCOL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETCOL",
"Value":63588,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETDA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETDA",
"Value":55379,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETFOR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETFOR",
"Value":60199,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETGR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETGR",
"Value":64320,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETHI":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETHI",
"Value":62105,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETHPG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETHPG",
"Value":62442,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETIFLG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETIFLG",
"Value":65158,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETINV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETINV",
"Value":65152,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETKBD":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETKBD",
"Value":65161,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETMDZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETMDZ",
"Value":65053,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETMODE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETMODE",
"Value":65048,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETNORM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETNORM",
"Value":65156,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETPG3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETPG3",
"Value":64169,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETPTRS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETPTRS",
"Value":54885,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETPWRC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETPWRC",
"Value":64367,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETTXT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETTXT",
"Value":64313,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETVID":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETVID",
"Value":65171,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SETWND":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SETWND",
"Value":64331,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SGN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SGN",
"Value":60304,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SGN_":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SGN_",
"Value":57003,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SHFTSGNX":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"FAC Right Shift Sign Extension        (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SHFTSGNX",
"Value":164,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SHIFT_RIGHT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SHIFT_RIGHT",
"Value":59632,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SHIFT_RIGHT_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SHIFT_RIGHT_1",
"Value":59610,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SHIFT_RIGHT_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SHIFT_RIGHT_2",
"Value":59612,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SHIFT_RIGHT_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SHIFT_RIGHT_3",
"Value":59645,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SHIFT_RIGHT_4":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SHIFT_RIGHT_4",
"Value":59655,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SHIFT_RIGHT_5":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SHIFT_RIGHT_5",
"Value":59665,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SHLOAD":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SHLOAD",
"Value":63349,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SIGN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SIGN",
"Value":60290,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SIGN1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SIGN1",
"Value":60294,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SIGN2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SIGN2",
"Value":60296,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SIGNFLG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Trig Functions Sign Flag    (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SIGNFLG",
"Value":22,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SIN",
"Value":61425,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SIN_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SIN_1",
"Value":61475,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SIN_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SIN_2",
"Value":61478,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SLOOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SLOOP",
"Value":64186,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SNGFLT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SNGFLT",
"Value":58113,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SNTXERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SNTXERR",
"Value":56845,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SOFTEV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Soft Entry (Warm Start) Vector",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SOFTEV",
"Value":1010,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SPEED":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SPEED",
"Value":62050,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SPNT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"S-Reg Safe (Stack Pointer)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SPNT",
"Value":73,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SQR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SQR",
"Value":61069,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STA_IN_FAC_SIGN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STA_IN_FAC_SIGN",
"Value":59474,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STA_IN_FAC_SIGN_AND_EXP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STA_IN_FAC_SIGN_AND_EXP",
"Value":59472,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STACK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Apple-II 6502 Microprocessor Stack",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STACK",
"Value":256,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STATUS":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"P-Reg Safe (Status Register)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STATUS",
"Value":72,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STEP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STEP",
"Value":55215,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STEPZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STEPZ",
"Value":65220,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STITLE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STITLE",
"Value":64357,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STKINI":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STKINI",
"Value":54915,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STOP",
"Value":55406,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STORADV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STORADV",
"Value":64496,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STORE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STORE",
"Value":62367,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STORE_FAC_AT_YX_ROUNDED":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STORE_FAC_AT_YX_ROUNDED",
"Value":60203,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STORE_FAC_IN_TEMP1_ROUNDED":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STORE_FAC_IN_TEMP1_ROUNDED",
"Value":60193,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STORE_FAC_IN_TEMP2_ROUNDED":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STORE_FAC_IN_TEMP2_ROUNDED",
"Value":60190,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STR",
"Value":58309,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRCMP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRCMP",
"Value":57213,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRCMP_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRCMP_1",
"Value":57258,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRCMP_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRCMP_2",
"Value":57269,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STREND":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"End of Variables \u0026 Pointers Storage   (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STREND",
"Value":109,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRINI":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRINI",
"Value":58325,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRLIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRLIT",
"Value":58343,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRLT2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRLT2",
"Value":58349,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRNG1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft String Pointer #1           (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRNG1",
"Value":171,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRNG2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft String Pointer #2           (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRNG2",
"Value":173,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STROUT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STROUT",
"Value":56122,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRPRT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRPRT",
"Value":56125,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRSPA":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRSPA",
"Value":58333,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STRTXT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STRTXT",
"Value":56961,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"STXTPT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"STXTPT",
"Value":54935,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SUBERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SUBERR",
"Value":57750,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SUBFLG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Subscript Flag ($00=Allowed, $80=NOT)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SUBFLG",
"Value":20,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SUBSTRING_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SUBSTRING_1",
"Value":58976,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SUBSTRING_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SUBSTRING_2",
"Value":58983,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SUBSTRING_3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SUBSTRING_3",
"Value":58984,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SUBSTRING_SETUP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SUBSTRING_SETUP",
"Value":59065,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SUBTBL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SUBTBL",
"Value":65507,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SYNCHR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SYNCHR",
"Value":57024,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SYNERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SYNERR",
"Value":57033,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SYNERR_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SYNERR_1",
"Value":55366,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"SYNERR_2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"SYNERR_2",
"Value":55681,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TABV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TABV",
"Value":64347,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TAN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TAN",
"Value":61498,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TAN_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TAN_1",
"Value":61538,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TAPEPNT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TAPEPNT",
"Value":63420,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TEMPPT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"SD Stack: Next Temp Descriptor Ptr    (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TEMPPT",
"Value":82,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TEXT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TEXT",
"Value":62361,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TITLE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TITLE",
"Value":64265,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TKNCNTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Holds Current Token - $80",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TKNCNTR",
"Value":15,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TMPEXP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Used in Applesoft FIN (Eval) Routine  (1B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TMPEXP",
"Value":153,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TMPVPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Temporary Variable Pointer (FAC+3,4)  (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TMPVPTR",
"Value":160,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TOKEN_ADDR_TABLE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TOKEN_ADDR_TABLE",
"Value":53248,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TOKEN_NAME_TABLE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TOKEN_NAME_TABLE",
"Value":53456,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TOSUB":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TOSUB",
"Value":65470,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TRACE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TRACE",
"Value":65218,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TRACE_":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TRACE_",
"Value":55301,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TRUE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TRUE",
"Value":57184,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TXPSV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"TXTPTR Safe: Used in INPUT routine    (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TXPSV",
"Value":135,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TXTPSV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Char/Token Pointer Safe     (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TXTPSV",
"Value":244,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TXTPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"CHRGET\u0027s Next Char/Token Pointer      (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TXTPTR",
"Value":184,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TXTPTRH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TXTPTRH",
"Value":185,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"TXTTAB":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Start of Program Pointer    (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"TXTTAB",
"Value":103,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"UD_1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"UD_1",
"Value":62721,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"UNARY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"UNARY",
"Value":57100,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"UNDERR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"UNDERR",
"Value":55676,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"UNDFNC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"UNDFNC",
"Value":58126,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"UP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"UP",
"Value":64538,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"USE_OLD_ARRAY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"USE_OLD_ARRAY",
"Value":57758,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"USR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"USR",
"Value":65226,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"USRADDR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Monitor User Command (Ctrl-Y) Vector",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"USRADDR",
"Value":1016,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"V2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Bottom End of Vertical Line (VLINE)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"V2",
"Value":45,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VAL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VAL",
"Value":59143,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VALTYP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Variable Type ($00=Num, $FF=Str)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VALTYP",
"Value":17,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VARNAM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Last-Used Variable Name Pointer       (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VARNAM",
"Value":129,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VARPTR":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Last-Used Variable Value Pointer      (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VARPTR",
"Value":131,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VARTAB":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Applesoft Start of Variables Pointer  (2B)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VARTAB",
"Value":105,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VARTIO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VARTIO",
"Value":55536,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VFY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VFY",
"Value":65078,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VFYOK":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VFYOK",
"Value":65112,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VIDOUT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VIDOUT",
"Value":64509,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VIDWAIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VIDWAIT",
"Value":64376,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VLIN":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VLIN",
"Value":62017,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VLINE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VLINE",
"Value":63528,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VLINEZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VLINEZ",
"Value":63526,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VTAB":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VTAB",
"Value":64546,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"VTABZ":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"VTABZ",
"Value":64548,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WAIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WAIT",
"Value":64680,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WAIT2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WAIT2",
"Value":64681,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WAIT3":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WAIT3",
"Value":64682,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WNDBTM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Bottom of Scroll Window",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WNDBTM",
"Value":35,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WNDLFT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Left Column of Scroll Window",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WNDLFT",
"Value":32,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WNDTOP":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Top of Scroll Window",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WNDTOP",
"Value":34,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WNDWDTH":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Width of Scroll Window",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WNDWDTH",
"Value":33,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WR1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WR1",
"Value":65236,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WRBIT":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WRBIT",
"Value":64726,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WRBYT2":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WRBYT2",
"Value":65263,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WRBYTE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WRBYTE",
"Value":65261,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WRITE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WRITE",
"Value":65229,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"WRTAPE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"WRTAPE",
"Value":64741,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"XAM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"XAM",
"Value":64947,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"XAMB":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"XAMB",
"Value":64931,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"XAMPM":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"XAMPM",
"Value":64966,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"XBASIC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"XBASIC",
"Value":65200,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"XDRAW":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"XDRAW",
"Value":63343,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"XDRAW1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"XDRAW1",
"Value":63073,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"XLTBL":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"XLTBL",
"Value":64273,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"XREG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"X-Reg Safe (Index Register X)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"XREG",
"Value":70,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"YREG":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Y-Reg Safe (Index Register Y)",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"YREG",
"Value":71,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"YSAV":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Y-Reg Safe For Monitor Command Processing",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"YSAV",
"Value":52,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"YSAV1":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"Comment":"Y-Reg Safe; Save across JSR VIDOUT/VIDWAIT",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"YSAV1",
"Value":53,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ZERDLY":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ZERDLY",
"Value":64731,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ZERO":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ZERO",
"Value":59953,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ZERO_FAC":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ZERO_FAC",
"Value":59470,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"},

"ZMODE":{
"DataDescriptor":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"Comment":"",
"HasWidth":false,
"Direction":"ReadWrite",
"MultiMask":null,
"Label":"ZMODE",
"Value":65479,
"Source":"Project",
"Type":"ExternalAddr",
"LabelAnno":"None"}}},

"AddressMap":[{
"Offset":0,
"Addr":45056}],
"TypeHints":[{
"Low":0,
"High":0,
"Hint":"Data"},

{
"Low":4352,
"High":5631,
"Hint":"InlineData"},

{
"Low":5632,
"High":5632,
"Hint":"Code"},

{
"Low":8192,
"High":8192,
"Hint":"Data"},

{
"Low":8318,
"High":8320,
"Hint":"Data"},

{
"Low":8322,
"High":8370,
"Hint":"Data"},

{
"Low":8400,
"High":8400,
"Hint":"Data"},

{
"Low":8800,
"High":8800,
"Hint":"Data"},

{
"Low":9061,
"High":9061,
"Hint":"Code"},

{
"Low":9107,
"High":9107,
"Hint":"Code"},

{
"Low":9114,
"High":9114,
"Hint":"Code"},

{
"Low":9801,
"High":9801,
"Hint":"Code"},

{
"Low":9834,
"High":9834,
"Hint":"Code"},

{
"Low":9893,
"High":9893,
"Hint":"Code"},

{
"Low":10086,
"High":10086,
"Hint":"Code"},

{
"Low":10159,
"High":10159,
"Hint":"Code"},

{
"Low":10310,
"High":10310,
"Hint":"Code"},

{
"Low":10390,
"High":10390,
"Hint":"Code"},

{
"Low":10416,
"High":10416,
"Hint":"Code"},

{
"Low":10441,
"High":10441,
"Hint":"Code"},

{
"Low":10513,
"High":10514,
"Hint":"Code"},

{
"Low":10529,
"High":10529,
"Hint":"Code"},

{
"Low":10603,
"High":10603,
"Hint":"Code"},

{
"Low":10619,
"High":10619,
"Hint":"Data"},

{
"Low":10661,
"High":10661,
"Hint":"Data"},

{
"Low":10696,
"High":10697,
"Hint":"Code"},

{
"Low":10716,
"High":10716,
"Hint":"Code"},

{
"Low":10731,
"High":10731,
"Hint":"Data"},

{
"Low":10732,
"High":10732,
"Hint":"Code"},

{
"Low":10959,
"High":10959,
"Hint":"Code"},

{
"Low":11097,
"High":11097,
"Hint":"Data"},

{
"Low":11167,
"High":11168,
"Hint":"Code"},

{
"Low":11185,
"High":11186,
"Hint":"Code"},

{
"Low":11234,
"High":11234,
"Hint":"Code"},

{
"Low":11240,
"High":11240,
"Hint":"Data"},

{
"Low":11503,
"High":11503,
"Hint":"Data"},

{
"Low":11512,
"High":11512,
"Hint":"Data"},

{
"Low":11513,
"High":11513,
"Hint":"Code"},

{
"Low":11626,
"High":11626,
"Hint":"Code"},

{
"Low":11627,
"High":11627,
"Hint":"Data"},

{
"Low":11653,
"High":11653,
"Hint":"Data"},

{
"Low":11654,
"High":11654,
"Hint":"Code"},

{
"Low":11928,
"High":11928,
"Hint":"Code"},

{
"Low":11934,
"High":11934,
"Hint":"Data"},

{
"Low":11962,
"High":11962,
"Hint":"Data"},

{
"Low":11965,
"High":11965,
"Hint":"Data"},

{
"Low":12111,
"High":12111,
"Hint":"Code"},

{
"Low":12127,
"High":12127,
"Hint":"Data"},

{
"Low":12133,
"High":12133,
"Hint":"Code"},

{
"Low":12237,
"High":12237,
"Hint":"Code"},

{
"Low":12249,
"High":12249,
"Hint":"Code"},

{
"Low":12288,
"High":12288,
"Hint":"Code"},

{
"Low":12291,
"High":12291,
"Hint":"Code"},

{
"Low":12294,
"High":12294,
"Hint":"Code"},

{
"Low":12696,
"High":12696,
"Hint":"Data"},

{
"Low":13022,
"High":13022,
"Hint":"Code"},

{
"Low":13055,
"High":13055,
"Hint":"Code"},

{
"Low":13069,
"High":13069,
"Hint":"Data"},

{
"Low":13075,
"High":13075,
"Hint":"Code"},

{
"Low":13253,
"High":13253,
"Hint":"Code"},

{
"Low":13894,
"High":13894,
"Hint":"Code"},

{
"Low":13914,
"High":13914,
"Hint":"Code"},

{
"Low":13958,
"High":13958,
"Hint":"Code"},

{
"Low":13969,
"High":13969,
"Hint":"Code"},

{
"Low":14038,
"High":14038,
"Hint":"Code"},

{
"Low":14053,
"High":14053,
"Hint":"Code"},

{
"Low":14087,
"High":14087,
"Hint":"Code"},

{
"Low":14180,
"High":14180,
"Hint":"Code"},

{
"Low":14203,
"High":14203,
"Hint":"Code"},

{
"Low":14211,
"High":14212,
"Hint":"Code"},

{
"Low":14657,
"High":14657,
"Hint":"Code"},

{
"Low":14874,
"High":14874,
"Hint":"Data"},

{
"Low":14928,
"High":14928,
"Hint":"Data"},

{
"Low":15136,
"High":15136,
"Hint":"Data"},

{
"Low":15248,
"High":15248,
"Hint":"Code"},

{
"Low":15279,
"High":15279,
"Hint":"Code"},

{
"Low":15395,
"High":15395,
"Hint":"Code"},

{
"Low":15573,
"High":15573,
"Hint":"Code"},

{
"Low":15592,
"High":15592,
"Hint":"Code"},

{
"Low":15626,
"High":15626,
"Hint":"Data"},

{
"Low":15631,
"High":15631,
"Hint":"Data"},

{
"Low":15636,
"High":15636,
"Hint":"Data"},

{
"Low":15977,
"High":15977,
"Hint":"Data"},

{
"Low":15981,
"High":15981,
"Hint":"Data"},

{
"Low":15985,
"High":15985,
"Hint":"Data"},

{
"Low":15989,
"High":15989,
"Hint":"Data"},

{
"Low":15993,
"High":15993,
"Hint":"Data"},

{
"Low":15997,
"High":15997,
"Hint":"Data"},

{
"Low":16001,
"High":16001,
"Hint":"Data"},

{
"Low":16005,
"High":16005,
"Hint":"Data"},

{
"Low":16009,
"High":16009,
"Hint":"Data"},

{
"Low":16013,
"High":16013,
"Hint":"Code"},

{
"Low":16091,
"High":16091,
"Hint":"Data"},

{
"Low":16096,
"High":16097,
"Hint":"Data"},

{
"Low":16102,
"High":16102,
"Hint":"Data"},

{
"Low":16107,
"High":16107,
"Hint":"Data"},

{
"Low":16112,
"High":16112,
"Hint":"Data"},

{
"Low":16117,
"High":16117,
"Hint":"Data"},

{
"Low":16122,
"High":16122,
"Hint":"Data"},

{
"Low":16127,
"High":16127,
"Hint":"Data"},

{
"Low":16132,
"High":16132,
"Hint":"Data"},

{
"Low":16137,
"High":16137,
"Hint":"Code"},

{
"Low":16294,
"High":16294,
"Hint":"Data"},

{
"Low":16298,
"High":16298,
"Hint":"Data"},

{
"Low":16302,
"High":16302,
"Hint":"Code"},

{
"Low":16362,
"High":16362,
"Hint":"Code"},

{
"Low":16369,
"High":16369,
"Hint":"Code"},

{
"Low":16442,
"High":16442,
"Hint":"Code"},

{
"Low":16486,
"High":16486,
"Hint":"Data"},

{
"Low":16491,
"High":16491,
"Hint":"Data"},

{
"Low":16496,
"High":16496,
"Hint":"Data"},

{
"Low":16501,
"High":16502,
"Hint":"Data"},

{
"Low":16507,
"High":16507,
"Hint":"Data"},

{
"Low":16512,
"High":16512,
"Hint":"Data"},

{
"Low":16517,
"High":16517,
"Hint":"Data"},

{
"Low":16522,
"High":16522,
"Hint":"Data"},

{
"Low":16527,
"High":16527,
"Hint":"Data"},

{
"Low":16532,
"High":16532,
"Hint":"Data"},

{
"Low":16537,
"High":16537,
"Hint":"Data"},

{
"Low":16542,
"High":16542,
"Hint":"Code"},

{
"Low":16651,
"High":16651,
"Hint":"Code"},

{
"Low":16853,
"High":16853,
"Hint":"Code"},

{
"Low":16862,
"High":16862,
"Hint":"Code"},

{
"Low":16869,
"High":16869,
"Hint":"Code"},

{
"Low":16932,
"High":16933,
"Hint":"Code"},

{
"Low":16946,
"High":16946,
"Hint":"Code"},

{
"Low":16961,
"High":16961,
"Hint":"Code"},

{
"Low":16975,
"High":16975,
"Hint":"Code"},

{
"Low":16979,
"High":16979,
"Hint":"Code"},

{
"Low":16980,
"High":16980,
"Hint":"Data"},

{
"Low":16982,
"High":16982,
"Hint":"Code"},

{
"Low":16994,
"High":16994,
"Hint":"Code"},

{
"Low":17004,
"High":17005,
"Hint":"Code"},

{
"Low":17006,
"High":17006,
"Hint":"Data"},

{
"Low":17007,
"High":17007,
"Hint":"Code"},

{
"Low":17010,
"High":17011,
"Hint":"Code"},

{
"Low":17015,
"High":17015,
"Hint":"Code"},

{
"Low":17024,
"High":17024,
"Hint":"Code"},

{
"Low":17030,
"High":17030,
"Hint":"Code"},

{
"Low":17061,
"High":17062,
"Hint":"Code"},

{
"Low":17098,
"High":17098,
"Hint":"Data"},

{
"Low":17099,
"High":17099,
"Hint":"Code"},

{
"Low":17176,
"High":17176,
"Hint":"Code"},

{
"Low":17198,
"High":17198,
"Hint":"Code"},

{
"Low":17201,
"High":17201,
"Hint":"Code"},

{
"Low":17296,
"High":17296,
"Hint":"Code"},

{
"Low":17305,
"High":17305,
"Hint":"Code"},

{
"Low":17311,
"High":17311,
"Hint":"Code"},

{
"Low":17340,
"High":17340,
"Hint":"Code"},

{
"Low":17368,
"High":17368,
"Hint":"Code"},

{
"Low":17376,
"High":17376,
"Hint":"Code"},

{
"Low":17378,
"High":17378,
"Hint":"Code"},

{
"Low":17564,
"High":17564,
"Hint":"Code"},

{
"Low":17668,
"High":17668,
"Hint":"Code"},

{
"Low":17842,
"High":17842,
"Hint":"Data"},

{
"Low":17850,
"High":17850,
"Hint":"Data"},

{
"Low":17867,
"High":17867,
"Hint":"Code"},

{
"Low":17921,
"High":17921,
"Hint":"Code"},

{
"Low":18013,
"High":18013,
"Hint":"Code"},

{
"Low":18153,
"High":18153,
"Hint":"Code"},

{
"Low":18174,
"High":18174,
"Hint":"Code"},

{
"Low":18209,
"High":18209,
"Hint":"Code"},

{
"Low":18214,
"High":18215,
"Hint":"Code"},

{
"Low":18280,
"High":18281,
"Hint":"Code"},

{
"Low":18287,
"High":18287,
"Hint":"Code"},

{
"Low":18293,
"High":18293,
"Hint":"Code"},

{
"Low":18407,
"High":18407,
"Hint":"Code"},

{
"Low":18432,
"High":18432,
"Hint":"Code"},

{
"Low":18457,
"High":18457,
"Hint":"Code"},

{
"Low":18482,
"High":18482,
"Hint":"Code"},

{
"Low":18486,
"High":18486,
"Hint":"Code"},

{
"Low":18503,
"High":18503,
"Hint":"Code"},

{
"Low":18527,
"High":18527,
"Hint":"Code"},

{
"Low":18532,
"High":18532,
"Hint":"Code"},

{
"Low":18545,
"High":18545,
"Hint":"Code"},

{
"Low":18562,
"High":18562,
"Hint":"Code"},

{
"Low":18574,
"High":18574,
"Hint":"Code"},

{
"Low":18640,
"High":18640,
"Hint":"Code"},

{
"Low":18730,
"High":18730,
"Hint":"Code"},

{
"Low":18753,
"High":18753,
"Hint":"Code"},

{
"Low":18756,
"High":18756,
"Hint":"Code"},

{
"Low":18764,
"High":18764,
"Hint":"Code"},

{
"Low":18786,
"High":18786,
"Hint":"Data"},

{
"Low":18868,
"High":18868,
"Hint":"Data"},

{
"Low":18874,
"High":18874,
"Hint":"Data"},

{
"Low":18880,
"High":18880,
"Hint":"Data"},

{
"Low":18912,
"High":18912,
"Hint":"Data"},

{
"Low":18920,
"High":18920,
"Hint":"Data"},

{
"Low":18928,
"High":18928,
"Hint":"Data"},

{
"Low":18936,
"High":18936,
"Hint":"Data"},

{
"Low":18944,
"High":18944,
"Hint":"Data"},

{
"Low":18976,
"High":18976,
"Hint":"Data"},

{
"Low":18984,
"High":18984,
"Hint":"Data"},

{
"Low":18992,
"High":18992,
"Hint":"Data"},

{
"Low":19000,
"High":19000,
"Hint":"Data"},

{
"Low":19008,
"High":19008,
"Hint":"Code"},

{
"Low":19033,
"High":19033,
"Hint":"Code"},

{
"Low":19042,
"High":19042,
"Hint":"Code"},

{
"Low":19154,
"High":19154,
"Hint":"Code"},

{
"Low":19157,
"High":19158,
"Hint":"Code"},

{
"Low":19311,
"High":19311,
"Hint":"Code"},

{
"Low":19417,
"High":19417,
"Hint":"Code"},

{
"Low":19421,
"High":19421,
"Hint":"Code"},

{
"Low":19426,
"High":19426,
"Hint":"Code"},

{
"Low":19428,
"High":19428,
"Hint":"Code"},

{
"Low":19439,
"High":19439,
"Hint":"Code"},

{
"Low":19739,
"High":19739,
"Hint":"Code"},

{
"Low":19952,
"High":19952,
"Hint":"Code"},

{
"Low":19992,
"High":19992,
"Hint":"Code"},

{
"Low":20000,
"High":20000,
"Hint":"Code"},

{
"Low":20012,
"High":20012,
"Hint":"Code"},

{
"Low":20022,
"High":20022,
"Hint":"Code"},

{
"Low":20062,
"High":20062,
"Hint":"Code"},

{
"Low":20096,
"High":20096,
"Hint":"Code"},

{
"Low":20142,
"High":20142,
"Hint":"Code"},

{
"Low":20147,
"High":20147,
"Hint":"Code"},

{
"Low":20150,
"High":20150,
"Hint":"Code"},

{
"Low":20159,
"High":20159,
"Hint":"Code"},

{
"Low":20162,
"High":20165,
"Hint":"Code"},

{
"Low":20214,
"High":20214,
"Hint":"Code"},

{
"Low":20298,
"High":20298,
"Hint":"Code"},

{
"Low":20313,
"High":20313,
"Hint":"Code"},

{
"Low":20428,
"High":20428,
"Hint":"Data"},

{
"Low":20439,
"High":20451,
"Hint":"Data"},

{
"Low":20455,
"High":20473,
"Hint":"Data"}],
"StatusFlagOverrides":{
"5755":65537},

"Comments":{
"0":"6 empty pgs of RAM/ROM-Image ($B000-$B5FF)",
"1569":"JSR here to find out where one is",
"1787":"5 empty bytes of ROM: $B6FB-$B6FF",
"1792":"9 empty pgs of RAM/ROM-Image ($B700-$BFFF)",
"4096":"~($C00X)[R] Keyboard Input Register",
"4112":"~($C01X)[W] Clear KBD Strobe (KBD\u003c128)",
"4128":"~($C02X)[R] Toggle Cassette Data Output",
"4144":"~($C03X)[R/W] Toggle Speaker Data Output",
"4160":"~($C04X) Output Game Socket Strobe Pulse",
"4176":"[R/W] Set Graphics Display Mode",
"4177":"[R/W] Set Text Only Display Mode",
"4178":"[R/W] Set Full Screen Graphics/Text Mode",
"4179":"[R/W] Set Mixed Graphics \u0026 Text Mode",
"4180":"[R/W] Display Text Page1 (R/W Main V-RAM)",
"4181":"[R/W] Display Text Page2 (R/W Aux V-RAM)",
"4182":"[R/W] Reset HiRes Mode to LoRes/Text Mode",
"4183":"[R/W] Reset LoRes/Text Mode to HiRes Mode",
"4184":"[R/W] CLRAN0: Reset AN0: Toggle OFF (0VDC)",
"4185":"[R/W] SETAN0: * Set AN0: Toggle ON (+5VDC)",
"4186":"[R/W] CLRAN1: Reset AN1: Toggle OFF (0VDC)",
"4187":"[R/W] SETAN1: * Set AN1: Toggle ON (+5VDC)",
"4188":"[R/W] CLRAN2: Reset AN2: Toggle OFF (0VDC)",
"4189":"[R/W] SETAN2: * Set AN2: Toggle ON (+5VDC)",
"4190":"[R/W] CLRAN3: Reset AN3: Toggle OFF (0VDC)",
"4191":"[R/W] SETAN3: * Set AN3: Toggle ON (+5VDC)",
"4192":"+($C068)[R] Cassette Data Input",
"4193":"+($C069)[R] Paddle 0 Pushbutton Switch",
"4194":"+($C06A)[R] Paddle 1 Pushbutton Switch",
"4195":"+($C06B)[R] Paddle 2 Pushbutton Switch",
"4196":"+($C06C)[R] Paddle 0 Analog Input",
"4197":"+($C06D)[R] Paddle 1 Analog Input",
"4198":"+($C06E)[R] Paddle 2 Analog Input",
"4199":"+($C06F)[R] Paddle 3 Analog Input",
"4200":"+($C060)[R] Cassette Data Input",
"4201":"+($C061)[R] Paddle 0 Pushbutton Switch",
"4202":"+($C062)[R] Paddle 1 Pushbutton Switch",
"4203":"+($C063)[R] Paddle 2 Pushbutton Switch",
"4204":"+($C064)[R] Paddle 0 Analog Input",
"4205":"+($C065)[R] Paddle 1 Analog Input",
"4206":"+($C066)[R] Paddle 2 Analog Input",
"4207":"+($C067)[R] Paddle 3 Analog Input",
"4208":"~($C07X)[R/W] Reset All Paddles Trigger",
"4224":"Stepper Motor Control",
"4225":"Stepper Motor Control",
"4226":"ROM Image Empty Space (MTSPC3)!",
"4233":"Starts Drive Motor Spinning",
"4234":"Selects Drive 1",
"4235":"ROM Image Empty Space (MTSPC4)!",
"4236":"Read",
"4237":"ROM Image Empty Space (MTSPC5)!",
"4238":"Write Protect Sense/Read  ",
"4239":"ROM Image Empty Space (MTSPC6)!",
"4352":"Slot ROM Space, Empty!",
"4608":"Slot ROM Space, Empty!",
"4864":"Slot ROM Space, Empty!",
"5120":"Slot ROM Space, Empty!",
"5376":"Slot ROM Space, Empty!",
"5632":"AKA: SLOT6; SLOT6ROM; \u0026 DISK2ROM",
"5634":"\"$20 $00 $03\" is the controller signature",
"5638":"Save Bits for Bit Comparison",
"5640":"Gets incremented (but it started at #3)",
"5641":"Shift High-Bit Left into Carry Flag",
"5642":"Does shifted version overlap?",
"5644":"NO: Doesn\u0027t have two adjacent 1 bits",
"5646":"YES, continue on: Merge",
"5648":"Invert Bits",
"5650":"Clear High \u0026 Low Bits",
"5652":"Initial High- or Adjacent 0-Bits were Set",
"5654":"Shift Low-Bit Right into Carry Flag",
"5655":"Loop If more 1 Bits are in the Byte",
"5657":"We have a winner!  Store Y-Reg in memory.",
"5658":"Actual lookup will be on Hi-Bit Set Bytes,",
"5661":" so they will be read from CNVTBL-128",
"5662":"Try next candidate!?",
"5663":"Loop If [0=\u003c(X-Reg)\u003c128]; it started at #3",
"5665":"JSR to RTS: Puts Our Address on the STACK",
"5668":"Get STACK Pointer",
"5669":"Get Our Address (High Byte) from STACK",
"5672":"(Assuming no interrupts have happened)",
"5673":"Multiply by 16",
"5674":"(Puts Low Nibble into High Nibble)",
"5675":"[(%nnnn0000)\u003c-(%XXXXnnnn)]~[($60)\u003c-($C6)]",
"5676":"Keep it [(%SLOT0000)~($60)] Safe!",
"5678":"Put 16*SLOT# ($60) into X-Reg",
"5679":"Set to Read Mode (Write Protect Sense/Read)",
"5682":"Set to Read Mode (Read)",
"5685":"Select Drive 1",
"5688":"Start Motor \u0026 Spin it Up to Speed",
"5691":"80 Phases (40 Tracks)",
"5693":"Turn OFF Phase N",
"5696":"Get Phase {2 Phases/Track}",
"5697":"MOD the Phase Number to get 0-3",
"5699":"Double it to 0/2/4/6",
"5700":"Add in the Slot Index",
"5702":"Put result into X-Reg",
"5703":"Turn ON Phase 0, 1, 2, or 3",
"5706":"Delay for (26+27*Acc+5*(Acc*Acc))/2 Cycles",
"5708":"Wait 19664 Cycles",
"5711":"Next Phase",
"5712":"Loop If [0=\u003c(Y)\u003c128]; it started at #80",
"5714":"Data Destination Ptr, Low; (Write Output)",
"5716":"IWM: Sector to Read",
"5718":"IWM: Track to Read",
"5720":"DOS Load Buffer Address ($0800), High Byte",
"5722":"Data Destination Ptr, High; (Write Output)",
"5724":"Find the Sector to Read",
"5725":"Find Data; Rentry for Correct T/S found",
"5726":"Wait for a byte; Loop-Back Reentry Point",
"5729":"No byte yet if [0=\u003c(A-Reg)\u003c128], Loop",
"5731":"Is it $D5?",
"5733":"NO, keep looking, Loop",
"5735":"YES, grab another byte",
"5738":"No byte yet if [0=\u003c(A-Reg)\u003c128], Loop",
"5740":"Is it $AA?",
"5742":"NO, Loop: check if it is another $D5",
"5744":"YES, Delay 2 Cycles",
"5745":"Grab a third byte",
"5748":"No byte yet if [0=\u003c(A-Reg)\u003c128], Loop",
"5750":"Is it $96?",
"5752":"YES, Read sector\u0027s Address Data next",
"5754":"Upon entry, did we want Data?",
"5755":"NO, keep looking, Loop",
"5757":"YES, is it Data Prologue?",
"5759":"YES if [(A-Reg)=0], Read the Found Data",
"5761":"NO, keep looking, Loop",
"5763":"Sector # is the 3rd item in Header",
"5765":"Store $96, then Volume, then Track",
"5767":"Read 1st Part, Wait for a byte",
"5770":"No byte yet if [0=\u003c(A-Reg)\u003c128], Loop",
"5772":"1st Byte has Bits 7/5/3/1",
"5773":"Save it for Merging",
"5775":"Read 2nd Part, Wait for a byte",
"5778":"No byte yet if [0=\u003c(A-Reg)\u003c128], Loop",
"5780":"Merge the Bytes/Bits",
"5782":"Is this the 3rd item?",
"5783":"NO, keep looking, Loop",
"5785":"YES, pull P-Reg to keep STACK in balance",
"5786":"Is this the Sector we want?",
"5788":"NO, go back to looking for addresses",
"5790":"YES, this is the Sector we want!",
"5792":"But, is this the Track we want?",
"5794":"NO, go back to looking for addresses",
"5796":"YES, Correct T/S, Go Find Data; Always",
"5798":"Read the Found 6+2 Encoded Sector Data",
"5800":"Save Byte-Counter",
"5802":"Wait for a byte",
"5805":"No byte yet if [0=\u003c(Y-Reg)\u003c128], Loop",
"5807":"Conversion-Data XOR A-Reg --\u003e A-Reg",
"5810":"Get Byte-Counter from Safe",
"5812":"Count Down to Zero (from 86)",
"5813":"Save A-Reg in the Page 3 Buffer",
"5816":"Loop if (Y-Reg)\u003c\u003e0",
"5818":"Save Byte-Counter",
"5820":"Wait for a byte",
"5823":"No byte yet if [0=\u003c(Y-Reg)\u003c128], Loop",
"5825":"Conversion-Data XOR A-Reg --\u003e A-Reg",
"5828":"Get Byte-Counter from Safe",
"5830":"Save A-Reg in the Eventual Data Buffer",
"5832":"Count Up to 256 (Zero: 256 MOD 256 = 0)",
"5833":"Loop if (Y-Reg)\u003c\u003e0",
"5835":"Wait for a byte",
"5838":"No byte yet if [0=\u003c(Y-Reg)\u003c128], Loop",
"5840":"Conversion-Data XOR A-Reg --\u003e A-Reg",
"5843":"Loop if (A)\u003c\u003e(0)",
"5845":"Update 256 Bytes",
"5847":"Run through the 2-bit pieces 3x (86*3=258)",
"5849":"Count Down to Zero (from 86)",
"5850":"If we hit $02FF, go back to $0355",
"5852":"For each Byte in the Data Buffer...",
"5854":"Grab Low Two Bits from 2sBuff ($300-$355)",
"5857":"Roll them into the Low Two Bits of the Byte",
"5858":"[Doesn\u0027t this modify Data in Twos Buffer?]",
"5861":"[Won\u0027t we be using this 2sBuff Data again?]",
"5862":"Save each Modified Byte in the Data Buffer",
"5864":"Count Up to 256 (Zero: 256 MOD 256 = 0)",
"5865":"Loop if (Y-Reg)\u003c\u003e0",
"5867":"Advance the Data Pointer",
"5869":"Advance the Sector Number",
"5871":"The Sector we would read next",
"5873":"Is next Sector \u003c BOOT1?",
"5876":"Put Slot Number in X-Reg",
"5878":"YES, get another Sector; Branches again!",
"5880":"All done, jump to BOOT1",
"5883":"Spare Bytes",
"5888":"Slot ROM Space, Empty!",
"6144":"All Slots RAM/ROM Space, Empty",
"8156":"Empty Space; Base Address (UNFNC-164) for",
"8191":"Tell Slots to Disable their Extension ROM",
"8192":"$80...128...END",
"8194":"$81...129...FOR",
"8196":"$82...130...NEXT",
"8198":"$83...131...DATA",
"8200":"$84...132...INPUT",
"8202":"$85...133...DEL",
"8204":"$86...134...DIM",
"8206":"$87...135...READ",
"8208":"$88...136...GR",
"8210":"$89...137...TEXT",
"8212":"$8A...138...PR#",
"8214":"$8B...139...IN#",
"8216":"$8C...140...CALL",
"8218":"$8D...141...PLOT",
"8220":"$8E...142...HLIN",
"8222":"$8F...143...VLIN",
"8224":"$90...144...HGR2",
"8226":"$91...145...HGR",
"8228":"$92...146...HCOLOR=",
"8230":"$93...147...HPLOT",
"8232":"$94...148...DRAW",
"8234":"$95...149...XDRAW",
"8236":"$96...150...HTAB",
"8238":"$97...151...HOME",
"8240":"$98...152...ROT=",
"8242":"$99...153...SCALE=",
"8244":"$9A...154...SHLOAD",
"8246":"$9B...155...TRACE",
"8248":"$9C...156...NOTRACE",
"8250":"$9D...157...NORMAL",
"8252":"$9E...158...INVERSE",
"8254":"$9F...159...FLASH",
"8256":"$A0...160...COLOR=",
"8258":"$A1...161...POP",
"8260":"$A2...162...VTAB",
"8262":"$A3...163...HIMEM:",
"8264":"$A4...164...LOMEM:",
"8266":"$A5...165...ONERR",
"8268":"$A6...166...RESUME",
"8270":"$A7...167...RECALL",
"8272":"$A8...168...STORE",
"8274":"$A9...169...SPEED=",
"8276":"$AA...170...LET",
"8278":"$AB...171...GOTO",
"8280":"$AC...172...RUN",
"8282":"$AD...173...IF",
"8284":"$AE...174...RESTORE",
"8286":"$AF...175...\u0026",
"8288":"$B0...176...GOSUB",
"8290":"$B1...177...RETURN",
"8292":"$B2...178...REM",
"8294":"$B3...179...STOP",
"8296":"$B4...180...ON",
"8298":"$B5...181...WAIT",
"8300":"$B6...182...LOAD",
"8302":"$B7...183...SAVE",
"8304":"$B8...184...DEF",
"8306":"$B9...185...POKE",
"8308":"$BA...186...PRINT",
"8310":"$BB...187...CONT",
"8312":"$BC...188...LIST",
"8314":"$BD...189...CLEAR",
"8316":"$BE...190...GET",
"8318":"$BF...191...NEW",
"8320":"$D2...210...SGN",
"8322":"$D3...211...INT",
"8324":"$D4...212...ABS",
"8326":"$D5...213...USR",
"8328":"$D6...214...FRE",
"8330":"$D7...215...SCRN(...done special",
"8332":"$D8...216...PDL",
"8334":"$D9...217...POS",
"8336":"$DA...218...SQR",
"8338":"$DB...219...RND",
"8340":"$DC...220...LOG",
"8342":"$DD...221...EXP",
"8344":"$DE...222...COS",
"8346":"$DF...223...SIN",
"8348":"$E0...224...TAN",
"8350":"$E1...225...ATN",
"8352":"$E2...226...PEEK",
"8354":"$E3...227...LEN",
"8356":"$E4...228...STR$",
"8358":"$E5...229...VAL",
"8360":"$E6...230...ASC",
"8362":"$E7...231...CHR$",
"8364":"$E8...232...LEFT$",
"8366":"$E9...233...RIGHT$",
"8368":"$EA...234...MID$",
"8370":"$C8...200...+",
"8371":"ADD Function Address",
"8373":"$C9...201...-",
"8374":"SUBTRACT Function Address",
"8376":"$CA...202...*",
"8377":"MULTIPLY Function Address",
"8379":"$CB...203.../",
"8380":"DIVIDE Function Address",
"8382":"$CC...204...^",
"8383":"EXPONENT (POWER) Function Address",
"8385":"$CD...205...AND",
"8386":"AND Operator Address",
"8388":"$CE...206...OR",
"8389":"OR Operator Address",
"8391":"$CF...207...\u003e...Unary Minus (\"-\")",
"8392":"(GREATER-THAN)-\u003e-(LESS-THAN) Op Address",
"8394":"$D0...208...=...Unary NOT",
"8395":"(EQUAL-TO) Operator Address",
"8397":"$D1...209...\u003c...Unary Plus (\"+\")",
"8398":"(LESS-THAN)-\u003c-(GREATER-THAN) Op Address",
"8400":"$80...128...END",
"8403":"$81...129...FOR",
"8406":"$82...130...NEXT",
"8410":"$83...131...DATA",
"8414":"$84...132...INPUT",
"8419":"$85...133...DEL",
"8422":"$86...134...DIM",
"8425":"$87...135...READ",
"8429":"$88...136...GR",
"8431":"$89...137...TEXT",
"8435":"$8A...138...PR#",
"8438":"$8B...139...IN#",
"8441":"$8C...140...CALL",
"8445":"$8D...141...PLOT",
"8449":"$8E...142...HLIN",
"8453":"$8F...143...VLIN",
"8457":"$90...144...HGR2",
"8461":"$91...145...HGR",
"8464":"$92...146...HCOLOR=",
"8471":"$93...147...HPLOT",
"8476":"$94...148...DRAW",
"8480":"$95...149...XDRAW",
"8485":"$96...150...HTAB",
"8489":"$97...151...HOME",
"8493":"$98...152...ROT=",
"8497":"$99...153...SCALE=",
"8503":"$9A...154...SHLOAD",
"8509":"$9B...155...TRACE",
"8514":"$9C...156...NOTRACE",
"8521":"$9D...157...NORMAL",
"8527":"$9E...158...INVERSE",
"8534":"$9F...159...FLASH",
"8539":"$A0...160...COLOR=",
"8545":"$A1...161...POP",
"8548":"$A2...162...VTAB",
"8552":"$A3...163...HIMEM:",
"8558":"$A4...164...LOMEM:",
"8564":"$A5...165...ONERR",
"8569":"$A6...166...RESUME",
"8575":"$A7...167...RECALL",
"8581":"$A8...168...STORE",
"8586":"$A9...169...SPEED=",
"8592":"$AA...170...LET",
"8595":"$AB...171...GOTO",
"8599":"$AC...172...RUN",
"8602":"$AD...173...IF",
"8604":"$AE...174...RESTORE",
"8611":"$AF...175...\u0026",
"8612":"$B0...176...GOSUB",
"8617":"$B1...177...RETURN",
"8623":"$B2...178...REM",
"8626":"$B3...179...STOP",
"8630":"$B4...180...ON",
"8632":"$B5...181...WAIT",
"8636":"$B6...182...LOAD",
"8640":"$B7...183...SAVE",
"8644":"$B8...184...DEF",
"8647":"$B9...185...POKE",
"8651":"$BA...186...PRINT",
"8656":"$BB...187...CONT",
"8660":"$BC...188...LIST",
"8664":"$BD...189...CLEAR",
"8669":"$BE...190...GET",
"8672":"$BF...191...NEW",
"8675":"$C0...192...TAB(",
"8679":"$C1...193...TO",
"8681":"$C2...194...FN",
"8683":"$C3...195...SPC(",
"8687":"$C4...196...THEN",
"8691":"$C5...197...AT",
"8693":"$C6...198...NOT",
"8696":"$C7...199...STEP",
"8700":"$C8...200...+",
"8701":"$C9...201...-",
"8702":"$CA...202...*",
"8703":"$CB...203.../",
"8704":"$CC...204...^",
"8705":"$CD...205...AND",
"8708":"$CE...206...OR",
"8710":"$CF...207...\u003e",
"8711":"$D0...208...=",
"8712":"$D1...209...\u003c",
"8713":"$D2...210...SGN",
"8716":"$D3...211...INT",
"8719":"$D4...212...ABS",
"8722":"$D5...213...USR",
"8725":"$D6...214...FRE",
"8728":"$D7...215...SCRN(",
"8733":"$D8...216...PDL",
"8736":"$D9...217...POS",
"8739":"$DA...218...SQR",
"8742":"$DB...219...RND",
"8745":"$DC...220...LOG",
"8748":"$DD...221...EXP",
"8751":"$DE...222...COS",
"8754":"$DF...223...SIN",
"8757":"$E0...224...TAN",
"8760":"$E1...225...ATN",
"8763":"$E2...226...PEEK",
"8767":"$E3...227...LEN",
"8770":"$E4...228...STR$",
"8774":"$E5...229...VAL",
"8777":"$E6...230...ASC",
"8780":"$E7...231...CHR$",
"8784":"$E8...232...LEFT$",
"8789":"$E9...233...RIGHT$",
"8795":"$EA...234...MID$",
"8799":"End of Token Name Table",
"8800":"ERR_NOFOR     = *-ERR_MSGS = #$00",
"8816":"ERR_SYNTAX    = *-ERR_MSGS = #$10",
"8822":"ERR_NOGOSUB   = *-ERR_MSGS = #$16",
"8842":"ERR_NODATA    = *-ERR_MSGS = #$2A",
"8853":"ERR_ILLQTY    = *-ERR_MSGS = #$35",
"8869":"ERR_OVERFLOW  = *-ERR_MSGS = #$45",
"8877":"ERR_MEMFULL   = *-ERR_MSGS = #$4D",
"8890":"ERR_UNDEFSTAT = *-ERR_MSGS = #$5A",
"8907":"ERR_BADSUBS   = *-ERR_MSGS = #$6B",
"8920":"ERR_REDIMD    = *-ERR_MSGS = #$78",
"8933":"ERR_ZERODIV   = *-ERR_MSGS = #$85",
"8949":"ERR_ILLDIR    = *-ERR_MSGS = #$95",
"8963":"ERR_BADTYPE   = *-ERR_MSGS = #$A3",
"8976":"ERR_STRLONG   = *-ERR_MSGS = #$B0",
"8991":"ERR_FRMCPX    = *-ERR_MSGS = #$BF",
"9010":"ERR_CANTCONT  = *-ERR_MSGS = #$D2",
"9024":"ERR_UNDEFFUNC = *-ERR_MSGS = #$E0",
"9040":"Ring BELL; Null-Terminated String",
"9046":"Ring BELL; Null-Terminated String",
"9047":"Null-Terminated String",
"9048":"\u003c--------- Null-Terminated String",
"9052":"Null-Terminated String",
"9053":"Ring BELL; Null-Terminated String",
"9059":"Ring BELL; Null-Terminated String",
"9060":"Null-Terminated String",
"9061":"First, calculate our Stack Pointer Index:",
"9062":"We put (S-Reg) into (X-Reg); Now Add 4",
"9063":"(X-Reg) will be (S-Reg) + 4   \u003cand/or\u003e",
"9064":"(X-Reg) will be (Stack Pointer) + 4",
"9065":"Now, (X-Reg) is our Stack Pointer Index",
"9066":"Get Byte from STACK",
"9069":"Is it a FOR Statement (Token)?",
"9071":"NOT a FOR Statement; Return to Caller",
"9073":"YES; Does its NEXT have a Variable?",
"9075":"YES, a Variable is Specified",
"9077":"Get its Variable Pointer, Low (from STACK)",
"9080":"Set our FOR Pointer, Low",
"9082":"Get its Variable Pointer, High (from STACK)",
"9085":"Set our FOR Pointer, High",
"9087":"Compare Variable Pointers, High",
"9090":"NO; So try next Frame (if any)",
"9092":"MAYBE; Get Variable Pointer, Low",
"9094":"Compare Variable Pointers, Low",
"9097":"YES, Pointers are Equal; Return to Caller",
"9099":"Get our Stack Pointer Index",
"9100":"Clear Carry for Add (to Increment our SPI)",
"9101":"(A-Reg) = (X-Reg) + (18 bytes per Frame)",
"9103":"Set (Increment) our Stack Pointer Index",
"9104":"Loop until our SPI is Zero (256 MOD 256)",
"9106":"Return to Caller (See \"Returns:\" above)",
"9107":"Assure [(HIGHDS)=(A,Y)={Low,High}]\u003c(FRETOP)",
"9110":"Set Top of Array Storage, Low (from A-Reg)",
"9112":"Set Top of Array Storage, High (from Y-Reg)",
"9114":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"9115":"Get Highest Source Address +1, Low",
"9117":"Subtract Lowest Source Address, Low",
"9119":"Save Number of Bytes in Partial Page",
"9121":"Save Number of Bytes in Partial Page",
"9122":"Get Highest Source Address +1, High",
"9124":"Subtract Lowest Source Address, High",
"9126":"Set X-Reg = Number of Whole Pages",
"9127":"Set X-Reg = Number of Whole Pages +1",
"9128":"Retrieve Number of Bytes in Partial Page",
"9129":"Taken if NO Partial Page Bytes",
"9131":"Get Highest Source Address +1, Low",
"9133":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"9134":"Subtract Number of Bytes in Partial Page",
"9136":"Set Highest Source Address +1, Low",
"9138":"If NO Borrow, Skip Setting High Byte",
"9140":"Set Highest Source Address +1, High",
"9142":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"9143":"Get Highest Destination Address +1, low",
"9145":"Subtract Number of Bytes in Partial Page",
"9147":"Set Highest Destination Address +1, low",
"9149":"If NO Borrow, Skip Setting High Byte",
"9151":"Set Highest Destination Address +1, High",
"9153":"Always Taken",
"9155":"Get Byte at Highest Source Address +1",
"9157":"Set Byte at Highest Destination Address +1",
"9159":"Move the Remainder of the Page of Bytes",
"9160":"Loop until End of this Page of 256 bytes",
"9162":"Get Byte at Highest Source Address +1",
"9164":"Set Byte at Highest Destination Address +1",
"9166":"Reduce Highest Source Address +1, High",
"9168":"Reduce Highest Destination Address +1, High",
"9170":"Move another Block of 256 Bytes?",
"9171":"YES; Move NEXT Page of Bytes (256)",
"9173":"NO, Finished; Return to Caller",
"9174":"Double it      (* 2 bytes/Address-Pointer)",
"9175":"(Acc) * 2 + 54  : (54 Overhead bytes/page)",
"9177":"Deficient Stack-Space, Do Mem Full Error",
"9179":"Save Result in Stack Pointer Index Safe",
"9181":"Put Stack Pointer in X-Reg",
"9182":"Compare Stack Pointer to Result Saved",
"9184":"Deficient Stack-Space, Do Memory Full Error",
"9186":"Else, Enough Stack-Space, Return to Caller",
"9187":"Assure Y-Reg \u003c FRETOP, High",
"9189":"Enough Free-Space, Return to Caller",
"9191":"Deficient Free-Space, Collect Garbage",
"9193":"Assure A-Reg \u003c FRETOP, Low ",
"9195":"Enough Free-Space, Return to Caller",
"9197":"Save/Push (A-Reg) Byte on STACK",
"9198":"[+9]=[(FAC-TEMP1-1)=($9D-$93-1)=($09)]",
"9200":"Save (Y-Reg) on the STACK next",
"9201":"Save/Push (A-Reg) Byte on STACK",
"9202":"Save TEMP1 \u0026 TEMP2 on the STACK",
"9204":"... (Temporary Save Areas for FAC \u0026 ARG)",
"9205":"Loop-Back until X\u003c0",
"9207":"Maximize Free-Space, Collect Garbage ...",
"9210":"[-9]=[(TEMP1-FAC+1)=($93-$9D+1)=($F7)]",
"9212":"Pull Byte off STACK",
"9213":"Restore TEMP2 \u0026 TEMP1 from the STACK",
"9215":"... (Temporary Save Areas for ARG \u0026 FAC)",
"9216":"Loop-Back until X=0",
"9218":"Pull Byte off STACK",
"9219":"Restore Y-Reg with it (from STACK)",
"9220":"Restore A-Reg (Pull Byte off STACK)",
"9221":"Assure Y-Reg \u003c FRETOP, High",
"9223":"Enough Free-Space, Return to Caller",
"9225":"Deficient Free-Space, Do Memory Full Error",
"9227":"Assure A-Reg \u003c FRETOP, Low ",
"9229":"Deficient Free-Space, Do Memory Full Error",
"9231":"Enooough Free-Space, Return to Caller",
"9232":"Get \"?Out Of Memory\" Error Message Index",
"9234":"Is ONERR turned ON?",
"9236":"YES, ONERR is turned ON",
"9238":"NO, ONERR is turned OFF; Goto (Part 2)",
"9241":"Print a Carriage \u003cReturn\u003e Character",
"9244":"Print a Qustion Mark (\"?\") Character",
"9247":"Get a Char from the Error Messages Table",
"9250":"Save Char on STACK",
"9251":"Print Error Message (one Char at a time)",
"9254":"Get set for next Char",
"9255":"Restore Character (Pull Byte off STACK)",
"9256":"Loop-Back until Char has its high bit set",
"9258":"Reset/Initialize STACK to start at $01F8",
"9261":"Get set to ...",
"9263":"Print \" ERROR\" \u0026 Ring BELL",
"9265":"Print String at [(A,Y)={Low,High}]",
"9268":"Which Program Mode: Running or Direct?",
"9270":"Print Current Line # if NOT in Direct Mode",
"9271":"If Direct (Y was $FF), Do Warm RESTART",
"9273":"If Running (Y was NOT $FF), Print Line #",
"9276":"Print a Carriage \u003cReturn\u003e Character",
"9279":"Print the Applesoft Prompt Character",
"9281":"Get/Read a Line of Direct Input",
"9284":"Set up CHRGET to Scan the Input Line",
"9286":"[(X,Y)={Low,High}]= CHRGET Next Chr/Tok Ptr ",
"9288":"Defeat ONERR: Clear the Error Flag",
"9290":"Get a Character",
"9293":"Character Got; Null is last char + 1",
"9294":"Loop-Back until finished scanning (A-Reg=0)",
"9296":"Set Direct Mode flag",
"9298":" = Current Line Number, High",
"9300":"If CHRGET saw #, Input is new Prgm Line",
"9302":"Else, (CS) NO Number, So Parse the Line",
"9305":"And, Try Executing the Line",
"9308":"Get End-of-Program Pointer [EOP +(1 or 2)?]",
"9310":"Save as Start-of-Variables Pointer",
"9312":"Do Pointers\u0027 High bytes, too",
"9314":"That Resets Start of Variable Table (LOMEM)",
"9316":"Get Line Number",
"9319":"And Parse the Input Line",
"9322":"Save InBuff Index as End-of-Line Pointer",
"9324":"Is this Line # already in the program?",
"9327":"No; Put New-Line into program",
"9329":"Set Y=1 (for High values)",
"9331":"Get Next-Line\u0027s Address, High",
"9333":"Set Source Pointer, High",
"9335":"Get EOP/Start-of-Variables Pointer, Low",
"9337":"Set Source Pointer, Low",
"9339":"Get Old-Line Pointer, High",
"9341":"Set Destination Pointer, High",
"9343":"Get Old-Line Pointer, Low",
"9345":"Y goes from 1 to 0  (for Low values)",
"9346":"Subtract Next-Line\u0027s Address, Low",
"9348":"Prepare for Add with Carry",
"9349":"Add EOP/Start-of-Variables Pointer, Low",
"9351":"Set EOP/Start-of-Variables Pointer, Low",
"9353":"Set Destination Pointer, Low",
"9355":"Get EOP/Start-of-Variables Pointer, High",
"9357":"Subtract 1",
"9359":"Set EOP/Start-of-Variables Pointer, High",
"9361":"Subtract Old-Line Pointer, High",
"9363":"Save Result in X-Reg",
"9364":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"9365":"Get Old-Line Pointer, Low",
"9367":"Subtract EOP/Start-of-Variables Ptr, Low",
"9369":"Save Result in Y-Reg",
"9370":"No borrow, so skip changing High values",
"9372":"Increment Index to Move Whole Memory Pages",
"9373":"Decrement Destination Pointer, High",
"9375":"Prepare for Add with Carry",
"9376":"Add Source Pointer, Low",
"9378":"No carry, so skip changing High values",
"9380":"Decrement Source Pointer, High",
"9382":"We\u0027re done with it, so clear it",
"9383":"Get Byte at Source Address",
"9385":"Set Byte at Destination Address",
"9387":"Incerment Index to Move Partial Page",
"9388":"Loop until Done: (Byte Counter)=0",
"9390":"Increment Source Pointer",
"9392":"Increment Destination Pointer",
"9394":"Decrement Index to Move Whole Memory Pages",
"9395":"Loop until Done: (Page Counter)=0",
"9397":"Any Characters After Line Number?",
"9400":"No (INBUFF is empty), so nothing to insert",
"9402":"Get String-Space-Top (HIMEM), Low",
"9404":"Get String-Space-Top (HIMEM), High",
"9406":"Set Free-Spc-End/String-Space-Bottom, Low",
"9408":"Set Free-Spc-End/String-Space-Bottom, High",
"9410":"Get EOP/Start-of-Variables, Low",
"9412":"Set Source Pointer, Low",
"9414":"Add End-of-Line Pointer",
"9416":"Set Destination Pointer, Low",
"9418":"Get EOP/Start-of-Variables, High",
"9420":"Set Source Pointer, High",
"9422":"No carry, so skip changing High values",
"9424":"Increment EOP/Start-of-Variables, High",
"9425":"Set Destination Pointer, High",
"9427":"Move Block Up: to make room for New-Line",
"9430":"Get Line-Number, Low",
"9432":"Get Line-Number, High",
"9434":"Set New-Line-Image\u0027s Line-Number, Low",
"9437":"Set New-Line-Image\u0027s Line-Number, High",
"9440":"Get End-of-Variables/Free-Space-Start, Low",
"9442":"Get End-of-Variables/Free-Space-Start, High",
"9444":"Set EOP/Start-of-Variables, Low",
"9446":"Set EOP/Start-of-Variables, High",
"9448":"Get End-of-Line Pointer for countdown",
"9450":"Get New-Line-Image (byte)  [EOL..INBUFF-4]",
"9453":"Count Down               [EOL-1..INBUFF-5]",
"9454":"Put New-Line (byte) into Program",
"9456":"Loop until done  [INBUFF-5 is not copied!]",
"9458":"Reset Start-of-Program \u0026 Clear All Vars",
"9461":"Get Start-of-Program, Low",
"9463":"Get Start-of-Program, High",
"9465":"Set Line Pointer, Low",
"9467":"Set Line Pointer, High",
"9469":"Prepare for Add with Carry?",
"9470":"Hi-Byte of Next Forward Link",
"9472":"At End-of-Program yet?",
"9474":"NO, KEEP GOING! [(Forward Link)\u003e(EOP=0)]",
"9476":"Get Start-of-Variables, Low",
"9478":"Set End-of-Program Pointer, Low",
"9480":"Get Start-of-Variables, High",
"9482":"Set End-of-Program Pointer, High",
"9484":"Do Warm RESTART",
"9487":"Find End of this Line (Max Length \u003c 256)",
"9489":"Fifth is First BASIC Token in Line",
"9490":"Scan Tokenized Line (EOL=0)",
"9492":"Loop until a zero is found",
"9494":"Compute Address of Next Line:",
"9495":"Get this Line\u0027s Length +1",
"9496":"Add it to this Line\u0027s Address, Low",
"9498":"Save Address of Next Line, Low, in X-Reg",
"9499":"Store Forward Link, Low, in this Line:",
"9501":"Set Address of Next Line, Low",
"9503":"Get this Line\u0027s Address, High",
"9505":"Add the Carry bit; This also Clears it",
"9507":"Store Forward Link, High, too:",
"9508":"Set Address of Next Line, High",
"9510":"Set Line Pointer to Next-Line, Low",
"9512":"Set Line Pointer to Next-Line, High",
"9514":"Always Taken; Do the Next Forward Link",
"9516":"Get High ASCII Null Character",
"9518":"Set Command Prompt Character",
"9520":"Get a Line of Input",
"9523":"Is Line\u0027s Length \u003c= Maximum Line Length?",
"9525":"YES, Line\u0027s Length \u003c= 239 Characters",
"9527":"NO, Truncate Line at 239 Characters",
"9529":"End-Of-Line Markers are Null Characters",
"9531":"Set End-Of-Line Marker in Input Buffer",
"9534":"Is Line\u0027s Length = 0?",
"9535":"YES, it is an Empty Input Line",
"9537":"NO, Strip Off each Character\u0027s Sign Bit",
"9540":"Mask Off Sign Bit; Make Character Low ASCII",
"9542":"Put Character back in its place",
"9545":"Are all Characters Naked yet?           ;-)",
"9546":"NO, Loop-back; Keep Stripping them!     :-D",
"9548":"YES; Set A=0, ...",
"9550":"Set X=$FF = [(INBUFF, Low)-1: (0 - 1 = -1)]",
"9552":"Set Y=$01 = [(INBUFF, High)-1: (2 - 1 = 1)]",
"9554":"[(X,Y)={Low,High}] Ptr = (Input-Buffer)-1",
"9555":"Get in (A) \u0026 Make Cursor Character Flash",
"9558":"Mask Off Sign Bit; Make Character Low ASCII",
"9560":"Return to Caller",
"9561":"Get CHRGET\u0027s Next Char/Token Pointer",
"9563":"Prepare for INX at PARSE",
"9564":"Prep Index to Parsed Output Line, too",
"9566":"\u0026 Clear DATA Statement Flag (sign-bit) ",
"9568":"Is this program locked (AUTORUN=$80)?",
"9570":"NO, AUTORUN Flag\u003c128, Parse the Input Line",
"9572":"Pull/Discard Return Address, Low",
"9573":"Pull/Discard Return Address, High",
"9574":"Clear All Variables",
"9577":"Start the Program Running",
"9580":"Increment Poiter to Next Input Character",
"9581":"Get Next Input Character",
"9584":"Is Input flagged as a Data Statement?",
"9586":"YES (DATAFLG = $49)",
"9588":"NO; Is Char a Space?",
"9590":"YES, Ignore Blanks, Loop",
"9592":"Save Character to Set Literal Flag",
"9594":"Is this the start of a Quotation?",
"9596":"YES, Handle the Quotation",
"9598":"NO; Branch If in Data Statement",
"9600":"Is Input Character a Question Mark?",
"9602":"NO, Continue checking Input Character",
"9604":"YES, Replace Question Mark w/ Print Token",
"9606":"Always Taken",
"9608":"Is it a Digit, Colon, Or Semi-Colon?",
"9610":"BLT: NO, It\u0027s Punctuation !\"#$%\u0026\u0027()*+,-./",
"9612":"Is it a Digit, Colon, Or Semi-Colon?",
"9614":"BLT: YES, So it is Not a Token",
"9616":"Save Index to Output Line",
"9618":"Get Token-Name-Table\u0027s Address-1, Low",
"9620":"Set Search Pointer, Low",
"9622":"Get Token-Name-Table\u0027s Address-1, High",
"9624":"Set Search Pointer, High",
"9626":"Use Y-Reg with FAC to address Table",
"9628":"Holds Current Token - $80",
"9630":"Prepare for INY a few lines down",
"9631":"Save Position in Input Line",
"9633":"Prepare for INX a few lines down",
"9634":"Advance Pointer to Token Table",
"9635":"If No Carry Over, No Need to Bump the Page",
"9637":"If Carry Over, Need to Bump the Page",
"9639":"Advance Pointer into Input Line",
"9640":"Get next Character from Input Line",
"9643":"Is Character a Blank?",
"9645":"YES, Ignore All Blanks",
"9647":"NO, Compare to Character in Table",
"9648":"Same as next Character of Token Name?",
"9650":"YES, Continue Matching",
"9652":"MAYBE; Was it same except for bit 7?",
"9654":"NO, Skip to Next Token",
"9656":"YES, End of Token Name; Get Token Number",
"9658":"Did we match AT?",
"9660":"NO, So No Ambiguity",
"9662":"AT could be ATN or \"A TO\"",
"9665":"ATN has precedence over AT",
"9667":"It is ATN, Find It The Hard Way",
"9669":"TO has precedence over AT",
"9671":"It is \"A To\", Find It The Hard Way",
"9673":"Not ATN Or \"A TO\", So Use AT",
"9675":"Get Index to Output Line",
"9677":"Advance Input Index",
"9678":"Advance Output Index",
"9679":"Store Character or Token",
"9682":"Reload it to Test for EOL or EOS",
"9685":"Branch if at End Of Line",
"9687":"Prepare to Subtract \u0026 do it (next)",
"9688":"Is it the End of a Statement?",
"9690":"YES, at EOS: Clear DATAFLG (=0)",
"9692":"(-\u0027:\u0027); Is it a \"DATA\" Token?",
"9694":"NO, Keep DATAFLG as is",
"9696":"Set DATAFLG [(=0) or ($83-$3A=$49)]",
"9698":"Prepare to Subtract \u0026 do it (next)",
"9699":"(-\u0027:\u0027); Is it a \"REM\" Token?",
"9701":"NO, Continue Parsing Line",
"9703":"YES, Save Result (=0): Clear Literal Flag",
"9705":"Get Next Input Character",
"9708":"Branch if at End of Line (=0)",
"9710":"Branch if at Closing Quote (\u0027\"\u0027)",
"9712":"Found ENDCHR (\u0027\"\u0027) \u003c\u003c\u003c or EOL (=0)! \u003e\u003e\u003e",
"9714":"Next Output Char",
"9715":"Set (Put Back) Output Character",
"9718":"Next Input Char",
"9719":"Loop until Literal is done; Always Taken",
"9721":"Get Pointer to Input Line",
"9723":"Advance Token Counter (Token #\u0027s - $80)",
"9725":"Scan Table for High ASCII Characters",
"9727":"Next Token, one beyond that,",
"9728":"It is usually enough to just INC Y-Reg",
"9730":"Next Set of 256 Token Name Characters",
"9732":"Is Character\u0027s Sign Bit Set?",
"9733":"NO, Loop until Next Token Name reached",
"9735":"YES, We\u0027re at Next Name; End Of Table?",
"9737":"NO, Loop until End of TN Table reached",
"9739":"YES, So Not a Keyword",
"9742":"Copy Char \"As Is\"; Always Taken",
"9744":"Set End of Input Line to $00",
"9747":"Set Next Input Character, High",
"9749":"Set TXTPTR = INPUT_BUFFER - 1 = $01FF",
"9751":"Set Next Input Character, Low",
"9753":"Return to Caller",
"9754":"Get Start of Program, Low",
"9756":"Get Start of Program, High",
"9758":"Set Indirect Addressing Index to +1",
"9760":"Set Line Pointer, Low                 [*]",
"9762":"Set Line Pointer, High",
"9764":"Get 2nd byte in Program Line",
"9766":"Branch If End of Program (=0)",
"9768":"Set Indirect Addressing Index to +2",
"9769":"Set Indirect Addressing Index to +3",
"9770":"Get Line # to Find, High",
"9772":"Compare # to Program Line Number, High ",
"9774":"BLT: If Not Found, Return to Caller ",
"9776":"If Found, Check Program Line Number, Low ",
"9778":"Set Indirect Addressing Index to +2",
"9779":"Always Taken",
"9781":"Get Line # to Find, Low",
"9783":"Set Indirect Addressing Index to +2",
"9784":"Compare # to Program Line Number, Low",
"9786":"BLT: If Not Found, Return to Caller",
"9788":"If Found (Carry Set), Return to Caller",
"9790":"Set Indirect Addressing Index to +1",
"9791":"Get Next Line Address (Forward Link), High",
"9793":"X-Reg is Line Pointer, High           [*]",
"9794":"Set Indirect Addressing Index to +0",
"9795":"Get Next Line Address (Forward Link), Low",
"9797":"A-Reg is Line Pointer, Low; Always Taken",
"9799":"Return Carry Clear (=0)",
"9800":"Return to Caller",
"9801":"Return to Caller if more to Statement",
"9803":"No more to it, so do it!",
"9805":"Clear AutoRun: UNLOCK/Enable User Commands",
"9807":"Clear Indirect Addressing Index",
"9808":"Clear Forward Link, Low, at Program Start",
"9810":"Set Indirect Addressing Index to +1",
"9811":"Clear Forward Link, High, at Program Start",
"9813":"Get Start of Program Pointer, Low",
"9815":"Carry is (what it was at entry) Not Known!",
"9817":"Set Start of Variables Pointer, Low",
"9819":"Set End of Program Pointer, Low",
"9821":"Get Start of Program Pointer, High",
"9823":"Add in the Carry bit (Should be Clear!)",
"9825":"Set Start of Variables Pointer, High",
"9827":"Set End of Program Pointer, High",
"9829":"Reset TXTPTR to TXTTAB-1, Start of Program",
"9832":"Clear the Accumulator Register",
"9834":"Return to Caller if NOT at Statement End",
"9836":"Get End of String Space (HIMEM), Low  [*]",
"9838":"Get End of String Space (HIMEM), High",
"9840":"Set Start of String Storage Pointer, Low",
"9842":"Set Start of String Storage Pointer, High",
"9844":"Get Start of Variables Pointer, Low   [*]",
"9846":"Get Start of Variables Pointer, High",
"9848":"Set Start of Arrays Pointer, Low      [*]",
"9850":"Set Start of Arrays Pointer, High",
"9852":"Set StorageEnd/FreSpcStrt Ptr, Low    [*]",
"9854":"Set StorageEnd/FreSpcStrt Ptr, High",
"9856":"Reset Data List Pointer back to its Start",
"9859":"Get Start Addrs of Temp String Descriptors",
"9861":"Set SD Stack: Next Temp Descriptor Pointer",
"9863":"Pull Return Address, Low              [*]",
"9864":"Save it in Y-Reg",
"9865":"Pull Return Address, High             [*]",
"9866":"Start Stack at $1F8 (Could have used $FB)",
"9868":"leaving room for Parsing Input Lines",
"9869":"Push Return Address, High             [*]",
"9870":"Restore from Y-Reg:",
"9871":"Push Return Address, Low              [*]",
"9872":"Clear the Accumulator Register",
"9874":"Clear Pointer, High: Defeats CONT Command",
"9876":"Allow Subscripting",
"9878":"Return to Caller",
"9879":"Prepare for Add with Carry",
"9880":"Get Start of Program Pointer, Low",
"9882":"Add -1 (or Subtract 1)",
"9884":"Set CHRGET\u0027s Next Char/Token Pointer, Low",
"9886":"Get Start of Program Pointer, High",
"9888":"Add -1 (or Subtract 1)",
"9890":"Set CHRGET\u0027s Next Char/Token Pointer, High",
"9892":"Return to Caller",
"9893":"BLT: Branch if No Line Number Specified",
"9895":"(\u003c|=) Branch if No Line Number Specified",
"9897":"Is it a Dash?",
"9899":"It is a Dash, Start at Line 0",
"9901":"Is it a Comma?",
"9903":"NOT a Comma, Error, Return to Caller",
"9905":"Set LINNUM to Start of Range",
"9908":"Find, Convert, \u0026 Point LOWTR at 1st Line",
"9911":"Get Character Got; Is a Range Specified?",
"9914":"Branch if a Range is Not specified",
"9916":"Is it a Dash?",
"9918":"It is a Dash, End at Line Number Specified",
"9920":"Is it a Comma?",
"9922":"NOT a Comma, Error, Return to Caller",
"9924":"Get Next Character: End Line Number",
"9927":"Set LINNUM to End of Range",
"9930":"Branch If Syntax Err",
"9932":"Pull/Discard Return Address, Lo then Hi",
"9933":"(Will Return via JMP NEWSTT)",
"9934":"Check for a Second Number",
"9936":"Any bit set? [(Low\u003e0) OR (High\u003e0)]\u003c\u003e0",
"9938":"YES, there is a Second Number",
"9940":"NO Second Number; Maximize End Range",
"9942":"Set Line Number, Low",
"9944":"Set Line Number, High",
"9946":"Set Indirect Addressing Index to 1",
"9948":"High Byte of Link",
"9950":"End of Program",
"9952":"Check if Ctrl+C has been typed",
"9955":"NO, Print a Carriage \u003cReturn\u003e Character",
"9958":"Set Indirect Addressing Index to 2",
"9959":"Get Line Number, Low",
"9961":"Set X-Reg with it",
"9962":"Set Indirect Addressing Index to 3",
"9963":"Get Line Number, High",
"9965":"Compare it to End of Range, High",
"9967":"Range Done?",
"9969":"Compare X-Reg to End of Range, Low",
"9971":"On Last Line of Range",
"9973":"BGE: Range Done",
"9975":"Save Indirect Addressing Index (=3)",
"9977":"Print Line Number from (X,A)",
"9980":"Get a SPACE Character",
"9982":"Restore Indirect Addressing Index (=3)",
"9984":"Assure character is Low ASCII ",
"9986":"Print Character in A-Reg",
"9989":"Get Horizontal Cursor Position",
"9991":"If CH is over 32, Print a CR \u0026 Tab(5)",
"9993":"BLT: Else, Branch (if less than 33)",
"9995":"Print a Carriage \u003cReturn\u003e Character",
"9998":"Indent Cursor 5 spaces",
"10000":"Set Horizontal Cursor Position",
"10002":"Advance Indirect Addressing Index",
"10003":"Get Next Char/Token in Line being listed",
"10005":"Branch if Not End of Line yet",
"10007":"Set Indirect Addressing Index to 0",
"10008":"Get Link to Next Line, Low",
"10010":"Save it in X-Reg: Forward Link, Low",
"10011":"Set Indirect Addressing Index to 1",
"10012":"Get Link to Next Line, High",
"10014":"Set Pointer to Next Line, Low",
"10016":"Set Pointer to Next Line, High",
"10018":"If Not at Last Line, List Next Line",
"10020":"Get a Carriage Return Character",
"10022":"Print Character in A-Reg",
"10025":"Execute a New Statement",
"10028":"Advance Indirect Addressing Index",
"10029":"Skip Advancing Pointer, High",
"10031":"Advance Table Pointer, High",
"10033":"Get Character from Table",
"10035":"Return to Caller",
"10036":"If Not a Token, Send Character (Branch)",
"10038":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"10039":"Convert Token value to an ordinal Index",
"10041":"Save Count-Down-Index",
"10042":"Save Line Pointer",
"10044":"Get Table Address, Low",
"10046":"Point FAC to Table, Low",
"10048":"Get Table Address, High",
"10050":"Point FAC to Table, High",
"10052":"Initialize Token Names Character Counter",
"10054":"Count down Token Names via X-Reg",
"10055":"Branch when Token Name needed is reached",
"10057":"Inc(Y), Get Char from Table; Ptr is (FAC)",
"10060":"Names are Dextral Character Inverted (DCI)",
"10062":"Do Next Token Name; Always Taken",
"10064":"Get a Space Character",
"10066":"Print the Space Character",
"10069":"Inc(Y), Get Char from Table; Ptr is (FAC)",
"10072":"Got Last Character of Token Name",
"10074":"Print Character in A-Reg",
"10077":"Names are Dextral Character Inverted (DCI)",
"10079":"Print Last Character of Token Name",
"10082":"Get a SPACE Character to End TN with",
"10084":"Continue Listing the Line; Always Taken",
"10086":"Prepare to Set a Flag",
"10088":"Set Subscripts Not Allowed",
"10090":"Do \u003cVar\u003e = \u003cExp\u003e, Store Addr In FORPTR",
"10093":"Is this FOR Variable Active?",
"10096":"NO, it is Inactive;",
"10098":"YES, Cancel It and Enclosed Loops;",
"10099":"Carry is Set, so this adds 16  [How know?]",
"10101":"X was already S+2  [How do you know this?]",
"10102":"Reset Stack Pointer anyway",
"10103":"Pull/Discard Return Address, Lo then Hi",
"10104":"(FOR will Return to Caller Indirectly!)",
"10105":"Assure sufficient STACK Space:",
"10107":"Check Stack Pointer \u003e= $48 (72=9*2+54)",
"10110":"Get offset in Y-Reg to next \":\" or EOL",
"10113":"Prepare for Add with Carry",
"10114":"Get offset in A-Reg to next \":\" or EOL",
"10115":"Add Next Char/Token Pointer, Low",
"10117":"Push Next Statement Address, Low",
"10118":"Get Next Char/Token Pointer, High",
"10120":"Add the Carry bit",
"10122":"Push Next Statement Address, High",
"10123":"Get Line Number, High",
"10125":"Push Line Number, High",
"10126":"Get Line Number, Low",
"10128":"Push Line Number, Low",
"10129":"Get TO Token value",
"10131":"Require TO: Check Current Char \u0026 Get Next",
"10134":"\u003cVar\u003e = \u003cExp\u003e Must be Numeric",
"10137":"Get Final Value, Must be Numeric",
"10140":"Get FAC Unpacked Sign (msb)",
"10142":"Prepare to apply FAC Sign bit",
"10144":"Apply to FAC Mantissa, Top",
"10146":"Set Packed FAC Mantissa, Signed Top",
"10148":"Get STEP Statement Address, Low",
"10150":"Get STEP Statement Address, High",
"10152":"Set for JMP (Indirect): STEP Address, Low",
"10154":"Set for JMP (Indirect): STEP Address, High",
"10156":"Push FAC on STACK; Returns via JMP (INDEX)",
"10159":"Get Constant One (1) Address, Low",
"10161":"Get Constant One (1) Address, High",
"10163":"Unpack FP# at [(A,Y)={Low,High}] into FAC",
"10166":"Get last Character Got",
"10169":"Is STEP Specified?",
"10171":"NO, Do One Step per Iteration",
"10173":"YES, Get Step Amount Specified",
"10176":"Evaluate \u0026 Assure it is Numeric",
"10179":"Check its Sign:",
"10182":"Push Step Amount; Returns via JMP (INDEX)",
"10185":"Get [\u003cVar\u003e = \u003cExp\u003e] Address, High",
"10187":"Push FOR Variable Pointer, High",
"10188":"Get [\u003cVar\u003e = \u003cExp\u003e] Address, Low",
"10190":"Push FOR Variable Pointer, Low",
"10191":"Get FOR Token",
"10193":"Push FOR Token",
"10194":"Get Stack Pointer",
"10195":"Remember it: Save in Stack Pointer Safe",
"10197":"See if Control-C was typed",
"10200":"Get Next Char/Token Pointer, Low",
"10202":"Get Next Char/Token Pointer, High",
"10204":"Are we in Direct Mode?",
"10206":"Line Number is $FF if we\u0027re in Direct Mode",
"10207":"YES, Do Not Save these:",
"10209":"Save Next Char/Token Pointer, Low",
"10211":"Save Next Char/Token Pointer, High",
"10213":"Clear Indirect Addressing Index",
"10215":"Is it the End of the Line?",
"10217":"NO, Branch to see if it is a Colon",
"10219":"Set Indirect Addressing Index",
"10221":"Get Forward Link, High",
"10223":"Prepare for Add with Carry",
"10224":"YES, Forward Link is a 0, So we\u0027re Done!",
"10226":"Advance Indirect Addressing Index",
"10227":"Get Line Number, Low",
"10229":"Set Current Line Number, Low",
"10231":"Advance Indirect Addressing Index",
"10232":"Get Line Number, High",
"10234":"Set Current Line Number, High",
"10236":"Prepare to Add (+2) with Carry Clear",
"10237":"Advance Next Char/Token Pointer, Low",
"10239":"Set Next Char/Token Pointer, Low",
"10241":"Skip High Byte if NO Carry",
"10243":"Advance Next Char/Token Pointer, High",
"10245":"Is TRACE ON? [(bit7)=(OFF\u003c128/ON\u003e127)]",
"10247":"NO, TRACE is OFF, Go Execute Statements",
"10249":"Get Current Line Number, High",
"10251":"Line Number is $FF if in Direct Mode",
"10252":"YES, Direct Command, Go Execute Statements",
"10254":"Get \u0027#\u0027 Character in A-Reg",
"10256":"Print \u0027#\u0027 Character in A-Reg",
"10259":"Get Current Line Number, Low",
"10261":"Get Current Line Number, High",
"10263":"Print the Line Number [(X,A)={Low,High}]",
"10266":"Print a Space (\u0027 \u0027) Character ",
"10269":"Get first Character of Statement",
"10272":"And, Execute Statement",
"10275":"Then, Execute a New Statement",
"10278":"Forward Link is a 0, So we\u0027re Done!",
"10280":"Branch if Null Statement or at End of Line",
"10282":"Is First Character a Token?   [($80-$EA)]",
"10284":"BLT: If NOT Token, MUST BE an Assignment",
"10286":"Is it a Routine-Statement?    [($00-$3F)]",
"10288":"BGE: NO; Do Syntax Error",
"10290":"YES, Double A-Reg to get Index",
"10291":"Set Indirect Addressing Index",
"10292":"Get Routine Address, High",
"10295":"Push Routine Address, High     [High 1st]",
"10296":"Get Routine Address, Low",
"10299":"Push Routine Address, Low       [Low 2nd]",
"10300":"Go get Next Char/Token; RTS to Routine",
"10303":"Handle the Assignment",
"10306":"Is A-Reg a Colon (:)?",
"10308":"YES, Go see if TRACE is ON",
"10310":"NO, Syntax Error",
"10313":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"10314":"Get Start of Program, Low              [*]",
"10316":"[(A)=(Program Start)-1]=(Data Start), Low",
"10318":"Get Start of Program, High             [*]",
"10320":"No Borrow, So Skip High Byte",
"10322":"[(A)=(Program Start)-1]=(Data Start), High",
"10323":"Set Data Pointer, Low                  [*]",
"10325":"Set Data Pointer, High                 [*]",
"10327":"Return to Caller",
"10328":"See if Control-C was typed",
"10331":"Compare Key/Character to High ASCII Ctrl-C",
"10333":"A Control-C was typed, Branch over RTS",
"10335":"Control-C was Not typed, Return to Caller",
"10336":"Read a Key/Character and make it Low ASCII",
"10339":"Get \"CTRL C INTERUPT ATTEMPTED\" ONERR Code",
"10341":"Is ONERR GOTO Enabled?",
"10343":"NO, ONERR GOTO is Disabled, Jump over JMP",
"10345":"YES, Go to ONERR Handler, ONERR Code = 255",
"10348":"Compare Key/Character to Low ASCII Ctrl-C",
"10350":"If Carry Set, Don\u0027t Clear it, Skip next OP",
"10352":"Clear the Carry Flag to END, Not to STOP!",
"10353":"Return if not Ctrl-C, STOP or END commands",
"10355":"Get Next Char/Token Pointer, Low",
"10357":"Get Next Char/Token Pointer, High",
"10359":"Are we in Direct Mode?",
"10361":"Line Number is $FF if we\u0027re in Direct Mode",
"10362":"YES, Skip this Line Number Stuff:",
"10364":"Save Next Char/Token Pointer, Low",
"10366":"Save Next Char/Token Pointer, High",
"10368":"Get Current Line Number, Low",
"10370":"Get Current Line Number, High",
"10372":"Save Current Line Number, Low",
"10374":"Save Current Line Number, High",
"10376":"Pull/Discard Return Address, Low",
"10377":"Pull/Discard Return Address, High",
"10378":"Get \" BREAK\" \u0026 Bell Error Message, Low",
"10380":"Get \" BREAK\" \u0026 Bell Error Message, High",
"10382":"If Carry Clear, END Program \u0026 Restart Warm",
"10384":"Print Error Message \u0026 Restart Warm",
"10387":"Do Warm Restart",
"10390":"Return to Caller if ? not CONT command",
"10392":"Get \"?Can\u0027t Continue\" Error Message Index",
"10394":"Get Old Char/Token Pointer, High",
"10396":"Not at EOL/EOP: No Error, Jump over JMP",
"10398":"Go Print Error Message based on X-Reg",
"10401":"Get Old Char/Token Pointer, Low",
"10403":"Set Next Char/Token Pointer, Low",
"10405":"Set Next Char/Token Pointer, High",
"10407":"Get Address of Last Line Executed, Low",
"10409":"Get Address of Last Line Executed, High",
"10411":"Reset Address of Current Line, Low",
"10413":"Reset Address of Current Line, High",
"10415":"Return to Caller",
"10416":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"10417":"Get End of Program Pointer, Low",
"10419":"Subtract Start of Program Pointer, Low",
"10421":"Save Length of Program, Low",
"10423":"Get End of Program Pointer, High",
"10425":"Subtract Start of Program Pointer, High",
"10427":"Save Length of Program, High",
"10429":"Prepare to Write 3-Byte Header",
"10432":"Write 3-Byte Header (Length \u0026 Lock Byte)",
"10435":"Prepare to Write the Program",
"10438":"Write the Program",
"10441":"Prepare to Read 3-Byte Header",
"10444":"Read 3-Byte Header (Length \u0026 Lock Byte)",
"10447":"Prepare for Add with Carry",
"10448":"Get Start of Program Pointer, Low",
"10450":"Add Length of Program, Low",
"10452":"Set Start of Variables Pointer, Low",
"10454":"Get Start of Program Pointer, High",
"10456":"Add Length of Program, High",
"10458":"Set Start of Variables Pointer, High",
"10460":"Get Flag: If Set, Load Program from Tape",
"10462":"Save Flag: If Set, Auto-Run after Loading",
"10464":"Prepare to Read the Program",
"10467":"Read the Program",
"10470":"If Negative, Auto-Run the Program",
"10472":"If Positive, Do NOT Auto-Run the Program;",
"10474":"Auto-Run is ON, Run Program Now",
"10477":"Auto-Run is OFF, Just Fix Forward Pointers",
"10480":"Get ZP-Address of Line Number Pointer, Low",
"10482":"Get Address of All ZP-Objects, High",
"10484":"Save Address of Line Number Pointer, Low",
"10486":"Save Address of Line Number Pointer, High",
"10488":"Get ZP-Address of Temp Pointer, Low",
"10490":"Save Address of Temp Pointer, Low",
"10492":"Save Address of Temp Pointer, High",
"10494":"Clear the Auto-Run Flag",
"10496":"Return to Caller",
"10497":"Get Start of Program Pointer, Low",
"10499":"Get Start of Program Pointer, High",
"10501":"Save Start of Program Pointer, Low",
"10503":"Save Start of Program Pointer, High",
"10505":"Get Start of Variables Pointer, Low",
"10507":"Get Start of Variables Pointer, High",
"10509":"Save Start of Variables Pointer, Low",
"10511":"Save Start of Variables Pointer, High",
"10513":"Return to Caller",
"10514":"Save Processor Status while subtracting",
"10515":"If in Direct Mode ($FF), make it Run Mode",
"10517":"Restore Processor Status",
"10518":"Branch if Given a Line Number",
"10520":"Else, Run from Program Start",
"10523":"Clear Variables",
"10526":"Run from Line Number Given",
"10529":"Check Stack Pointer \u003e= $3C",
"10531":"Assure sufficient Stack space to do GOSUB",
"10534":"Get CHRGET\u0027s Next Char/Token Pointer, High",
"10536":"Push Next Char/Token Pointer, High",
"10537":"Get CHRGET\u0027s Next Char/Token Pointer, Low",
"10539":"Push Next Char/Token Pointer, Low",
"10540":"Get Current Line Number, High",
"10542":"Push Current Line Number, High",
"10543":"Get Current Line Number, Low",
"10545":"Push Current Line Number, Low",
"10546":"Get Gosub Token ($B0)",
"10548":"Push Gosub Token",
"10549":"Get Char/Token Got w/o advancing TXTPTR",
"10552":"Run Subroutine at Line Number Given",
"10555":"Execute a New Statement",
"10558":"Get GOTO Line",
"10561":"Point Y-Reg at EOL",
"10564":"Get Current Line\u0027s Page Pointer",
"10566":"Is Current Page \u003c GOTO Page?",
"10568":"NO, Search from Program Start",
"10570":"YES, Search from Next Line",
"10571":"Prepare for Add with Carry Set (Adds 1)",
"10572":"Increment Next Char/Token Pointer, Low",
"10574":"Set Index (Next Char/Token Pointer, High)",
"10576":"NO; Always Taken unless crossing boundary",
"10578":"Inc Index (Next Char/Token Pointer, High)",
"10579":"Always Taken",
"10581":"Get Start of Program Pointer, Low",
"10583":"Get Start of Program Pointer, High",
"10585":"Search for GOTO Line",
"10588":"If NOT There, Do Undefined Statement Error",
"10590":"Get General Purpose Pointer, Low",
"10592":"Subtract One, w/o Borrow [A-Data-!C]",
"10594":"Set Next Char/Token Pointer, Low",
"10596":"Get General Purpose Pointer, High",
"10598":"Subtract Zero with Borrow, if any",
"10600":"Set Next Char/Token Pointer, High",
"10602":"Return to Caller (NEWSTT or GOSUB)",
"10603":"Return to Caller if A-Reg \u003c\u003e 0 upon entry",
"10605":"Prepare to Set FOR Pointer Flag",
"10607":"Set FOR Pointer Flag; \u003c\u003c\u003c WRONG HALF! \u003e\u003e\u003e",
"10609":"To cancel FOR/NEXT in Subroutine",
"10612":"Set Stack Pointer (from X Returned)",
"10613":"Last GOSUB Found?",
"10615":"NO, Do Return Routine",
"10617":"Throw a \"?Return Without Gosub\" Error",
"10619":"Fake BIT OpCode to skip next line",
"10620":"Throw an \"?Undef\u0027d Statement\" Error",
"10622":"Go Print Error Message based on X-Reg",
"10625":"Go Throw a \"?Syntax\" Error",
"10628":"Discard GOSUB Token",
"10629":"Pull Current Line Number Pointer, Low",
"10630":"(Should be #TOK_POP*2 = $142) \u003c\u003c\u003c BUG? \u003e\u003e\u003e",
"10632":"Branch if POP: Pull Line Number, High; \u0026 ",
"10634":"Restore Current Line Number Pointer, Low",
"10636":"Pull Current Line Number Pointer, High",
"10637":"Restore Current Line Number Pointer, High",
"10639":"Pull Next Char/Token Pointer, Low",
"10640":"Restore Next Char/Token Pointer, Low",
"10642":"Pull Next Char/Token Pointer, High",
"10643":"Restore Next Char/Token Pointer, High",
"10645":"Get Offset to Next \":\" or EOL (into Y-Reg)",
"10648":"Get Offset to Next \":\" or EOL (into A-Reg)",
"10649":"Prepare for Add with Carry",
"10650":"Add Next Char/Token Pointer, Low",
"10652":"Reset Next Char/Token Pointer, Low",
"10654":"If No Carry-Over, Return to Caller",
"10656":"Advance Next Char/Token Pointer, High",
"10658":"Return to Caller",
"10659":"Get BASIC Inline Instruction Separator",
"10661":"Fake BIT OpCode to skip next line",
"10662":"Get End of BASIC Program Line Char (EOL=0)",
"10664":"Set CHARAC: String Terminator, Alternate",
"10666":"Clear Character (Offset) Couter",
"10668":"Clear ENDCHR: String Terminator, Primary",
"10670":"Get String Terminator, Primary",
"10672":"Get String Terminator, Alternate",
"10674":"Set String Terminator, Alternate",
"10676":"Set String Terminator, Primary",
"10678":"Get Next Character/Token",
"10680":"EOL: A-Reg=0, Y=Offset; Return to Caller",
"10682":"Is it the End Character (\u0027:\u0027 or 0)?",
"10684":"EOS: A-Reg=ENDCHR, Y=Offset; Rtn to Caller",
"10686":"Advance Character (Offset) Couter",
"10687":"Is A-Reg a Quote Character?",
"10689":"NO, Loop-Back (Inner Loop)",
"10691":" ... Loop-Back (Outer Loop); Always Taken",
"10693":"Pull \u0026 Discard this byte",
"10694":"Pull \u0026 Discard this byte",
"10695":"Pull \u0026 Return  this byte",
"10696":"Return to Caller",
"10697":"Evaluate expression \u0026 put result in FAC",
"10700":"Get last Character Got",
"10703":"Is it a \"GOTO\" Token?",
"10705":"YES; Done checking token",
"10707":"NO; Is it a \"THEN\" Token?",
"10709":"NO; So (Maybe), Throw a \"?Syntax\" Error",
"10712":"YES; Is the IF Condition True or False?",
"10714":"Branch if True",
"10716":"(IF is False, so) Skip over rest of Line!",
"10719":"Always Taken",
"10721":"Get last Character Got",
"10724":"Branch if Command Token",
"10726":"Else, Go to Line Number given",
"10729":"Execute Command",
"10732":"Convert (A) to Integer in (FAC+4) \u0026 (X)",
"10735":"Push Integer Result (Token?) onto Stack",
"10736":"Is it a \"GOSUB\" token?",
"10738":"YES, Done checking tokens",
"10740":"NO; Is it a \"GOTO\" token?",
"10742":"NO; So, Throw a \"?Syntax\" Error",
"10744":"YES; Counted to right Case Line # yet?",
"10746":"NO; Keep looking",
"10748":"YES; Retrieve GOTO/GOSUB Code from Stack",
"10749":"And Execute it",
"10752":"Get Next Char/Token from Program Line",
"10755":"Convert ASC # to HEX # in LINNUM",
"10758":"Is Character a comma?",
"10760":"YES; Loop until Case found",
"10762":"Not found, so ignore ON...GOTO/GOSUB",
"10763":"Return to Caller",
"10764":"Prepare to Clear Line Number",
"10766":"Reset Line Number, Low",
"10768":"Reset Line Number, High",
"10770":"Exit Loop if Not a Digit; Return to Caller",
"10772":"(#s after it) Convert Digit to Binary/Hex",
"10774":"Save Binary/Hex Digit",
"10776":"Get Line Number, High",
"10778":"Save Line Number, High; (for Multiplying)",
"10780":"Line # too large (\u003e63999)?",
"10782":"BGE: YES, Indirectly throw a Syntax Error",
"10784":"Get Line Number, Low",
"10786":"Double Temp Line Number, Low          [2x]",
"10787":"Double \u0026 Add Carry to Temp Line Num, High",
"10789":"Double Temp Line Number, Low          [4x]",
"10790":"Double \u0026 Add Carry to Temp Line Num, High",
"10792":"Add Result back into Real Line Number, Low",
"10794":"Set Real Line Number, Low       [4x+1x=5x]",
"10796":"Get Temp Line Number, High            [4x]",
"10798":"Add it to Real Line Number, High",
"10800":"Set Real Line Number, High      [4x+1x=5x]",
"10802":"Double Real Line Number, Low   [2(5x)=10x]",
"10804":"Double \u0026 Add Carry to Real Line Num, High",
"10806":"Get Line Number, Low",
"10808":"Add Digit (saved above)",
"10810":"Set Line Number, Low",
"10812":"If no Carry, Skip High Byte",
"10814":"Else, Add Carry (1) to Line Number, High",
"10816":"Get Next Char/Token",
"10819":"Convert Next Char/Token; (Exit if Not #)",
"10822":"Locate Variable: Returns Address",
"10825":"Save Address of Variable In FORPTR, Lows",
"10827":"Save Address of Variable In FORPTR, Highs",
"10829":"Get Token for Equal Sign (\"=\")",
"10831":"If = Chr Got, Get Next; Else, Syntax Error",
"10834":"Get Integer Flag (Negative if Integer) ",
"10836":"Push/Save Integer Flag",
"10837":"Get Variable Type ($00=Num, $FF=Str)",
"10839":"Push/Save Variable Type",
"10840":"Evaluate Expression Format; Result--\u003eFAC",
"10843":"Pull/Retrieve ValTyp ($00=Num, $FF=Str)",
"10844":"Rotate ValTyp Sign into Carry Flag",
"10845":"Is FAC Type Numeric ($00) or String ($FF)?",
"10848":"If Not Numeric, Do Let for Strings",
"10850":"Pull/Retrieve Integer Flag (Neg if Int) ",
"10851":"Branch if Var is Flagged as Real Variable",
"10853":"Round FAC up to next 32-bit Integer",
"10856":"Truncate to 16-bits \u0026 Normalize Integer",
"10859":"Clear Indirect Addressing Index",
"10861":"Get FAC Integer Value, Low",
"10863":"Save FAC Integer Value in Variable, Lows",
"10865":"Advance Indirect Addressing Index",
"10866":"Get FAC Integer Value, High",
"10868":"Save FAC Integer Value in Variable, Highs",
"10870":"Return to Caller",
"10871":"Round FAC, \u0026 store where FORPNT points",
"10874":"Pull/Discard Integer Flag",
"10875":"Set Indirect Addressing Index to High Byte",
"10877":"Get String Data Address, High  (FRETOP\u003cIt?)",
"10879":"Compare to Top of Free Space, High",
"10881":"YES, String Data is already in Storage Area",
"10883":"NO, String Data is NOT in Storage Area!",
"10885":"Set Indirect Addressing Index to Low Byte",
"10886":"Get String Data Address, Low   (FRETOP\u003cIt?)",
"10888":"Compare to Top of Free Space, Low",
"10890":"YES, String Data is already in Storage Area",
"10892":"Get Descriptor Address Pointer, High",
"10894":"Compare to Start of Variables Pointer, High",
"10896":"NO, String Descriptor/Variable NonExistant",
"10898":"YES, String Descriptor is among Variables",
"10900":"Get Descriptor Address Pointer, Low",
"10902":"Compare to Start of Variables Pointer, Low",
"10904":"YES, String Descriptor is among Variables",
"10906":"Get Descriptor Address Pointer, Low",
"10908":"Get Descriptor Address Pointer, High",
"10910":"Store String Descriptor",
"10913":"Clear Indirect Addressing Index",
"10915":"Get String\u0027s Length from Descriptor",
"10917":"Init Space to receive Descriptor \u0026 String",
"10920":"Get String Descriptor Pointer, Low",
"10922":"Get String Descriptor Pointer, High",
"10924":"Set MOVINS String Descriptor Pointer, Low",
"10926":"Set MOVINS String Descriptor Pointer, High",
"10928":"Move/Install String in Storage Area",
"10931":"Get FAC Address (Descriptor to Free), Low ",
"10933":"Get FAC Address (Descriptor to Free), High",
"10935":"Save Descriptor Address Pointer, Low",
"10937":"Save Descriptor Address Pointer, High",
"10939":"Free Descriptor w/o Freeing up String",
"10942":"Clear Indirect Addressing Index",
"10944":"Get String Length from Descriptor",
"10946":"Set Descriptor Variable, String Length ",
"10948":"Advance Indirect Addressing Index",
"10949":"Get String Address, Low, from Descriptor",
"10951":"Set Descriptor Variable, String Addr, Low",
"10953":"Advance Indirect Addressing Index",
"10954":"Get String Address, High, from Descriptor",
"10956":"Set Descriptor Var, String Addr, High",
"10958":"Return to Caller",
"10959":"Print String at TMPVPTR (FAC+3,4)",
"10962":"Get Next Char/Token w/o advancing TXTPTR",
"10965":"If Z=1, End of Statement: Print a \u003cReturn\u003e",
"10967":"If Z=1, End of Statement: Return to Caller",
"10969":"(A)=\u003e[TAB( Token]?  If so, sets C=1",
"10971":"If == then Go Print Spaces: TAB(X-Reg)",
"10973":"(A)=\u003e[SPC( Token]?  If so, sets C=1",
"10975":"Countermand Comparison: Set C=0 for SPC(",
"10976":"If == then Go Print Spaces: SPC(X-Reg)",
"10978":"(A)=\u003e\",\"?  If so, sets C=1",
"10980":"Countermand Comparison: Set C=0 for \",\"",
"10981":"If == then Go TAB to Next Comma Column",
"10983":"(A)=\u003e\";\"?  If so, sets C=1 for \";\"",
"10985":"If == then Go Print Next Character",
"10987":"Evaluate Expression",
"10990":"Bit Variable Type ($00=Num, $FF=Str)",
"10992":"If String Variable Type, Go Print String",
"10994":"Else, Number: Convert FAC into FOUT-Buffer",
"10997":"Make FOUT-Buffer into a Literal \"String\"",
"11000":"Go Print the String",
"11003":"Get a Carriage Return (Ctrl-M) Character",
"11005":"Print Character in A-Reg",
"11008":"Invert All Bits in A-Reg \u003c\u003c Why? Because:",
"11010":"Return to Caller",
"11011":"Get Cursor\u0027s Horizontal Displacement",
"11013":"(40-16)=24 to keep cursor on screen",
"11015":"Print NxtChr at Next Tab Column, Same Line",
"11017":"Print a Carriage \u003cReturn\u003e Character",
"11020":"Print NxtChr at Start of Next Line; Always",
"11022":"Advance 16 Columns, Same Line",
"11024":"Truncate to Column 16 or 32, Same Line",
"11026":"Set Cursor\u0027s New Horizontal Displacement",
"11028":"Print NxtChr at Column 16|32; Always Taken",
"11030":"Remember: C=0 for SPC(X) or C=1 for TAB(X)",
"11031":"Get NxtChr \u0026 Eval Formula into FAC \u0026 X-Reg",
"11034":"Should be last ChrGot for TAB(X) or SPC(X)",
"11036":"If == Go Print: TAB(X) or SPC(X)?",
"11038":"Else, Throw a \"?Syntax\" Error",
"11041":"Retrieve: C=0 for SPC(X) or C=1 for TAB(X)",
"11042":"Branch if C=0; Print SPC(X-Reg)",
"11044":"Reduce Column Counter to Prior Column",
"11045":"Calculate Space needed for TAB(X)",
"11046":"Subtract without Borrow [(A)=(X-CH-!C)]",
"11048":"If [(CH)\u003c(A)], Already past that Column",
"11050":"SPC([(X)=(A)]) to the specified Column",
"11051":"Advance Column Counter",
"11052":"Reduce Column Counter",
"11053":"Go Print a Space",
"11055":"Get Next Char/Token to Print",
"11058":"Continue processing Print Statement (Loop)",
"11061":"Print a Space via COUT",
"11064":"Reduce Column Counter \u0026 Print Next Space",
"11066":"Make FOUT-Buffer into a Literal \"String\"",
"11069":"Free up TMPVPTR \u0026 a Temp String to use",
"11072":"Set (X) = (Temp String Length);  [counter]",
"11073":"Clear Indirect Addressing Index; [scanner]",
"11075":"Advance (X) = (Temp String Length)",
"11076":"Reduce (X) = (Temp String Length)",
"11077":"Return to Caller when Done: (X)=(0)",
"11079":"Get Next Character from Temp String",
"11081":"Print the Character",
"11084":"Advance Indirect Addressing Index",
"11085":"Was it a Carriage Return Character?",
"11087":"NO; (Loop) Do Next Character",
"11089":"Invert Bits [EOR #$FF would do it, too!]",
"11092":"(Loop) Do Next Character",
"11095":"Print a Space via COUT",
"11097":"Fake BIT OpCode to skip next line",
"11098":"Print a Question Mark via COUT",
"11100":"Set High Bit; Make Character High ASCII",
"11102":"Is it a Control or Visible Character?",
"11104":"BLT: Branch if it is a Control Character",
"11106":"Show (Flash=$40, Lowercase=$20, Else=$00)",
"11108":"Print A-Reg (via Output Device)",
"11111":"Clear High Bit; Make Character Low ASCII",
"11113":"Push/Save/Protect Character, temporarily",
"11114":"Get Output Speed Limit",
"11116":"Limit Output Speed",
"11119":"Pull/Retieve Saved/Protected Character",
"11120":"Return to Caller",
"11121":"Get Type ($00=INPUT, $40=GET, $98=READ)",
"11123":"Taken if INPUT",
"11125":"Taken if READ",
"11127":"Else, from a GET",
"11129":"Always Taken",
"11131":"Get Now DATA Statement Line Number, Low",
"11133":"Get Now DATA Statement Line Number, High",
"11135":"Set Current Applesoft Line Number, Low",
"11137":"Set Current Applesoft Line Number, High",
"11139":"Go Throw a \"?Syntax\" Error",
"11142":"Pull/Retrieve Last Character Got",
"11143":"Is ON ERR turned on?",
"11145":"NO, Give Reentry a try",
"11147":"Get \u0027Bad Response to Input\u0027 Error Code",
"11149":"Go to Error Handler (Part 2)",
"11152":"Get REENTER INPUT Error Message Addr, Low",
"11154":"Get REENTER INPUT Error Message Addr, High",
"11156":"Print String at [(A,Y)={Low,High}]",
"11159":"Get Applesoft Old Text Pointer, Low",
"11161":"Get Applesoft Old Text Pointer, High",
"11163":"Set CHRGET\u0027s Next Char/Token Pointer, Low",
"11165":"Set CHRGET\u0027s Next Char/Token Pointer, High",
"11167":"Return to Caller",
"11168":"Illegal if in Direct Mode",
"11171":"Get Input String Address, Low",
"11173":"Get Input String Address, High",
"11175":"Get Zero (End of Line Marker); Prepare to:",
"11177":"Reset Input Buffer w/ EOL Marker at start",
"11180":"Setup for GET; (Not for INPUT nor READ)",
"11182":"Then, Process Input List",
"11185":"Return to Caller",
"11186":"Check for Optional Prompt String",
"11188":"Taken if No Prompt String Found",
"11190":"Make Prompt String Printable",
"11193":"Must have a Semicolon (\u0027;\u0027) NOW!",
"11195":"Else: Throw a \"?Syntax\" Error",
"11198":"Print the Prompt String",
"11201":"Skip over next line",
"11204":"Print Question Mark (\"?\") Prompt Character",
"11207":"Illegal if in Direct Mode",
"11210":"Get a Comma to:",
"11212":"Prime the Input Buffer",
"11215":"Read a Line \u0026 make Characters Low ASCII",
"11218":"Get first input character again to check:",
"11221":"Compare Key/Character to Low ASCII Ctrl-C",
"11223":"Setup for INPUT; Then, Process Input List",
"11225":"Go to \"Is ONERR GOTO Enabled?\"",
"11228":"Print Question Mark (\"?\") Prompt Character",
"11231":"Go Read a Line \u0026 make Characters Low ASCII",
"11234":"Get Next DATA Statement Address, Low",
"11236":"Get Next DATA Statement Address, High",
"11238":"Setup for READ; Then, Process Input List:",
"11240":"Fake BIT OpCode to skip next line (2 bytes)",
"11241":"Get a Zero; for INPUT Processing only",
"11243":"Set Input Type Flag",
"11245":"Set Input Pointer, Low",
"11247":"Set Input Pointer, High",
"11249":"Locate Variable: Returns Address in",
"11252":"Set General Purpose Pointer, Low",
"11254":"Set General Purpose Pointer, High",
"11256":"Get Next Char/Token Pointer, Low",
"11258":"Get Next Char/Token Pointer, High",
"11260":"Set TXTPTR Safe, Low",
"11262":"Set TXTPTR Safe, High",
"11264":"Get Input Pointer, Low",
"11266":"Get Input Pointer, High",
"11268":"Set Next Char/Token Pointer, Low",
"11270":"Set Next Char/Token Pointer, High",
"11272":"Get Last Char/Token w/o advancing TXTPTR",
"11275":"Char is NOT an End of Line or a Colon",
"11277":"Get Type ($00=INPUT, $40=GET, $98=READ)",
"11279":"Branch if NOT a GET [($40)=(%01000000)]",
"11281":"Get in (A) \u0026 Make Cursor Character Flash",
"11284":"Assure Character is Low ASCII ",
"11286":"Put Character at Start of Input Buffer",
"11289":"Get (Input Buffer, Low)-1 Address",
"11291":"Get (Input Buffer, High)-1 Address",
"11293":"Always Taken",
"11295":"Branch if doing a READ",
"11297":"Else, doinig INPUT: Print \"?\" Prompt Char",
"11300":"Print another \"?\" \u0026 Finish Input Line",
"11303":"Set Next Char/Token Pointer, Low",
"11305":"Set Next Char/Token Pointer, High",
"11307":"Get Next Input Char/Token",
"11310":"Bit Variable Type ($00=Num, $FF=Str)",
"11312":"Branch if Numeric",
"11314":"Get Type ($00=INPUT, $40=GET, $98=READ)",
"11316":"Branch if NOT a GET [($40)=(%01000000)]",
"11318":"Advance Input Character Counter",
"11319":"Set Next Char/Token Pointer, Low",
"11321":"Get a Zero; No other Terminators",
"11323":"Set Alternate String Terminator",
"11325":"Always Taken",
"11327":"Set Alternate String Terminator",
"11329":"Terminate on Zero or Quote",
"11331":"Branch if (A) = (Quote Character)",
"11333":"Terminate on Zero or Colon",
"11335":"Set Alternate String Terminator",
"11337":"Terminate on Zero or Comma",
"11339":"Prepare for Add with Carry",
"11340":"Set Primary String Terminator",
"11342":"Get Next Char/Token Pointer, Low",
"11344":"Get Next Char/Token Pointer, High",
"11346":"Add in the Quote-Carry, If there was one ",
"11348":"If no Carry now, Skip Uping High Address",
"11350":"Advance Input Address, High",
"11351":"Make Input into a Literal \"String\"",
"11354":"Point TXTPTR at String",
"11357":"Install the String/Variable",
"11360":"Skip over Number/Data Input lines",
"11363":"Push/Save Last Character Got",
"11364":"Anything in Input Buffer?",
"11367":"NO; See if READ or INPUT",
"11369":"Pull/Retrieve Last Character Got",
"11370":"Get FP Number at TXTPTR",
"11373":"Negative for Integer Variable (%)",
"11375":"Store Result in Variable",
"11378":"Get Last Character Got",
"11381":"Branch if End of Line or Colon",
"11383":"Comma in Input?",
"11385":"YES; Go Swap Pointers",
"11387":"NO; Nothing else will do",
"11390":"Get Next Char/Token Pointer, Low",
"11392":"Get Next Char/Token Pointer, High",
"11394":"Set Input Pointer, Low",
"11396":"Set Input Pointer, High",
"11398":"Retrieve old TXTPTR from Safe, Low",
"11400":"Retrieve old TXTPTR from Safe, High",
"11402":"Set Next Char/Token Pointer, Low",
"11404":"Set Next Char/Token Pointer, High",
"11406":"Get Last Character Got (from new old ptr)",
"11409":"Branch if End of Statement",
"11411":"Else: See if it is a Comma",
"11414":"Loop-Back to Process Next Input Item",
"11417":"Get Type ($00=INPUT, $40=GET, $98=READ)",
"11419":"YES: Go right back up, to READ/DATA Input",
"11421":"NO: Process Input Error; ReEntry Possible?",
"11424":"Get offset in Y-Reg to next \":\" or EOL",
"11427":"Advance to Start of Next Statement or Line",
"11428":"Is it an EOL or a Colon?",
"11429":"Branch if it is a Colon",
"11431":"Else, EOL: Might be Out Of Data",
"11433":"Advance Indirect Addressing Index to:",
"11434":"Get High-Byte of Forward Link/Pointer",
"11436":"Branch if at End of the Program",
"11438":"Advance Indirect Addressing Index",
"11439":"Get the Line Number, Low",
"11441":"Set Current DATA Statement Line #, Low",
"11443":"Advance Indirect Addressing Index",
"11444":"Get the Line Number, High",
"11446":"Advance Indirect Addressing Index",
"11447":"Set Current DATA Statement Line #, High",
"11449":"Get first Token of Statement",
"11451":"Save Token in X-Reg",
"11452":"Add Y-Reg to TXTPTR",
"11455":"Did we find a DATA Statement?",
"11457":"NOT yet!  (Branch if doing a READ)",
"11459":"YES: GO Read it, too!",
"11462":"Get Input Pointer, Low",
"11464":"Get Input Pointer, High",
"11466":"Get Type ($00=INPUT, $40=GET, $98=READ)",
"11468":"Done if INPUT (or GET); Skip over JMP:",
"11470":"Set Data Pointer to [(A,Y)={Low,High}]",
"11473":"Clear Indirect Addressing Index",
"11475":"Get Next Input Charcter in Line",
"11477":"NO, All is Well (Branch if at End of Line)",
"11479":"Get Error Message Address, Low",
"11481":"Get Error Message Address, High",
"11483":"Print Z-String at [(A,Y)={Low,High}]",
"11486":"Return to Caller",
"11487":"GET/INPUT Error",
"11503":"INPUT Error",
"11513":"Branch if Variable after NEXT is specified",
"11515":"Flag \"None\" by setting FORPNT+1 = 0 ",
"11517":"Always Taken",
"11519":"Locate Variable: Returns Address",
"11522":"Save Pointer to FOR Variable, Low",
"11524":"Save Pointer to FOR Variable, High",
"11526":"Find Variable\u0027s FOR-Frame on the STACK",
"11529":"Branch if FOR-Frame Found",
"11531":"Else: Throw a \"?Next Without For\" Error",
"11533":"Always Taken: Print Error based on X-Reg",
"11535":"Set STACK Pointer to Variable\u0027s FOR-Frame",
"11536":"+ Add 4 to get STEP Value STACK Address",
"11537":"+",
"11538":"+",
"11539":"+",
"11540":"Get STEP Value STACK Address, Low",
"11541":"+ Add 6 to get FOR Value STACK Address",
"11542":"+",
"11543":"+",
"11544":"+",
"11545":"+",
"11546":"+",
"11547":"Save FOR Value STACK Address, Low",
"11549":"Get STACK Page Address (=1)",
"11551":"Unpack STEP Value [(A,Y)={LO,HI}] into FAC",
"11554":"Retrieve FOR Value STACK Address, Low",
"11555":"Get STEP Sign [(-1,0,1)=(Direction)]",
"11558":"Save STEP Sign [(-1,0,1) for (-,0,+)]",
"11560":"Retrieve Pointer to FOR Variable, Low",
"11562":"Retrieve Pointer to FOR Variable, High",
"11564":"Add STEP (+/- Amout) to FOR Value",
"11567":"Put back New/Current FOR Value",
"11570":"Get STACK Page Address (=1)",
"11572":"Q: Compare FAC with Packed Number at (A,Y)",
"11575":"Retrieve FOR Value STACK Address, Low",
"11576":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"11577":"Subtract STEP Sign [(-1,0,1)=(Direction)]",
"11580":"Branch if FOR/NEXT Loop is Done",
"11582":"Get FOR Statement\u0027s Line Number, Low",
"11585":"Set Current Applesoft Line Number, Low",
"11587":"Get FOR Statement\u0027s Line Number, High",
"11590":"Set Current Applesoft Line Number, High",
"11592":"Get STACK Address of Statement after, Low",
"11595":"Set CHRGET\u0027s Next Char/Token Pointer, Low",
"11597":"Get STACK Address of Statement after, High",
"11600":"Set CHRGET\u0027s Next Char/Token Pointer, High",
"11602":"Execute a New Statement (This is the EXIT)",
"11605":"Get Stack Pointer Index from Safe",
"11606":"Carry is Set, so Adds 18 to Stack Pointer",
"11608":"Set Stack Pointer Index Safe",
"11609":"Set Stack Pointer from Index Safe",
"11610":"Get Last Character GOT w/o Uping TXTPTR",
"11613":"Was Char after Last NEXT Variable a Comma?",
"11615":"NO: Go Execute a New Statement",
"11617":"YES: Prime for Next FOR Variable to do:",
"11620":"Do Next (Outer Loop) FOR Variable",
"11623":"Is it a Number?  If so, put it in the FAC",
"11626":"Assume (FAC) Type is Numeric (VALTYP=$00)",
"11627":"Fake BIT OpCode to skip next line",
"11628":"Assume (FAC) Type is String (VALTYP=$FF)",
"11629":"Is (FAC) Type Numeric or String?",
"11631":"If VALTYP\u003c0, Type is NOT Numeric",
"11633":"If C=1, Type is String, NOT Numeric",
"11635":"If C=0, Type is Numeric; Return to Caller",
"11636":"If C=1, Type is String; Return to Caller",
"11638":"Else, Throw a \"?Type Mismatch\" Error:",
"11640":"Go Print Error Message based on X-Reg",
"11643":"Get Next Char/Token Pointer, Low",
"11645":"If Not Zero ($00), Skip High Byte:",
"11647":"Reduce Next Char/Token Pointer, High",
"11649":"Reduce Next Char/Token Pointer, Low",
"11651":"Clear Initial Preference Index",
"11653":"Fake BIT OpCode to skip next line",
"11654":"Push Last Comparison Type (CMPTYP)",
"11655":"Get Last Preference Index",
"11656":"Push Last Preference Index",
"11657":"Get Number of Address Pointers Needed",
"11659":"Assure sufficient Stack space",
"11662":"Get an Element",
"11665":"Get Compare Type (1,0,-1): Zero",
"11667":"Set Compare Flag (\u003e,=,\u003c): Is Equal To",
"11669":"Get Last Char/Token Got",
"11672":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"11673":"Is it a \"\u003e\" Token?",
"11675":"BLT: NO, it\u0027s NOT a Relational Operator",
"11677":"Is it an \"=\" or a \"\u003c\" Token?",
"11679":"BGE: NO, it\u0027s NOT a Relational Operator",
"11681":"Token is \"=\" or \"\u003c\"!  Is it an \"=\" Token?",
"11683":"Double \u0026 Put Carry in LSB  [(2A+C)--\u003e(A)]",
"11684":"Now (A)=[(1|2|4) for (\"\u003e\"|\"=\"|\"\u003c\")]",
"11686":"Set CPRTYP bit (00000\u003c=\u003e)~(4|2|1)",
"11688":"1st Pass (00000000); 2nd Pass (00000\u003c=\u003e)",
"11690":"BLT: Branch If a Rel Op was Repeated;",
"11692":"Set bits of CPRTYP (00000\u003c=\u003e)",
"11694":"Get Next Char/Token",
"11697":"Check for a 2nd Relational Operator",
"11700":"Were Relational Operators Found?",
"11702":"YES, Rel Ops were Found, So Evaluate Math",
"11704":"BGE: NO, Branch if [(A)\u003e(2)];",
"11706":"[(TOK_GREATER)-(TOK_PLUS)=($CF-$C8)=(7)]",
"11708":"BLT: Branch if [(A)\u003c(0)];",
"11710":"Add w/C=1: Variable Type ($00=Num, $FF=Str)",
"11712":"(A)=(1|2|3|4): Last Result was a Number",
"11714":"(A)=(0): Last Result was a String",
"11717":"Add (-1) w/C=0: Now (A)=[(0|1|2|3) again",
"11719":"Save (A)",
"11721":"Double (A)",
"11722":"Now (A)=[(0|3|6|9) for (\"+\"|\"-\"|\"*\"|\"/\")]",
"11724":"Now (Y)=[(0|3|6|9) for (\"+\"|\"-\"|\"*\"|\"/\")]",
"11725":"Get Last Precedence",
"11726":"Is (Last Precedence)\u003e(\"+\"|\"-\"|\"*\"|\"/\")?",
"11729":"YES, if Higher Precedence: Do it Now!",
"11731":"NO; Was Last VALTYP a Number?",
"11734":"Form correct: Push Last Precedence",
"11735":"Push Rest of OP, Call FRMEVL Recursively",
"11738":"Pull Last Precedence",
"11739":"Get Last FRMEVL Scratch Flag Saved",
"11741":"Branch if [(0)\u003c(Y)\u003c(128)]",
"11743":"Set (X)=(Last Precedence)",
"11744":"Exit if (X)=(A)=(0): NO Math in Expression",
"11746":"Else, [(X)=(A)]\u003c\u003e(0): Math in Expr; Always",
"11748":"Variable Type ($00=Num, $FF=Str) LSB -\u003e C",
"11750":"Now (A)=[(X)=(CPRTYP)=(00000\u003c=\u003e)] Rel Ops",
"11751":"Now (A)=(0000\u003c=\u003eC)]: [(C)=(0|1)=(Num|Str)]",
"11752":"Get Next Char/Token Pointer, Low",
"11754":"Skip Page Reduction if \u003c\u003e 0",
"11756":"Decrement Next Char/Token Pointer, High",
"11758":"Decrement Next Char/Token Pointer, Low",
"11760":"Point at Rel Ops (\"\u003c\") Unary Plus entry",
"11762":"Set Comparison Type to (0000\u003c=\u003eC)",
"11764":"Loop-Back; Always Taken",
"11766":"Is (Last Precedence)\u003e(\"+\"|\"-\"|\"*\"|\"/\")?",
"11769":"YES, if Higher Precedence: Do it Now!",
"11771":"Loop-Back; Always Taken",
"11773":"Get Math Operator\u0027s S/R Address, High",
"11776":"Push Math Operator\u0027s S/R Address, High",
"11777":"Get Math Operator\u0027s S/R Address, Low",
"11780":"Push Math Operator\u0027s S/R Address, Low",
"11781":"Returns via JMP (INDEX)",
"11784":"Get FRMEVL Compare Flag (0000\u003c=\u003eC)",
"11786":"Call FRMEVL Recursively",
"11789":"Go Throw a \"?Syntax\" Error!  [Exit]",
"11792":"Get SIGN of FAC (\u003e127 = Neg | \u003c128 = Pos)",
"11794":"Get Precedence Code (Token constant)",
"11797":"Save SIGN of {FAC|STEP} Value",
"11798":"Pull Return Address, Low",
"11799":"Set Return Address, Low [for JMP (INDEX)]",
"11801":" \u0026 Add one (like an RTS does)",
"11803":"Pull Return Address, High",
"11804":"Set Return Address, High [for JMP (INDEX)]",
"11806":"Retrieve SIGN of {FAC|STEP} Value",
"11807":"Push SIGN Byte [1 of 2 types]",
"11808":"Round FAC to 32 bits",
"11811":"Get FAC Mantissa, Low",
"11813":"Push FAC Mantissa, Low",
"11814":"Get FAC Mantissa, Middle",
"11816":"Push FAC Mantissa, Middle",
"11817":"Get FAC Mantissa, High",
"11819":"Push FAC Mantissa, High",
"11820":"Get FAC Mantissa, Top",
"11822":"Push FAC Mantissa, Top",
"11823":"Get FAC Exponent",
"11825":"Push FAC Exponent",
"11826":"Return to Caller (Indirectly)",
"11829":"Set NO Math Exit Code",
"11831":"Pull Precedence (Last Preference Index)",
"11832":"Exit if NO Math to do",
"11834":"Was it a Relational Operator (\u003c|=|\u003e)?",
"11836":"YES: Allow String Comparison; Skip Next Op",
"11838":"NO: Assure (FAC) Type is Numeric",
"11841":"Save Y-Reg in FRMEVL Scratch Flag",
"11843":"Pull Compare Flag [(CPRTYP)=(0000\u003c=\u003eC)]",
"11844":"Retore Carry Flag; Now (A)=(00000\u003c=\u003e)",
"11845":"Set Comparison Mask (from Comparison Type)",
"11847":"Pull FAC Exponent",
"11848":"Set ARG Exponent",
"11850":"Pull FAC Mantissa, Top",
"11851":"Set ARG Mantissa, Top",
"11853":"Pull FAC Mantissa, High",
"11854":"Set ARG Mantissa, High",
"11856":"Pull FAC Mantissa, Middle",
"11857":"Set ARG Mantissa, Middle",
"11859":"Pull FAC Mantissa, Low",
"11860":"Set ARG Mantissa, Low",
"11862":"Pull SIGN Byte [1 of 2 types]",
"11863":"Set ARG SIGN Byte [1 of 2 types]",
"11865":"XOR Signs of Ops (for Multiply/Divide)",
"11867":"Set Sign Comparison Flag",
"11869":"Get FAC Exponent (Status if FACX=0)",
"11871":"Do Math Operation",
"11872":"Assume Numeric:",
"11874":"Set Variable Type ($00=Num, $FF=Str)",
"11876":"Get Next Char/Token",
"11879":"BGE: It is Not a Number If Carry is Set",
"11881":"BLT: It is a Number If Carry is Clear",
"11884":"Is it a Variable Name?",
"11887":"YES: It is a Variable Name!",
"11889":"NO; Is it a Decimal Point?",
"11891":"YES: So it IS a Numeric Constant!",
"11893":"NO; Is it a Unary Minus (\"-\") Sign?",
"11895":"YES: It is a Minus Sign!",
"11897":"NO; Is it a Unary Plus (\"+\") Sign?",
"11899":"YES (Loop-Back): It is a Plus Sign!",
"11901":"Is it a String Constant (Quotation Mark)?",
"11903":"NO (Skip Fwd): It is NOT a String (Quote)!",
"11905":"Get Next Char/Token Pointer, Low",
"11907":"Get Next Char/Token Pointer, High",
"11909":"Add in the Carry Flag",
"11911":"Skip INY (High byte) if Carry was Cleared",
"11913":"Advance Char/Token Pointer, High",
"11914":"Build String Descriptor \u0026 Put it in FAC",
"11917":"Point (TXTPTR) to after Closing Quote",
"11920":"Is it a \"NOT\" Token?",
"11922":"NO (Skip Fwd): NOT a \"NOT\" Token!",
"11924":"YES: Point at Rel Ops (\"=\") Unary Not entry",
"11926":"Always: Pull RA, Stack Op, \u0026 Recurse FRMEVL",
"11928":"Get FAC Exponent",
"11930":"If FACX\u003c\u003e0, Set as FALSE",
"11932":"Else, FACX=0: Set as TRUE",
"11934":"Fake BIT OpCode to skip next line",
"11935":"FACX\u003c\u003e0: Set as FALSE",
"11937":"Float Unsigned Integer \u0026 Flag as a Number",
"11940":"Is it an \"FN\" (Function Assignment) Token?",
"11942":"NO (Skip Fwd): NOT an \"FN\" Token!",
"11944":"Go do FN (Function Assignment) Call",
"11947":"Is it a \"SGN\" (Math Function) Token?",
"11949":"NO [(BLT)=(Skip Fwd)]: NOT a \"SGN\" Token!",
"11951":"MAYBE it\u0027s a SGN Token, MAYBE NOT!",
"11954":"Is there a \"(\" at TXTPTR?",
"11957":"YES: Evaluate Expression (in Parentheses)",
"11960":"NO; Is there a \")\" at TXTPTR?",
"11962":"Fake BIT OpCode to skip next line",
"11963":"Is there a \"(\" at TXTPTR?",
"11965":"Fake BIT OpCode to skip next line",
"11966":"Is there a \",\" at TXTPTR?",
"11968":"Clear Indirect Addressing Index",
"11970":"Is Char at TXTPTR = A-Reg?",
"11972":"NO; So Throw a \"?Syntax\" Error",
"11974":"YES; Get Next Char \u0026 Return to Caller",
"11977":"Throw a \"?Syntax\" Error",
"11979":"Go Print Error Message based on X-Reg",
"11982":"Point at Rel Ops (\"\u003e\") Unary Minus entry",
"11984":"Pull Return Address off Stack, Low",
"11985":"Pull Return Address off Stack, High",
"11986":"Stack this Op \u0026 call FRMEVL Recursively",
"11989":"Get Address in VARPTR \u0026 [(A,Y)={Low,High}]",
"11992":"Set Temp Variable Pointer, Low     (FAC+3)",
"11994":"Set Temp Variable Pointer, High    (FAC+4)",
"11996":"Get Variable Type ($00=Num, $FF=Str)",
"11998":"Branch if Variable Type is Numeric (==0)",
"12000":"Else, Variable Type is Not Numeric (\u003c\u003e0)",
"12002":"Flag it: Clear FAC Extension Byte Safe",
"12004":"Return to Caller",
"12005":"Negative for Integer Variable (%)",
"12007":"Branch if Number is Not an Integer!",
"12009":"Clear Indirect Addressing Index (Y=0)",
"12011":"Get from Pointer, Lo: Variable Value, High",
"12013":"Save Variable Value, High; From: (FAC+3),Y",
"12014":"Advance Indirect Addressing Index (Y=1)",
"12015":"Get from Pointer, Hi: Variable Value, Low",
"12017":"Save Variable Value, Low;  From: (FAC+3),Y",
"12018":"Retrieve Variable Value, High",
"12019":"Float Signed Integer in [(Y,A)={Low,High}]",
"12022":"Unpack FP# at [(A,Y)={Low,High}] into FAC",
"12025":"Get Next Char/Token",
"12028":"Get Column,Row Coordinates [(0-47),(0-47)]",
"12031":"Get Row Coordinate    [Set (A)=(X)=(0-47)]",
"12032":"Get Column Coordinate     [Set (Y)=(0-47)]",
"12034":"Get 4-bit Color at Column,Row Coordinates",
"12037":"Set [(Y)=(A)]=[(%0000nnnn)=($0-$F)=(0-16)]",
"12038":"Float Unsigned Integer \u0026 Flag as a Number",
"12041":"Require a Closing Parenthesis [\")\"]",
"12044":"Is it a \"SCRN(\" Token?",
"12046":"YES, It\u0027s a \"SCRN(\" Token!",
"12048":"NO: Double Token to get Index",
"12049":"Push/Save Routine Pointer Index",
"12050":"Put Index in X-Reg, too [(X)=(Token*2)]",
"12051":"Get Next Char/Token",
"12054":"Is (Index/2)=(LEFT$|RIGHT$|MID$) Token?",
"12056":"BLT: NO, Branch if NOT a String Function",
"12058":"Require an Opening Parenthesis [\"(\"]",
"12061":"(Recurse) Evaluate Expression for String",
"12064":"Require a Comma (between 1st \u0026 2nd Parms)",
"12067":"Assure (FAC) Type is String (VALTYP=$FF)",
"12070":"Pull/Retrieve Routine Pointer Index ",
"12071":"Put Index in X-Reg, too [(X)=(Token*2)]",
"12072":"Get Temp Variable Pointer, High    (FAC+4)",
"12074":"Push Temp Variable Pointer, High",
"12075":"Get Temp Variable Pointer, Low     (FAC+3)",
"12077":"Push Temp Variable Pointer, Low",
"12078":"Get Routine Pointer Index  [(A)=(Token*2)]",
"12079":"Push Routine Pointer Index (Doubled Token)",
"12080":"Convert Next Expression to a Byte in X-Reg",
"12083":"Get Routine Pointer Index  [(A)=(Token*2)]",
"12084":"Set Indirect Addressing Index to Jump with",
"12085":"Get Value of 2nd Parameter",
"12086":"Push Value of 2nd Parameter",
"12087":"Join Unary Functions",
"12090":"Require \"(Expression)\" [in Parentheses]",
"12093":"Get Index to Unary Functions Address Table",
"12094":"Set Indirect Addressing Index into ^ Table",
"12095":"Get Jump Vector, Low, from Address Table",
"12098":"Set Jump from ZP to \u003cAddress\u003e, Low",
"12100":"Get Jump Vector, High, from Address Table",
"12103":"Set Jump from ZP to \u003cAddress\u003e, High",
"12105":"JMPADRS in Zero-Page is used by functions ",
"12108":"Require Numeric Result",
"12111":"Get 2nd FAC Exponent (ARGX)",
"12113":"OR w/ 1st FAC Exponent (FACX)",
"12115":"Branch if [(ARGX)|(FACX)]\u003c\u003e0",
"12117":"Get 2nd FAC Exponent (ARGX)",
"12119":"Branch if [(A)=(ARGX)]==0",
"12121":"Else, Get 1st FAC Exponent (FACX)",
"12123":"Branch if [(A)=(FACX)]\u003c\u003e0",
"12125":"Set to FALSE [(Y)=(0)]",
"12127":"Fake BIT OpCode to skip next line",
"12128":"Set to TRUE [(Y)=(1)]",
"12130":"Float Unsigned Integer \u0026 Flag as a Number",
"12133":"Is FAC Type Numeric ($00) or String ($FF)?",
"12136":"Branch if C=1: Type is String, NOT Numeric",
"12138":"Get ARG\u0027s Unpacked Sign (msb)",
"12140":"Set (AND Mask msb)=(ARGSGN msb)",
"12142":"Set in (A): Sign Bit of ARG Mantissa, Top",
"12144":"Save Signed ARG Mantissa, Top",
"12146":"Get ARG Address, Low",
"12148":"Get ARG Address, High; [(A,Y)={Low,High}]",
"12150":"Compare FAC with Packed Number at (A,Y) ^",
"12153":"Save [(X)=(A)] as Sign Value for finishing",
"12154":"Finish Numeric Comparison (below)",
"12157":"Clear Accumulator",
"12159":"Set Variable Type ($00=Num, $FF=Str)",
"12161":"Make FRMEVL Compare Flag = (0000\u003c=\u003e0)",
"12163":"Free up TMPVPTR \u0026 a Temp String",
"12166":"Set (FAC) Temp Descriptor, String Length",
"12168":"Set (FAC+1) Tmp Dscrptr, Str Addr, Low",
"12170":"Set (FAC+2) Tmp Dscrptr, Str Addr, High",
"12172":"Get (ARG+3) Temp Variable Pointer, Low",
"12174":"Get (ARG+4) Temp Variable Pointer, High",
"12176":"Free up a Temp String [Address in (A,Y)]",
"12179":"Set (ARG+3) Temp String Pointer, Low",
"12181":"Set (ARG+4) Temp String Pointer, High",
"12183":"Set to (ARG) Temp String Length",
"12184":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"12185":"Deduce Lesser of (ARG|FAC) String Lenghts",
"12187":"Flag (0) for (ARG=FAC) String Lenghts",
"12189":"Set Accumulator",
"12191":"Flag (+1) for (ARG\u003cFAC) String Lenghts",
"12193":"Get (FAC) Temp Descriptor, String Length",
"12195":"Flag (-1) for (ARG\u003eFAC) String Lenghts",
"12197":"Flag Shortest [(FAC|==|ARG)--\u003e(-1|0|+1)]",
"12199":"Set to counter following Advance",
"12201":"Set to counter following Reduction",
"12202":"Advance Indirect Addressing Index",
"12203":"Count Down for (FAC) String Length",
"12204":"Branch if more Chars in both Strings",
"12206":"If Str(ARG=FAC) so far, decide by Length",
"12208":"Branch if (ARG\u003eFAC) String Lenghts",
"12210":"Clear Carry to force following Branch:",
"12211":"Always Taken",
"12213":"Get an (ARG) Temp String Character",
"12215":"Compare it to (FAC) Temp String Character",
"12217":"Loop: Keep Comparing if Chars are Equal",
"12219":"Set for (ARG\u003eFAC) String Lenghts",
"12221":"Branch if (ARG\u003eFAC) String Lenghts",
"12223":"Set for (ARG\u003cFAC) String Lenghts",
"12225":"Convert from (-1|0|1) to (0,1,2):[A=X+1];",
"12226":"Then, if C=0, Convert to (0,2,4):[A*2+C];",
"12227":"Else, if C=1, Convert to (1,2,5):[A*2+C]",
"12228":"(00000\u003c=\u003e):[8421,8421]",
"12230":"Branch if NO Match: (A=0) indicates False",
"12232":"Else, Matches \u003e= 1: (A=1) indicates True",
"12234":"Float Signed Integer in (A) into FAC",
"12237":"Convert FAC to Number in (X) \u0026 (FAC+4)",
"12240":"Read Paddle (X); Returns Time-Count in (Y)",
"12243":"Convert (Y) to Real Number in FAC",
"12246":"Require a Comma (Data Separator)",
"12249":"Set [(X)=(A)]: Next Character after Comma",
"12250":"Allocate the Array",
"12253":"Get (A): Last Character Got",
"12256":"Loop if NOT at End of Line/Program",
"12258":"Return to Caller",
"12259":"Clear X-Reg",
"12261":"Get Last Char/Token Got w/o uping TXTPTR",
"12264":"Set Array Dimension Flag (DIM Call \u003c\u003e 0)",
"12266":"Save 1st Character of Variable Name",
"12268":"Get Last Char/Token Got w/o uping TXTPTR",
"12271":"Is it a Letter?",
"12274":"YES, it is a Letter!",
"12276":"NO, Not a Letter; Throw a \"?SYNTAX\" Error!",
"12279":"Clear X-Reg",
"12281":"Clear Variable Type ($00=Num, $FF=Str)",
"12283":"Clear Integer Flag (Negative if Integer) ",
"12285":"Branch Across BASIC Entry Points",
"12288":"Hard/Cold/Ctrl-B (Reinitialize BASIC) Entry Point",
"12291":"Soft/Warm/Ctrl-C (Don\u0027t Reinit BASIC) Entry Point",
"12294":"\u003c\u003c\u003c Why not \"Waste a Byte!\"? \u003e\u003e\u003e",
"12295":"Get 2nd Character of Variable Name",
"12298":"Branch if it\u0027s Numeric",
"12300":"Is it a Letter (A-Z)?",
"12303":"Branch if NOT a Letter: End of Name",
"12305":"Save 2nd Character of Variable Name",
"12306":"Scan to End of Variable Name",
"12309":"Loop if it\u0027s Numeric",
"12311":"Is it a Letter (A-Z)?",
"12314":"Loop if it\u0027s a Letter",
"12316":"Is it a String Symbol (Dollar Sign)?",
"12318":"Branch if NOT a String Symbol (\"$\")",
"12320":"Else: Flag as a String",
"12322":"Set Variable Type ($00=Num, $FF=Str)",
"12324":"Always Taken",
"12326":"Is it an Integer Variable?",
"12328":"Branch if NOT an Integer Variable",
"12330":"Get Subscript Flag ($00=Allowed, $80=NOT)",
"12332":"Branch if Integer Variable NOT Allowed;",
"12334":"Flag as Integer Variable (%:--):",
"12336":"Set Negative for an Integer Variable",
"12338":"Set Negative: 1st Var Name Character",
"12340":"Save 1st Character of Variable Name",
"12342":"Retrieve 2nd Character of Variable Name",
"12343":"Set Negative: 2nd Var Name Character",
"12345":"Save 2nd Character of Variable Name",
"12346":"Get Next (Var Name Terminating) Character",
"12349":"Store 2nd Character of Variable Name",
"12351":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"12352":"Are Subscripts Allowed? [YES if ($00|$40)]",
"12354":"And, is it an Array Variable?",
"12356":"Branch if NOT[[(SUBFLG)=($00)]\u0026[\"(\"]]",
"12358":"Else, Go Handle the Array",
"12361":"Check Top 2 Bits (NV) of SUBFLG",
"12363":"($80): Branch if from FOR, DEF or FN",
"12365":"($40): Branch if called from GETARYPTR",
"12367":"Clear Accumulator",
"12369":"Clear SUBFLG",
"12371":"Get Start of Variables Pointer, Low",
"12373":"Get Start of Variables Pointer, High",
"12375":"Clear Indirect Addressing Index",
"12377":"Set Var Name Search Pointer, High",
"12379":"Set Var Name Search Pointer, Low",
"12381":"At End of Simple Variables \u0026 Pointers?",
"12383":"NO, Continue Searching",
"12385":"At End of Simple Variables \u0026 Pointers?",
"12387":"YES, Var Name Not Found, Make One",
"12389":"Get Last-Used Variable Name Pointer, Low",
"12391":"Is it the Same 1st Letter?",
"12393":"Branch if NOT",
"12395":"Get Last-Used Variable Name Pointer, High",
"12397":"Advance Indirect Addressing Index",
"12398":"Is it the Same 2nd Letter?",
"12400":"Branch if YES: Same Variable Name Found",
"12402":"Reduce Indirect Addressing Index",
"12403":"Prepare to Add without Carry",
"12404":"Get Var Name Search Pointer, Low",
"12406":"Advance Var Name Search Pointer, Low",
"12408":"Inner Loob Back: Branch if Not Next Page",
"12410":"Advance Var Name Search Pointer, High",
"12411":"Outer Loob Back; Always Taken",
"12413":"Compare Low End",
"12415":"BLT: Branch if (C=0): (A)\u003c(\"A\")",
"12417":"Subtract w/o Borrow [A-Data-!C]",
"12419":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"12420":"Restore A-Reg; ($100-\"[\")=($100-$5B)=($A5)",
"12422":"Return to Caller",
"12423":"Pull Caller\u0027s Return Address, Low",
"12424":"Then Push-It-Back to Reset Stack Pointer",
"12425":"Called from FRMVAR [($DED5)+2, Low]*?",
"12427":"Branch (Exit) if NOT: Make New Variable",
"12429":"Get Stack Pointer for X-Indexed Addressing",
"12430":"Get Caller\u0027s Return Address, High",
"12433":"Called from FRMVAR [($DED5)+2, High]*?",
"12435":"Branch (Exit) if NOT: Make New Variable",
"12437":"Point to Constant Zero, Low",
"12439":"Point to Constant Zero, High",
"12441":"Return CON_ZERO (A,Y) Address to FRMVAR",
"12442":"Integer or Real Zero, or Null String",
"12444":"Get Start of Arrays Pointer, Low",
"12446":"Get Start of Arrays Pointer, High",
"12448":"Set Block Copy Source Start Pointer, Low",
"12450":"Set Block Copy Source Start Pointer, High",
"12452":"Get End of Arrays Pointer, Low",
"12454":"Get End of Arrays Pointer, Low",
"12456":"Set as End of Arrays Pointer, Low",
"12458":"Set as End of Arrays Pointer, High",
"12460":"Prepare for Add with Carry",
"12461":"Add 7 bytes to the Top Address",
"12463":"If (C=0), NO Carry Over, Skip Page Advance",
"12465":"If (C=1), Carry Over, Advance Page",
"12466":"Set Block Copy Destination Pointer, Low",
"12468":"Set Block Copy Destination Pointer, High",
"12470":"Move Memory Block Upward",
"12473":"Get Block Copy Destination Pointer, Low",
"12475":"Get Block Copy Destination Pointer, High",
"12477":"Advance Page: MVBLKUP1 leaves it 1 too low",
"12478":"Set Start of Arrays Pointer, Low",
"12480":"Set Start of Arrays Pointer, High",
"12482":"Clear Indirect Addressing Index",
"12484":"Get Last-Used Variable Name, Low",
"12486":"Set New Variable Name, Low (Byte 0)",
"12488":"Advance Indirect Addressing Index",
"12489":"Get Last-Used Variable Name, High (Byte 1)",
"12491":"Set New Variable Name, High",
"12493":"Clear Accumulator (for Real # Components)",
"12495":"Advance Indirect Addressing Index",
"12496":"Clear Exponent (Byte 2)",
"12498":"Advance Indirect Addressing Index",
"12499":"Clear Mantissa, Top (Byte 3)",
"12501":"Advance Indirect Addressing Index",
"12502":"Clear Mantissa, High (Byte 4)",
"12504":"Advance Indirect Addressing Index",
"12505":"Clear Mantissa, Middle (Byte 5)",
"12507":"Advance Indirect Addressing Index",
"12508":"Clear Mantissa, Low (Byte 6)",
"12510":"Get New Start of Arrays Pointer, Low",
"12512":"Prepare for Add with Carry",
"12513":"Point to Real # Components",
"12515":"Get New Start of Arrays Pointer, High",
"12517":"If (C=0), NO Carry Over, Skip Page Advance",
"12519":"If (C=1), Carry Over, Advance Page",
"12520":"Set Last-Used Variable Value Pointer, Low",
"12522":"Set Last-Used Variable Value Pointer, High",
"12524":"Return to Caller",
"12525":"Get Number of Array Dimensions",
"12527":"Double it",
"12528":"\u0026 Add 5 Bytes for: Name, Offset, # of Dims",
"12530":"Add Start of Arrays (New Var) Ptr, Low",
"12532":"Get Start of Arrays (New Var) Ptr, High",
"12534":"If (C=0), NO Carry Over, Skip Page Advance",
"12536":"If (C=1), Carry Over, Advance Page",
"12537":"Set as Array\u0027s First Value Pointer, Low",
"12539":"Set as Array\u0027s First Value Pointer, High",
"12541":"Return to Caller",
"12542":"The Number -32768.00049",
"12546":"Get Next Char/Token",
"12549":"Evaluate \u0026 Assure Expression is Numeric",
"12552":"Get FAC Unpacked Sign (msb)",
"12554":"Throw Illegal Quantity Error if Negative",
"12556":"Exponent of Value in FAC",
"12558":"(NEG32768\u0027s Exponent): Abs(Value) \u003c 32768?",
"12560":"YES, OK for Integer Conversion",
"12562":"NO; Get Address of Number to compare, Low",
"12564":"Get Address of Number to compare, High",
"12566":"Compare FAC with Packed Number at (A,Y) ^",
"12569":"Go Print \"?Illegal Quantity\" Error Message",
"12571":"Convert FAC to (4 Byte) Integer",
"12574":"Get Subscript Flag ($00=Allowed, $80=NOT)",
"12576":"Branch if Subscripts NOT Allowed",
"12578":"Get Array Dimension Flag (DIM Call \u003c\u003e 0)",
"12580":"Set to Negative if Integer Variable (%)",
"12582":"Push Array Dimension Flag",
"12583":"Get Variable Type",
"12585":"Push Variable Type ",
"12586":"Init Dimension/Subscript/Loop Counter",
"12588":"Get Number of Dimensions Counted",
"12589":"Push Number of Dimensions Counted",
"12590":"Get Last-Used Variable Name, High",
"12592":"Push Last-Used Variable Name, High",
"12593":"Get Last-Used Variable Name, Low",
"12595":"Push Last-Used Variable Name, Low",
"12596":"Evaluate Numeric Formula at TXTPTR",
"12599":"Pull Last-Used Variable Name, Low",
"12600":"Set Last-Used Variable Name, Low",
"12602":"Pull Last-Used Variable Name, High",
"12603":"Set Last-Used Variable Name, High",
"12605":"Pull Number of Dimensions Counted",
"12606":"Set Number of Dimensions Counter",
"12607":"Get Stack Pointer for X-Indexed Addressing",
"12608":"Copy VALTYP from Stack (Not Pulled)",
"12611":"Push it back on Top of Stack",
"12612":"Copy DIMFLG from Stack (Not Pulled)",
"12615":"Push it back on Top of Stack",
"12616":"Get Subscript Value, Low  (FAC+3)",
"12618":"Place on the Stack where VALTYP was",
"12621":"Get Subscript Value, High (FAC+4)",
"12623":"Place on the Stack where DIMFLG was",
"12626":"Count the Dimension/Subscript/Iteration",
"12627":"Get Last Character/Token Got",
"12630":"Is it a Comma?",
"12632":"YES, Loop until all Dims/Subs put on Stack",
"12634":"Save Count of Dimensions/Subscripts",
"12636":"Check for Closing Parenthesis [\")\"]",
"12639":"Pull VALTYP from Top of Stack",
"12640":"Restore Variable Type",
"12642":"Pull DIMFLG from Top of Stack",
"12643":"Restore Integer Variable Flag (msb)",
"12645":"Mask off Integer Variable Flag (msb)",
"12647":"Restore Array Dimension Flag",
"12649":"Get Start of Arrays Pointer, Low",
"12651":"Get Start of Arrays Pointer, High",
"12653":"Set Array Variable Search Pointer, Low",
"12655":"Set Array Variable Search Pointer, High",
"12657":"Compare to End of Arrays Pointer, High",
"12659":"Branch if Not at End of Array Table",
"12661":"Compare to End of Arrays Pointer, Low",
"12663":"Make New Array Variable if at End of Table",
"12665":"Point at 1st Character of Array Name",
"12667":"Get 1st Character of Array Name",
"12669":"Point at 2nd Character of Array Name",
"12670":"Are Variable Names\u0027 1st Characters Equal?",
"12672":"Keep Searching if Not a Match",
"12674":"Get 2nd Character of Array Name",
"12676":"Are Variable Names\u0027 2nd Characters Equal?",
"12678":"Use Old Array Variable if Match Found",
"12680":"Point at Offset to Next Array, Low",
"12681":"Get Offset to Next Array, Low",
"12683":"Prepare for Add with Carry",
"12684":"Add Array Variable Search Pointer, Low",
"12686":"Save Array Variable Search Pointer, Low",
"12687":"Point at Offset to Next Array, High",
"12688":"Get Offset to Next Array, High",
"12690":"Add Array Variable Search Pointer, High",
"12692":"Loop-Back; Always Taken; If Not Taken,",
"12694":"Print \"?Bad Subscript\" Error Message",
"12696":"Fake BIT OpCode to skip next line",
"12697":"Print \"?Illegal Quantity\" Error Message",
"12699":"Go Print Error Message based on X-Reg",
"12702":"Get \"?Redim\u0027d Array\" Error Message Index",
"12704":"Get Array Dimension Flag (DIM Call \u003c\u003e 0)",
"12706":"Do Error if Called from DIM Statement",
"12708":"Get Subscript Flag ($00=Allowed, $80=NOT)",
"12710":"If Allowed, Check if # of Dimensions Match",
"12712":"Else, NOT Allowed; So Signal Array Found!",
"12713":"Return to Caller (Exit if from GETARYPTR)",
"12714":"Point to 1st Value in Array: ",
"12717":"Get Number of Array Dimensions Specified",
"12719":"Point at Number of Array Dimensions (Old)",
"12721":"Do Arrays\u0027 Numbers of Dimensions Match?",
"12723":"NO: Print \"?Bad Subscript\" Error Message",
"12725":"YES: Find Array Element Specified",
"12728":"Get Subscript Flag ($00=Allowed, $80=NOT)",
"12730":"If Allowed, Create a New Array ",
"12732":"Throw an \"?Out Of Data\" Error",
"12734":"Go Print Error Message based on X-Reg",
"12737":"Point to 1st Value in Array: ",
"12740":"Assure: [(ARYPTR)=(A,Y)={Lo,Hi}]\u003c(FRETOP)",
"12743":"Clear Accumulator",
"12745":"Clear Indirect Addressing Index",
"12746":"Clear Size: Number of Array Elements, High",
"12748":"Assume Real Array Element Size: = 5 bytes",
"12750":"Get Last-Used Variable Name, Low (1st Chr)",
"12752":"Set New Array Variable Name, Low (1st Chr)",
"12754":"Branch if Not an Integer Array",
"12756":"Integer Array: Reduce Size to 4 Bytes",
"12757":"Advance Indirect Addressing Index to 1",
"12758":"Get Last-Used Variable Name, High (2nd Chr)",
"12760":"Set New Array Variable Name, High (2nd Chr)",
"12762":"Real Array: Keep Size of 5 bytes",
"12764":"String Array: Reduce Size to 3 Bytes",
"12765":"Integer Array: Reduce Size to 2 Bytes",
"12766":"Store Size: Number of Array Elements, Low",
"12768":"Get Number of Dimensions",
"12770":"Advance Indirect Addressing Index to 2",
"12771":"Advance Indirect Addressing Index to 3",
"12772":"Advance Indirect Addressing Index to 4",
"12773":"Store # of Dims in 5Th Byte of Array Ptr",
"12775":"Default Dimension, Low  (10+1=11 Elements)",
"12777":"Default Dimension, High (Zero)",
"12779":"Check Array Dimension Flag (DIM Call \u003c\u003e 0)",
"12781":"Use Default Value if NOT Dimensioned Array",
"12783":"Pull Specified Array Dimension, Low",
"12784":"Prepare for Add with Carry",
"12785":"Size: [(Elements)=(Specified Dimension)+1]",
"12787":"Set (X) to Number of Dim Elements, Low",
"12788":"Pull Specified Array Dimension, High",
"12789":"Set (A) to Number of Dim Elements, High",
"12791":"Advance Indirect Addressing Index",
"12792":"Set Size: Number of Dim Elements, High",
"12794":"Advance Indirect Addressing Index",
"12795":"Get Size: Number of Dim Elements, Low",
"12796":"Set Size: Number of Dim Elements, Low",
"12798":"Multiply this Dimension by Running Size",
"12801":"Store Running Size, Low",
"12803":"Store Running Size, High",
"12805":"Retrieve (Y) saved by MULTSUBS",
"12807":"Count Down: Number of Dimensions",
"12809":"Loop until Done: Count Down to Zero",
"12811":"Add Address of 1st Value in Array, High",
"12813":"Do \"?Out Of Memory\" Error if too large",
"12815":"Save as Array End Address, High",
"12817":"Save High End Address in (Y), too",
"12818":"Get Total Bytes of all Array Elements, Low",
"12819":"Add Address of 1st Value in Array, Low",
"12821":"Skip Advancing High Byte if NO Carryover",
"12823":"Add Carry to (Y): Array End Address, High",
"12824":"Do \"?Out Of Memory\" Error if too large",
"12826":"Assure [(ARYPTR)=(A,Y)={Low,High}]\u003c(FRETOP)",
"12829":"Set End of Array Vars \u0026 Ptrs Storage, Low",
"12831":"Set End of Array Vars \u0026 Ptrs Storage, High",
"12833":"Prepare to Zero the Array Elements",
"12835":"Advance Count: Running Size, High",
"12837":"Get Count: Running Size, Low",
"12839":"Branch if No Partial Page to Clear",
"12841":"Reduce Count: Running Size, Low",
"12842":"Clear a Page of 256 Bytes or less",
"12844":"Loop until Done with Page",
"12846":"Reduce Page: Array End Address, High",
"12848":"Reduce Count: Running Size, High",
"12850":"Loop until Done with All Pages",
"12852":"Advance Page: Array End Address, High",
"12854":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"12855":"Get End of Array Vars \u0026 Ptrs Storage, Low",
"12857":"Subtract this Array Variable Address, Low",
"12859":"Point at Offset to Next Variable, low",
"12861":"Set Offset to NxtVar (End Of Arrays), low",
"12863":"Get End of Array Vars \u0026 Ptrs Storage, High",
"12865":"Point at Offset to Next Variable, High",
"12866":"Subtract this Array Variable Address, High",
"12868":"Set Offset to NxtVar (End Of Arrays), High",
"12870":"Get Array Dimension Flag (DIM Call \u003c\u003e 0)",
"12872":"YES: We Are Finished!",
"12874":"Point at Number of Dimensions",
"12875":"Get Number of Dimensions",
"12877":"Save Number of Dimensions",
"12879":"Clear Accumulator",
"12881":"Clear Subscript Accumulator, Low; \u0026 High:",
"12883":"Set Subscript Accumulator, High",
"12885":"Point at Last Dimension Size, High",
"12886":"Pull Next Subscript, Low",
"12887":"Save it in X-Reg as Current Subscript, Low",
"12888":"Set (FAC+3) as Current Subscript, Low ",
"12890":"Pull Next Subscript, High",
"12891":"Set (FAC+4) as Current Subscript, High",
"12893":"Compare it with Dimensioned Size, High",
"12895":"Branch if Subscript is Not Too Large",
"12897":"Branch if Subscript is Too Large (Error!)",
"12899":"Point at Last Dimension Size, Low",
"12900":"Retrieve Current Subscript, Low",
"12901":"Compare it with Dimensioned Size, Low",
"12903":"Branch if Subscript is Not Too Large",
"12905":"Print \"?Bad Subscript\" Error Message",
"12908":"Do \"?Out Of Memory\" Error",
"12911":"Point at Last Dimension Size, Low",
"12912":"Get Subscript from Sub Accumulator, High",
"12914":"Get Subscript from Sub Accumulator, Low",
"12916":"Prepare for Add with Carry",
"12917":"Branch if (A)=(0): 1st time through",
"12919":"Not Zero, So Multiply Subscripts",
"12922":"Get from (X): Product of Subscripts, Low",
"12923":"Add Current Subscript, Low  (FAC+3)",
"12925":"Save Result in X-Reg",
"12926":"Get from (Y): Product of Subscripts, High",
"12927":"Retrieve (Y): Saved by MULTSUBS",
"12929":"Add Current Subscript, High (FAC+4)",
"12931":"Store Accumulated Offset, Low",
"12933":"Reduce Loop Counter: Number of Dimensions",
"12935":"Loop until All Subscripts are Done",
"12937":"Store Accumulated Offset, High",
"12939":"Real Array: Start with Size of 5 Bytes",
"12941":"Get Last-Used Variable Name Pointer, Low",
"12943":"Branch if Not Integer Variable",
"12945":"Else, Integer: Reduce Size to 4 Bytes",
"12946":"Get Last-Used Variable Name Pointer, High",
"12948":"Branch if Real: Keep Size of {5|4} Bytes",
"12950":"String Array: Reduce Size to 3 Bytes",
"12951":"Integer Array: Reduce Size to 2 Bytes",
"12952":"Set Multiplier: Size of Each Entry, Low",
"12954":"Set Multiplier: Size of Each Entry, High",
"12956":"Multiply Product of Dimensions (STRNG2) by",
"12959":"Get from (X): Accumulated Offset, Low",
"12960":"Add Address of 1st Array Element, Low",
"12962":"Set Specified Element Pointer, Low",
"12964":"Get from (Y): Accumulated Offset, High",
"12965":"Add Address of 1st Array Element, High",
"12967":"Set Specified Element Pointer, High",
"12969":"Set (Y): Specified Element Pointer, High",
"12970":"Set (A): Specified Element Pointer, Low",
"12972":"Return [(A,Y)={Low,High}] \u0026 (X) to Caller",
"12973":"Save (Y) for Caller to Retieve after RTS",
"12975":"Get Multiplier, Low",
"12977":"Save Multiplier, Low",
"12979":"Point at Multiplier, High",
"12980":"Get Multiplier, High",
"12982":"Save Multiplier, High",
"12984":"Get Index for 16-bit Multiplication",
"12986":"Set Index for 16-bit Multiplication",
"12988":"Clear Product, Low",
"12990":"Clear Product, High",
"12992":"Get Product, Low",
"12993":"Double Product, Low",
"12994":"Save Product, Low",
"12995":"Get Product, High",
"12996":"Double Product (\u0026 Add Carry), High",
"12997":"Save Product, High",
"12998":"Do \"?Out Of Memory\" Error if too large",
"13000":"Double Subscript Accumulated Offset, Low",
"13002":"Double Subs Accumulated Offset (+C), High",
"13004":"BLT: Branch if Not too large",
"13006":"Prepare for Add with Carry",
"13007":"Get Product, Low",
"13008":"Add (with Carry) Multiplier, Low",
"13010":"Save Product, Low",
"13011":"Get Product, High",
"13012":"Add (with Carry) Multiplier, High",
"13014":"Save Product, High",
"13015":"Do \"?Out Of Memory\" Error if too large",
"13017":"Reduce Bit Counter Index",
"13019":"Loop Untill All 16-bits are Done",
"13021":"Return [(X,(A=Y))={Low,High}] to Caller",
"13022":"Get Variable Type ($00=Num, $FF=Str)",
"13024":"Branch if Variable Type is Numeric",
"13026":"Free up TMPVPTR \u0026 a Temp String",
"13029":"Maximize Free-Space, Collect Garbage ...",
"13032":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"13033":"Get FreSpcEnd \u0026 StringStorageStart, Low",
"13035":"Subtract End of Vars \u0026 Ptrs Storage, Low",
"13037":"Now: (Y) is Free Space, Low",
"13038":"Get FreSpcEnd \u0026 StringStorageStart, High",
"13040":"Subtract End of Vars \u0026 Ptrs Storage, High",
"13042":"Clear X-Index Register",
"13044":"Set Variable Type as Numeric (=0)",
"13046":"Save (A) in FAC Mantissa, Top; (A)={High}",
"13048":"Save (Y) in FAC Mantissa, High; (Y)={Low}",
"13050":"Set Exponent to 2^16 = 65,536 = %0001,0000",
"13052":"Convert to Signed Real/FP Number in FAC",
"13055":"Get Current Cursor Horizontal Displacement",
"13057":"Clear Accumulator; for: [(Y,A)={Low,High}]",
"13059":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"13060":"Always Taken",
"13062":"Which Program Mode: Running or Direct?",
"13064":"If in Direct Mode: (X)=[($FF)--\u003e(0)]",
"13065":"Branch If in Direct Mode [(X)=(0)]",
"13067":"Throw an \"?Illegal Direct\" Error",
"13069":"Fake BIT OpCode to skip next line",
"13070":"Throw an \"?Undef\u0027d Function\" Error",
"13072":"Go Print Error Message based on X-Reg",
"13075":"Parse FN, Function Name",
"13078":"Do Illegal Direct Error if in Direct Mode",
"13081":"Must have Opening Parenthesis [\"(\"] Now!",
"13084":"Flag for Subscripts NOT Allowed",
"13086":"Set Subscript Flag ($00=Allowed, $80=NOT)",
"13088":"Locate Variable: Returns Address",
"13091":"Assure (FAC) Type is Numeric (VALTYP=$00)",
"13094":"Must have Closing Parenthesis [\")\"] Now!",
"13097":"Must have \"Equal To\" Char/Token (\"=\") Now!",
"13099":"Check Current Char \u0026 Get Next Char/Token",
"13102":"Push Char/Token after Equal Sign (\"=\")",
"13103":"Get Last-Used Variable Value Pointer, High",
"13105":"Push Last-Used Variable Value Pointer, High",
"13106":"Get Last-Used Variable Value Pointer, Low",
"13108":"Push Last-Used Variable Value Pointer, Low",
"13109":"Get Next Char/Token Pointer, High",
"13111":"Push Next Char/Token Pointer, High",
"13112":"Get Next Char/Token Pointer, Low",
"13114":"Push Next Char/Token Pointer, Low",
"13115":"Advance TXTPTR to Next \":\" or EOL",
"13118":"Store 5 bytes Pushed above into FN \"Value\"",
"13121":"Must have \"FN\" Token Now!",
"13123":"Check Current Char \u0026 Get Next Char/Token",
"13126":"Set Sign Bit on 1st Character of FN Name,",
"13128":"Making $C0 \u003c SUBFLG \u003c $DB,",
"13130":"Which tells PTRGET who Called",
"13133":"Set Function Name Pointer, Low",
"13135":"Set Function Name Pointer, High",
"13137":"Assure (FAC) Type is Numeric (VALTYP=$00)",
"13140":"Parse FN, Function Name",
"13143":"Get Function Name Pointer, High",
"13145":"Push Function Name Pointer, High",
"13146":"Get Function Name Pointer, Low",
"13148":"Push Function Name Pointer, Low",
"13149":"Must have \"(Expression)\" Now; Eval to FAC",
"13152":"Assure (FAC) Type is Numeric (VALTYP=$00)",
"13155":"Pull Function Name Pointer, Low",
"13156":"Set Function Name Pointer, Low",
"13158":"Pull Function Name Pointer, High",
"13159":"Set Function Name Pointer, High",
"13161":"Point at Argument Variable Pointer, Low",
"13163":"Get Argument Variable Pointer, Low",
"13165":"Set Old-Variable Value Pointer, Low",
"13167":"Save Argument Variable Pointer, Low",
"13168":"Point at Argument Variable Pointer, High",
"13169":"Get Argument Variable Pointer, High",
"13171":"Throw an \"?Undef\u0027d Function\" Error if Null",
"13173":"Else: Set Old-Variable Value Pointer, High",
"13175":"Now: (Y)=(4) ",
"13176":"Get Old-Variable Value",
"13178":"Push Old-Variable Value",
"13179":"Count Down (Pushes 5 bytes)",
"13180":"Loop until Done [(Y)=(0)]",
"13182":"Get Old-Variable Value Pointer, High",
"13184":"Store FAC (Rounded) in Old-Variable",
"13187":"Get Next Char/Token Pointer, High",
"13189":"Push Next Char/Token Pointer, High",
"13190":"Get Next Char/Token Pointer, Low",
"13192":"Push Next Char/Token Pointer, Low",
"13193":"Get Function Definition Pointer, Low",
"13195":"Set Next Char/Token Pointer, Low",
"13197":"Advance Indirect Addressing Index",
"13198":"Get Function Definition Pointer, High",
"13200":"Set Next Char/Token Pointer, High",
"13202":"Get Argument Variable Pointer, High",
"13204":"Push Address of Argument Variable, High",
"13205":"Get Argument Variable Pointer, Low",
"13207":"Push Address of Argument Variable, Low",
"13208":"Evaluate Function",
"13211":"Pull Address of Argument Variable, Low",
"13212":"Save Argument Variable Pointer, Low",
"13214":"Pull Address of Argument Variable, High",
"13215":"Save Argument Variable Pointer, Low",
"13217":"Get Last Char/Token Gotten",
"13220":"TXTPTR Must be at Next \":\" or EOL",
"13222":"Throw a \"?Syntax\" Error if it is Not there",
"13225":"Pull Next Char/Token Pointer, Low",
"13226":"Restore Next Char/Token Pointer, Low",
"13228":"Pull Next Char/Token Pointer, High",
"13229":"Restore Next Char/Token Pointer, High",
"13231":"Clear Indirect Addressing Index (=0)",
"13233":"Pull Old-Variable Value",
"13234":"Restore Old-Variable Value",
"13236":"Pull Old-Variable Value",
"13237":"Advance Indirect Addressing Index (=1)",
"13238":"Restore Old-Variable Value",
"13240":"Pull Old-Variable Value",
"13241":"Advance Indirect Addressing Index (=2)",
"13242":"Restore Old-Variable Value",
"13244":"Pull Old-Variable Value",
"13245":"Advance Indirect Addressing Index (=3)",
"13246":"Restore Old-Variable Value",
"13248":"Pull Old-Variable Value",
"13249":"Advance Indirect Addressing Index (=4)",
"13250":"Restore Old-Variable Value",
"13252":"Return to Caller",
"13253":"Assure (FAC) Type is Numeric (VALTYP=$00)",
"13256":"Starts String at STACK-1 ($00FF)",
"13258":"Convert FAC to Z-String in FOUT-Buffer",
"13261":"Pull/Discard Return Address, Low",
"13262":"Pull/Discard Return Address, High",
"13263":"Point to STACK-1, Low",
"13265":"Point to STACK-1, High {Zero-Page}",
"13267":"Make FOUT-Buffer into a Literal \"String\"",
"13269":"Get Temp Variable Pointer, Low     (FAC+3)",
"13271":"Get Temp Variable Pointer, High    (FAC+4)",
"13273":"Set String Descriptor Pointer, Low",
"13275":"Set String Descriptor Pointer, High",
"13277":"Get Space for the Character String",
"13280":"Set Temp Descriptor, Str Ptr, Low  (FAC+1)",
"13282":"Set Temp Descriptor, Str Ptr, High (FAC+2)",
"13284":"Set Temp Descriptor, String Length (FAC+0)",
"13286":"Retun to Caller",
"13287":"Get a Quotation Mark/Character",
"13289":"Store Quote so STRLTRL2 will stop on it",
"13291":"Store Quote so STRLTRL2 will stop on it",
"13293":"Set Start of String: TmpStrPtr#1, Low",
"13295":"Set Start of String: TmpStrPtr#1, High",
"13297":"Set Temp Descriptor, String Pointer, Low",
"13299":"Set Temp Descriptor, String Pointer, High",
"13301":"Preset Indirect Addressing Index",
"13303":"Advance Indirect Addressing Index ",
"13304":"Get Next String Character",
"13306":"Branch if [Z=1] End of Zero-String Found",
"13308":"Else [Z=0]: Is it Alternate Terminator #1?",
"13310":"Branch if [Z=1] End of String Found",
"13312":"Else [Z=0]: Is it Alternate Terminator #2?",
"13314":"Loop if [Z=0] End of String NOT Found",
"13316":"Is it a Quotation Mark?",
"13318":"Branch if [Z=1] Quote Found [C=1]",
"13320":"Prepare to Add with NO Carry (No Quote!)",
"13321":"Set Temp Descriptor, String Length",
"13323":"Get Temp Descriptor, String Length",
"13324":"Add Start of String: TmpStrPtr#1, Low",
"13326":"Set End of String: TmpStrPtr#2, Low",
"13328":"Get Start of String: TmpStrPtr#1, High",
"13330":"If NO Carry, Skip incrementing High Byte:",
"13332":"Inc Start of String: TmpStrPtr#1, High",
"13333":"Set End of String: TmpStrPtr#2, High",
"13335":"Get Start of String: TmpStrPtr#1, High",
"13337":"Page 0!  (Must be from STR$ Function)",
"13339":"Is it in the Input Buffer (Page 2)?",
"13341":"NO, Not Page 0 or 2; So just do Descriptor",
"13343":"Get Temp Descriptor, String Length",
"13344":"Make Space for the String",
"13347":"Get Start of String: TmpStrPtr#1, Low",
"13349":"Get Start of String: TmpStrPtr#1, High",
"13351":"Move the Character String",
"13354":"Get SD Stack: Next Temp Descriptor Pointer",
"13356":"Is Stack Full: Too many Temp Descriptors?",
"13358":"NO; There is room for another one",
"13360":"YES; Throw a \"?Formula Too Complex\" Error:",
"13362":"Go Print Error Message based on X-Reg",
"13365":"Get Temp Descriptor, String Length",
"13367":"Set SD Stack: Tmp Descriptor, StrLen",
"13369":"Get Temp Descriptor, String Address, Low",
"13371":"Set SD Stack: Tmp Descriptor, StrAdr, Low",
"13373":"Get Temp Descriptor, String Address, High",
"13375":"Set SD Stack: Tmp Descriptor, StrAdr, High",
"13377":"Get Zero to Clear:",
"13379":"Set Temp Variable Pointer, Low     (FAC+3)",
"13381":"Set Temp Variable Pointer, High    (FAC+4)",
"13383":"Get String Variable Type ($FF)",
"13384":"Flag as String: Set Variable Type to ($FF)",
"13386":"Set SD Stack: Last Temp Descriptor Pointer",
"13389":"Add 3 bytes (per Descriptor) to it",
"13391":"Set SD Stack: Next Temp Descriptor Pointer",
"13393":"Return to Caller",
"13394":"Enable Garbage Collection",
"13396":"Save String Length (Bytes) Desired/Needed",
"13397":"Invert Bits",
"13399":"Prepare for Add with Carry Set (Adds 1)",
"13400":"Add Top of Free Space, Low",
"13402":"Get Top of Free Space, High",
"13404":"BGE: Branch if in Same Page of Memory",
"13406":"Else, Reduce Page Address, too",
"13407":"CMP to End of Vars \u0026 Ptrs Storage, High",
"13409":"NO: Try Garbage Collection to Free Memory",
"13411":"YES: It Fits in Memory Remaining",
"13413":"CMP to End of Vars \u0026 Ptrs Storage, Low",
"13415":"NO: Try Garbage Collection to Free Memory",
"13417":"Set Top of Free Space, Low",
"13419":"Set Top of Free Space, High",
"13421":"Set Temporary String Pointer, Low",
"13423":"Set Temporary String Pointer, High",
"13425":"Save Top of Free Space, Low",
"13426":"Pull String Length Aquired [into (A)], too",
"13427":"Return to Caller (w/ all these things set)",
"13428":"Get \"?Out Of Memory\" Error Message Index",
"13430":"Get Garbage Collection Flag; Done Yet?",
"13432":"YES: Print Error Message based on X-Reg",
"13434":"NO: Maximize Free-Space, Collect Garbage",
"13437":"Flag Garbage Collection Done",
"13439":"Set Garbage Collection Flag",
"13441":"Pull String Length (Bytes) Desired/Needed",
"13442":"Branch if String Space still Needed",
"13444":"Get End of String Space (HIMEM) Ptr, Low",
"13446":"Get End of String Space (HIMEM) Ptr, High",
"13448":"Set Top of Free Space, Low",
"13450":"Set Top of Free Space, High",
"13452":"Clear Y-Index Register",
"13454":"Clear Address of Descriptor, High",
"13456":"Get End of Array Vars \u0026 Ptrs Storage, Low",
"13458":"Get End of Array Vars \u0026 Ptrs Storage, High",
"13460":"Set as Bottom of Free Space, Low",
"13462":"Set as Bottom of Free Space, High",
"13464":"Get Address of Next Temp Dscrptr Ptr, Low",
"13466":"Get Address of Next Temp Dscrptr Ptr, High",
"13468":"Set String Variable Index Pointer, Low",
"13470":"Set String Variable Index Pointer, High",
"13472":"Done Collecting Temporary Descriptors?",
"13474":"YES: Go Do Simple Variables; EXIT LOOP",
"13476":"NO: Check Temporary String Descriptor",
"13479":"Loop-Back; Always Taken",
"13481":"Get Standard Length of Simple Variables",
"13483":"Set String Descriptor Length",
"13485":"Get Start of Variables Pointer, Low",
"13487":"Get Start of Variables Pointer, High",
"13489":"Set String Variable Index Pointer, Low",
"13491":"Set String Variable Index Pointer, High",
"13493":"Reached Start of Arrays Pointer, High?",
"13495":"NO: Continue ...",
"13497":"Reached Start of Arrays Pointer, Low",
"13499":"YES: Go Collect Array Variables; EXIT LOOP",
"13501":"NO: Check Simple Variable",
"13504":"Loop-Back; Always Taken",
"13506":"Set as Now Variable Pointer, Low",
"13508":"Set as Now Variable Pointer, High",
"13510":"Get Standard Length of String Descriptors",
"13512":"Set String Descriptor Length",
"13514":"Get Next Variable Pointer, Low",
"13516":"Get Next Variable Pointer, High",
"13518":"Reached End of Vars \u0026 Ptrs Storage High?",
"13520":"NO: Continue ...",
"13522":"Reached End of Vars \u0026 Ptrs Storage, Low?",
"13524":"NO: Continue ...",
"13526":"Go Move Highest String to Top; EXIT LOOP",
"13529":"Set Array Variable Index Pointer, Low",
"13531":"Set Array Variable Index Pointer, High",
"13533":"Point at 1st Character of Array Name",
"13535":"Get 1st Character of Array Name",
"13537":"Save 1st Character of Array Name",
"13538":"Point at 2nd Character of Array Name",
"13539":"Get 2nd Character of Array Name",
"13541":"Push Status of 2nd Array Name Character",
"13542":"Point at Offset to Next Array, Low",
"13543":"Get Offset to Next Array, Low",
"13545":"Add Now Variable Pointer, Low",
"13547":"Set as Next Variable Pointer, Low",
"13549":"Point at Offset to Next Array, High",
"13550":"Get Offset to Next Array, High",
"13552":"Add Now Variable Pointer, High",
"13554":"Set as Next Variable Pointer, High",
"13556":"Pull Status of 2nd Array Name Character",
"13557":"Loop-Back if Real/FP Array (VarName)^",
"13559":"Retrieve 1st Character of Array Name",
"13560":"Loop-Back if Integer Array (VarName)^",
"13562":"Point at Number of Array Dimensions",
"13563":"Get Number of Array Dimensions",
"13565":"Clear Indirect Addressing Index",
"13567":"Double Number of Array Dimensions",
"13568":"\u0026 Add Five; Result: (A)=(2*Dims+5)",
"13570":"Add Array Variable Index Pointer, Low",
"13572":"Set Array Variable Index Pointer, Low",
"13574":"Skip Page Advance if Carry Clear",
"13576":"Else, Carry Set, Advance Page Address",
"13578":"Get Array Variable Index Pointer, High",
"13580":"Has Pointer Reached Next Variable, High?",
"13582":"NO: Process Next Element",
"13584":"Has Pointer Reached Next Variable, Low?",
"13586":"YES, Loop-Back: Do Next Array Variable",
"13588":"NO: Continue Processing Array",
"13591":"Loop-Back: Do Next Element; Always Taken",
"13593":"Get 1st Character of Variable Name",
"13595":"Branch if Not a String Variable",
"13597":"Point at 2nd Character of Variable Name",
"13598":"Get 2nd Character of Variable Name",
"13600":"Branch if Not a String Variable",
"13602":"Point at String Length",
"13603":"Get String Length",
"13605":"Skip it if it is a Null String",
"13607":"Point at String Address, Low",
"13608":"Get String Address, Low",
"13610":"Save (for CPX) String Address, Low",
"13611":"Point at String Address, High",
"13612":"Get String Address, High",
"13614":"Reached Top of Free Space, High?",
"13616":"NO, Below Top of Free Space, High",
"13618":"YES, Above Top of Free Space, High",
"13620":"Reached Top of Free Space, Low?",
"13622":"YES, Above Top of Free Space, Low",
"13624":"Reached Bottom of Free Space, High?",
"13626":"NO, Ignore for Now, Skip it",
"13628":"YES, This is the new Highest String",
"13630":"Reached Bottom of Free Space, Low?",
"13632":"NO, Ignore for Now, Skip it",
"13634":"Save as Pointer to Highest String, Low",
"13636":"Save as Pointer to Highest String, High",
"13638":"Get Address of Descriptor, Low",
"13640":"Get Address of Descriptor, High",
"13642":"Save as Address of Descriptor, Low",
"13644":"Save as Address of Descriptor, High",
"13646":"Get String Descriptor Length",
"13648":"Set as String Descriptor Length",
"13650":"Get String Descriptor Length",
"13652":"Prepare for Add with Carry",
"13653":"Add Address of Descriptor, Low",
"13655":"Set Address of Descriptor, Low",
"13657":"Skip Advancing Page if No Carry Over",
"13659":"Advance Address of Descriptor, High",
"13661":"Return (INDEX)=[(A,X)={Low,High}]",
"13663":"Return (Y)=(0)",
"13665":"Return to Caller",
"13666":"Retrieve Address of Descriptor, High",
"13668":"Collection Ends if Flag is still Zero",
"13670":"Get String Descriptor Length",
"13672":"If it was 3 or 7, make it 0 or 4",
"13674":"Make it 0 or 2; Name precedes Descriptor",
"13675":"Point at String Length in Descriptor",
"13676":"Save to Set Y-Index into Variable later",
"13678":"Get String Length from Descriptor",
"13680":"Add Bottom of Free Space, Low",
"13682":"Set as new Top-End of Arrays, Low",
"13684":"Get Bottom of Free Space, High",
"13686":"Add Carry to Bottom of Free Space, High",
"13688":"Set as new Top-End of Arrays, High",
"13690":"Get Top of Free Space, Low",
"13692":"Get Top of Free Space, High",
"13694":"Save as Start of String Space, Low",
"13696":"Save as Start of String Space, High",
"13698":"Move Memory Block Upward",
"13701":"Retrieve to Set Y-Index into Variable",
"13703":"Point at Descriptor String Pointer, Low",
"13704":"Get Start of String Space, Low",
"13706":"Set Descriptor String Pointer, Low",
"13708":"Save Pointer to Moved String, Low",
"13709":"Advance Start of String Space, High",
"13711":"Get Start of String Space, High",
"13713":"Point at Descriptor String Pointer, High",
"13714":"Set Descriptor String Pointer, High",
"13716":"Find Next Variable to Collect",
"13719":"Get Temp Variable Pointer, High (FAC+4)",
"13721":"Push Address of 1st Descriptor, High",
"13722":"Get Temp Variable Pointer, Low  (FAC+3)",
"13724":"Push Address of 1st Descriptor, Low",
"13725":"Put Pointer to String Descriptor in FAC",
"13728":"Assure (FAC) Type is String (VALTYP=$FF)",
"13731":"Pull Address of 1st Descriptor, Low",
"13732":"Set Pointer to 1st String, Low",
"13734":"Pull Address of 1st Descriptor, High",
"13735":"Set Pointer to 1st String, High",
"13737":"Clear Indirect Addressing Index",
"13739":"Get Length of 1st String",
"13741":"Prepare for Add with Carry",
"13742":"Add Length of 2nd String (FAC+3,4)",
"13744":"Branch if \u003c $100; Total Length is OK",
"13746":"Throw a \"?String Too Long\" Error",
"13748":"Print Error based on X-Reg",
"13751":"Initialize String Space \u0026 Descriptors",
"13754":"Move in 1st String",
"13757":"Get String Descriptor Pointer, Low",
"13759":"Get String Descriptor Pointer, High",
"13761":"Free up a Temporary String",
"13764":"Move in 2nd String",
"13767":"Get String Descriptor Pointer, Low",
"13769":"Get String Descriptor Pointer, High",
"13771":"Free up a Temporary String",
"13774":"Setup Descriptor",
"13777":"Finish Expression Evaluation",
"13780":"Point at String Length",
"13782":"Get String Length (* from its Descriptor)",
"13784":"Push String Length",
"13785":"Point at String Pointer, Low",
"13786":"Get String Pointer, Low (*)",
"13788":"Save String Pointer, Low",
"13789":"Point at String Pointer, High",
"13790":"Get String Pointer, High (*)",
"13792":"Save String Pointer, High",
"13793":"Pull String Length",
"13794":"Save String Pointer, Low",
"13796":"Save String Pointer, High",
"13798":"Save String Length as Count Down Index",
"13799":"Done if Count Down Index is Zero",
"13801":"Push String Length",
"13802":"Reduce String Length Count Down Index",
"13803":"Get Old String Character Byte",
"13805":"Set New String Character Byte",
"13807":"Get String Length Count Down Index",
"13808":"Loop-Back if Not Done",
"13810":"Pull String Length",
"13811":"Prepare for Add with Carry",
"13812":"Add Temporary String Pointer, Low",
"13814":"Set Temporary String Pointer, Low",
"13816":"Skip Advancing High Byte if NO Carryover",
"13818":"Add Carry \u0026 Set Temp String Pointer, High",
"13820":"Return to Caller",
"13821":"Assure (FAC) Type is String (VALTYP=$FF)",
"13824":"Get Temp Variable Pointer, Low (FAC+3)",
"13826":"Get Temp Variable Pointer, High (FAC+4)",
"13828":"Save Pointer to String Descriptor, Low",
"13830":"Save Pointer to String Descriptor, High",
"13832":"Free Temp Descriptor w/o Freeing up String",
"13835":"Push Status: Remember if Temp (Z=1) or Not",
"13836":"Point at String Length in Descriptor",
"13838":"Get String Length",
"13840":"Push String Length",
"13841":"Point at String Pointer, Low",
"13842":"Get String Pointer, Low",
"13844":"Save String Pointer, Low",
"13845":"Point at String Pointer, High",
"13846":"Get String Pointer, High",
"13848":"Save String Pointer, High",
"13849":"Pull String Length",
"13850":"Pull Status: Retrieve if Temp (Z=1) or Not",
"13851":"Branch if Not Temporary String (Z=0)",
"13853":"Compare to Top of Free Space, High",
"13855":"NO: Branch if Not Lowest String",
"13857":"Compare to Top of Free Space, Low",
"13859":"NO: Branch if Not Lowest String",
"13861":"Push String Length",
"13862":"Prepare for Add with Carry",
"13863":"Add Top of Free Space, Low",
"13865":"Set Top of Free Space, Low",
"13867":"Skip Advancing High Byte if NO Carryover",
"13869":"Add Carry \u0026 Set Top of Free Space, High",
"13871":"Pull String Length",
"13872":"Set as Address of String, Low",
"13874":"Set as Address of String, High",
"13876":"Return to Caller",
"13877":"Compare to SD Stack: Last TD Pointer, High",
"13879":"Cannot Release if NOT Same One",
"13881":"Compare to SD Stack: Last TD Pointer, Low",
"13883":"Cannot Release if NOT Same One",
"13885":"Set SD Stack: Next TD Pointer",
"13887":"Reduce SD Stack: Last TD Pointer, Low",
"13889":"Set SD Stack: Last TD Pointer, Low",
"13891":"Set SD Stack: Last TD Pointer, High",
"13893":"Return to Caller",
"13894":"Evaluate Formula at TXTPTR into (X) \u0026 FAC",
"13897":"Get Result; ^[Real]--\u003e[Integer (0..255)]",
"13898":"Push Result",
"13899":"Get Space for a Single-Character String ",
"13901":"Make String Space \u0026 Set Temp Descriptor",
"13904":"Pull Result",
"13905":"Clear Indirect Addressing Index",
"13907":"Set Temp Descriptor, Str Adrs, Low (FAC+1)",
"13909":"Pull/Discard UNARY2 Return Address, Low",
"13910":"Pull/Discard UNARY2 Return Address, High",
"13911":"Make it a Temporary String",
"13914":"Do Common Setup for LEFT$|RIGHT$|MID$",
"13917":"[(2nd Parameter)\u003c(Original Length)]?",
"13919":"Clear (A)=[(Y=0): Start Point in String]",
"13920":"BLT: 2nd Parameter is Smaller, Use It",
"13922":"Else, Original Length is Smaller, Use It",
"13924":"Save Original String Length",
"13925":"Clear (A)=[(Y=0): Start Point in String]",
"13926":"Push Starting Point in Original String ",
"13927":"Retrieve Length (or Width) of Substring",
"13928":"Push Length (or Width) of Substring",
"13929":"Make String Space \u0026 Set Temp Descriptor",
"13932":"Get String Descriptor Pointer, Low",
"13934":"Get String Descriptor Pointer, High",
"13936":"Release Parameter String if Temporary",
"13939":"Pull Length (Width) of Substring",
"13940":"Save Length (Width) of Substring",
"13941":"Pull Starting Point in Original String,",
"13942":"Prepare for Add with Carry",
"13943":"Add Move Strings Index Pointer",
"13945":"Set Move Strings Index Pointer",
"13947":"Skip Advancing High Byte if NO Carryover",
"13949":"Add Carry to Move Strings Index Ptr, High",
"13951":"Retrieve Length (Width) of Substring",
"13952":"Move Substring to String Space",
"13955":"Go Make it a Temporary String",
"13958":"Do Common Setup for LEFT$|RIGHT$|MID$",
"13961":"Prepare to Subtract w/ Borrow [A-Data-!C]",
"13962":"Subtract Original String Length [A-Len-1]",
"13964":"Invert Bits [Negate(A-Len-1)=(Len+1-A)]",
"13966":"Goto End Code for RIGHT$",
"13969":"Setup Large Fake Length for 3rd Parameter",
"13971":"Set FAC Mantissa, Low",
"13973":"Get Last Char/Token Got",
"13976":"Was it a Closing Parenthsis [\")\"]?",
"13978":"YES, Then there is No 3rd Parameter",
"13980":"NO, Then a Comma is Required",
"13983":"Evaluate 3rd Parameter into FAC+4",
"13986":"Do Common Setup for LEFT$|RIGHT$|MID$",
"13989":"Reduce 2nd Parameter [(Specified Start)-1]",
"13990":"Get it as Specified Offset  [^]",
"13991":"Push it as Specified Offset [^]",
"13992":"Prepare to Subtract w/ Borrow [A-Data-!C]",
"13993":"Clear X-Reg (before Branch-Backs occur)",
"13995":"Subtract Original String Length [A-Len-1]",
"13997":"BGE: Branch if Offset \u003e Original Length",
"13999":"Invert Bits [Negate(A-Len-1)=(Len+1-A)]",
"14001":"[(Remainder Length)\u003c(Specified Length)]?",
"14003":"BLT: Goto End Code for MID$ if So",
"14005":"Retrieve 2nd Parameter, Specified (Aexpr1)",
"14007":"Goto End Code for MID$; Always Taken",
"14009":"Require Closing Parenthsis [\")\"] at TXTPTR",
"14012":"Pull Return Address, Low",
"14013":"Save Return Address, Low",
"14014":"Pull Return Address, High",
"14015":"Save Return Address, High",
"14017":"Pull/Discard UNARY2 Return Address, Low",
"14018":"Pull/Discard UNARY2 Return Address, High",
"14019":"Pull 2nd Parameter of Command",
"14020":"Save 2nd Parameter of Command",
"14021":"Get String Descriptor Address, Low",
"14022":"Set String Descriptor Pointer, Low",
"14024":"Get String Descriptor Address, High",
"14025":"Set String Descriptor Pointer, High",
"14027":"Get Return Address, High",
"14029":"Push Return Address, High",
"14030":"Get Return Address, Low",
"14031":"Push Return Address, Low",
"14032":"Clear Indirect Addressing Index",
"14034":"Retrieve 2nd Parameter of Command",
"14035":"If Zero, Throw \"?Illegal Quantity\" Error ",
"14037":"Else, Return to Caller",
"14038":"Get Length in Y-Reg, Make FAC Numeric",
"14041":"Float Unsigned Integer \u0026 Flag as a Number",
"14044":"If Last Result is a Temp String, Free It",
"14047":"Clear X-Reg",
"14049":"Make Variable Type Numeric",
"14051":"Return Length In Y-Reg",
"14052":"Return to Caller",
"14053":"Put String Pointer in INDEX, Length in (A)",
"14056":"If Zero, Throw \"?Illegal Quantity\" Error ",
"14058":"Clear Indirect Addressing Index",
"14060":"Get 1st Character of String",
"14062":"Prepare to Float 1st Character of String",
"14063":"Float Unsigned Integer \u0026 Flag as a Number",
"14066":"Print \"?Illegal Quantity\" Error Message",
"14069":"Get Next Char/Token",
"14072":"Eval \u0026 Assure: Put in FAC if it\u0027s a Number",
"14075":"Convert FAC to Integer in (FAC+3,4) \u0026 (X)",
"14078":"FAC Mantissa, Middle (FAC+3) must be Zero!",
"14080":"Print \"?Illegal Quantity\" Error Message",
"14082":"Get FAC Mantissa, Low (FAC+4)",
"14084":"Get Last Char/Token Got",
"14087":"Put String Pointer in INDEX, Length in (A)",
"14090":"Branch if [(A)=(String Length)]\u003c\u003e(0)",
"14092":"Goto Zero FAC Signed Exponent \u0026 Sign",
"14095":"Get Next Char/Token Pointer, Low",
"14097":"Get Next Char/Token Pointer, High",
"14099":"Set String Pointer #2, Low",
"14101":"Set String Pointer #2, High",
"14103":"Get String Pointer, Low",
"14105":"Set Next Char/Token Pointer, Low",
"14107":"Prepare for Add with Carry",
"14108":"Add String Pointer, Low",
"14110":"Set Move Strings Destination Pointer, Low",
"14112":"Get String Pointer, High",
"14114":"Set Next Char/Token Pointer, High",
"14116":"Skip Advancing High Byte if NO Carryover",
"14118":"Add String Pointer, High",
"14119":"Set Move Strings Destination Pointer, High",
"14121":"Clear Indirect Addressing Index",
"14123":"Get Byte after String",
"14125":"Push Byte after String",
"14126":"Clear Accumulator",
"14128":"Clear Byte after String",
"14130":"Get Last Char/Token Got (Does the Setup)",
"14133":"Evaluate String to FP Value in FAC",
"14136":"Pull Byte after String",
"14137":"Clear Indirect Addressing Index",
"14139":"Set Byte after String",
"14141":"Get String Pointer #2, Low",
"14143":"Get String Pointer #2, High",
"14145":"Set Next Char/Token Pointer, Low",
"14147":"Set Next Char/Token Pointer, High",
"14149":"Return to Caller",
"14150":"Eval Syntax \u0026 Assure Expression is Numeric",
"14153":"Convert FAC to a 16-bit Value in LINNUM",
"14156":"Require a (Data Separator) Comma 1st",
"14159":"Convert Expression to a Byte in X-Reg",
"14162":"Get FAC Exponent",
"14164":"[(FACX)\u003c=($FFFF)\u003c(2^16)]?",
"14166":"Print \"?Illegal Quantity\" Error Message",
"14168":"Convert FAC to (4 Byte) Integer",
"14171":"Get FAC Mantissa, Middle (FAC+3)",
"14173":"Get FAC Mantissa, Low (FAC+4)",
"14175":"Set Line Number Pointer, Low",
"14177":"Set Line Number Pointer, High",
"14179":"Return to Caller",
"14180":"Get Line Number Pointer, Low",
"14182":"Push Line Number Pointer, Low",
"14183":"Get Line Number Pointer, High",
"14185":"Push Line Number Pointer, High",
"14186":"Convert FAC to a 16-bit Value in LINNUM",
"14189":"Clear Indirect Addressing Index",
"14191":"Get Value at the PEEK Address",
"14193":"Set with Value from the PEEK Address",
"14194":"Pull Line Number Pointer, High",
"14195":"Set Line Number Pointer, High",
"14197":"Pull Line Number Pointer, Low",
"14198":"Set Line Number Pointer, Low",
"14200":"Float Unsigned Integer \u0026 Flag as a Number",
"14203":"Get Address in LINNUM \u0026 Value in X-Reg",
"14206":"Set (A)=(X)=(Byte Value to Store)",
"14207":"Clear Indirect Addressing Index",
"14209":"Set Value at the POKE Address",
"14211":"Return to Caller",
"14212":"Get Address in LINNUM \u0026 AND-Mask in X-Reg",
"14215":"Store AND-Mask in FORPTR, Low",
"14217":"Clear XOR-Mask (Default Value = %00000000)",
"14219":"Is an XOR-Mask Specified?",
"14222":"NO, Skip Getting It",
"14224":"YES, Get Specified XOR-Mask in X-Reg",
"14227":"Store XOR-Mask in FORPTR, High",
"14229":"Clear Indirect Addressing Index",
"14231":"Get Byte at Specified Address",
"14233":"Invert Specified Bits by XOR-Mask",
"14235":"Select Specified Bits by AND-Mask",
"14237":"Loop Until Bits NOT %00000000",
"14239":"Return to Caller",
"14240":"Get Low  Address of (The Number One Half)",
"14242":"Get High Address of (The Number One Half)",
"14244":"Go Add 0.5 to FAC",
"14247":"Unpack FP# at [(A,Y)={Low,High}] into ARG",
"14250":"Get FAC Unpacked Sign (msb)",
"14252":"Invert Bits (Negate)",
"14254":"Set FAC Unpacked Sign (msb)",
"14256":"XOR ARG Unpacked Sign (msb)",
"14258":"Set Sign Comparison Flag",
"14260":"Get FAC Exponent (Status if FACX=0)",
"14262":"Go Add ARG to -FAC; Result: FAC=ARG-FAC",
"14265":"Align Radix (Bits) by Shifting Byte Right",
"14268":"Always Taken",
"14270":"Unpack FP# at [(A,Y)={Low,High}] into ARG",
"14273":"Branch if FAC is Not Zero (FAC\u003c\u003e0)",
"14275":"Else, Go Copy ARG into FAC (FAC=0+ARG)",
"14278":"Get FAC Extra Precision Byte for FP Op\u0027s",
"14280":"Set ARG Extra Precision Byte for FP Op\u0027s",
"14282":"Get Set to Shift ARG",
"14284":"Get ARG Exponent (ARGX)",
"14286":"Set Y-Reg = ARG Exponent (ARGX)",
"14287":"EXIT if ARG=0 (FAC=FAC+0)",
"14289":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"14290":"Subtract FACX from ARGX",
"14292":"Go Add if Exponents Equal (FACX=ARGX)",
"14294":"Branch if ARG has Smaller Exponent",
"14296":"Set FAC Exponent = ARG Exponent",
"14298":"Get ARG Unpacked Sign (msb)",
"14300":"Set FAC Unpacked Sign (msb)",
"14302":"Invert Bits (Negate)",
"14304":"Add with Carry still Set, Adds 1",
"14306":"Clear Y-Reg",
"14308":"Clear ARG Extra Precision Byte for FP Op\u0027s",
"14310":"Get Set to Shift FAC",
"14312":"Always Taken",
"14314":"Clear Y-Reg",
"14316":"Clear FAC Extra Precision Byte for FP Op\u0027s",
"14318":"=(-7); Shifting more than 7 bits?",
"14320":"Branch if Shifting more than 7 bits",
"14322":"Set Number of Shifts Index (Counter)",
"14323":"Get FAC Extra Precision Byte for FP Op\u0027s",
"14325":"Start Shifting...  [(LOC1..LOC4) then (A)]",
"14327":"...Complete Shifting  [(LOC2..LOC4) \u0026 (A)]",
"14330":"Do FAC \u0026 ARG Have Same Signs?",
"14332":"YES, Go Add Mantissas",
"14334":"NO, Subtract Smaller from Larger",
"14336":"[(X)=(#FAC)]  Which was Shifted Right?  ",
"14338":"If ARG was Shifted Right, Do FAC-ARG",
"14340":"If FAC was Shifted Right, Do ARG-FAC",
"14342":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"14343":"Invert Bits [Negate (A)]",
"14345":"Add ARG Extra Precision Byte for FP Op\u0027s",
"14347":"Set FAC Extra Precision Byte for FP Op\u0027s",
"14349":"Get Larger Mantissa, Low",
"14352":"Subtract Smaller Mantissa, Low",
"14354":"Set FAC Mantissa, Low",
"14356":"Get Larger Mantissa, Middle",
"14359":"Subtract Smaller Mantissa, Middle",
"14361":"Set FAC Mantissa, Middle",
"14363":"Get Larger Mantissa, High",
"14366":"Subtract Smaller Mantissa, High",
"14368":"Set FAC Mantissa, High",
"14370":"Get Larger Mantissa, Top",
"14373":"Subtract Smaller Mantissa, Top",
"14375":"Set FAC Mantissa, Top",
"14377":"Branch if Different Position Values",
"14379":"Else, Two\u0027s Compliment FAC",
"14382":"Clear Y-Reg",
"14384":"Clear Shift Up Counter (A-Reg)",
"14385":"Prepare for Add with Carry",
"14386":"Get FAC Mantissa, Top",
"14388":"Finish Normalizing FAC if any 1-Bits here",
"14390":"Get FAC Mantissa, High",
"14392":"Set FAC Mantissa, Top",
"14394":"Get FAC Mantissa, Middle",
"14396":"Set FAC Mantissa, High",
"14398":"Get FAC Mantissa, Low",
"14400":"Set FAC Mantissa, Middle",
"14402":"Get FAC Extra Precision Byte for FP Op\u0027s",
"14404":"Set FAC Mantissa, Low",
"14406":"Zero FAC Extra Precision Byte for FP Op\u0027s",
"14408":"Advance Shift Count (Add 8 Bits)",
"14410":"Done 4 times yet? [(4*(8 Bits))=(4 Bytes)]",
"14412":"NO, Still might be some 1\u0027s; LOOP-Back",
"14414":"Clear Accumulator",
"14416":"Set FAC Signed Exponent",
"14418":"Set FAC Sign",
"14420":"Return to Caller",
"14421":"Add ARG Extra Precision Byte for FP Op\u0027s",
"14423":"Set FAC Extra Precision Byte for FP Op\u0027s",
"14425":"Get FAC Mantissa, Low",
"14427":"Add ARG Mantissa, Low",
"14429":"Set FAC Mantissa, Low",
"14431":"Get FAC Mantissa, Middle",
"14433":"Add ARG Mantissa, Middle",
"14435":"Set FAC Mantissa, Middle",
"14437":"Get FAC Mantissa, High",
"14439":"Add ARG Mantissa, High",
"14441":"Set FAC Mantissa, High",
"14443":"Get FAC Mantissa, Top",
"14445":"Add ARG Mantissa, Top",
"14447":"Set FAC Mantissa, Top",
"14449":"Go See if Matissa Carried",
"14452":"Count Bits Shifted",
"14454":"Shift Left: FAC Extra Precision Byte",
"14456":"Shift Left: FAC Mantissa, Low",
"14458":"Shift Left: FAC Mantissa, Middle",
"14460":"Shift Left: FAC Mantissa, High",
"14462":"Shift Left: FAC Mantissa, Top",
"14464":"Repeat until FAC-Top becomes Negative",
"14466":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"14467":"Subtract FAC Exponent from Bits Shifted",
"14469":"Branch if Underflow; Return FAC Zeroed",
"14471":"Invert Bits (Negate)",
"14473":"Two\u0027s Complement (A)",
"14475":"Set FAC Exponent (Two\u0027s Complemented)",
"14477":"Return to Caller if Carry is Clear",
"14479":"Advance FAC Exponent; Add Carry (+1)",
"14481":"Throw Overflow Error if Exponent Too Big",
"14483":"Shift Right: FAC Mantissa, Top",
"14485":"Shift Right: FAC Mantissa, High",
"14487":"Shift Right: FAC Mantissa, Middle",
"14489":"Shift Right: FAC Mantissa, Low",
"14491":"Shift Right: FAC Extra Precision Byte",
"14493":"Return to Caller",
"14494":"Get FAC Sign",
"14496":"Invert Bits (Negate)",
"14498":"Set FAC Sign",
"14500":"Get FAC Mantissa, Top",
"14502":"Invert Bits (Negate)",
"14504":"Set FAC Mantissa, Top",
"14506":"Get FAC Mantissa, High",
"14508":"Invert Bits (Negate)",
"14510":"Set FAC Mantissa, High",
"14512":"Get FAC Mantissa, Middle",
"14514":"Invert Bits (Negate)",
"14516":"Set FAC Mantissa, Middle",
"14518":"Get FAC Mantissa, Low",
"14520":"Invert Bits (Negate)",
"14522":"Set FAC Mantissa, Low",
"14524":"Get FAC Extra Precision Byte",
"14526":"Invert Bits (Negate)",
"14528":"Set FAC Extra Precision Byte",
"14530":"Advance FAC Extra Precision Byte",
"14532":"Return to Caller if No Carryover",
"14534":"Advance FAC Mantissa, Low",
"14536":"Return to Caller if No Carryover",
"14538":"Advance FAC Mantissa, Middle",
"14540":"Return to Caller if No Carryover",
"14542":"Advance FAC Mantissa, High",
"14544":"Return to Caller if No Carryover",
"14546":"Advance FAC Mantissa, Top",
"14548":"Return to Caller",
"14549":"Throw an \"?Overflow\" Error:",
"14551":"Go Print Error Message based on X-Reg",
"14554":"Get Pointer to Bytes to be Shifted",
"14556":"Get RESULT Mantissa, Low",
"14558":"Set FAC Extra Precision Byte",
"14560":"Get RESULT Mantissa, Middle",
"14562":"Set RESULT Mantissa, Low",
"14564":"Get RESULT Mantissa, High",
"14566":"Set RESULT Mantissa, Middle",
"14568":"Get RESULT Mantissa, Top",
"14570":"Set RESULT Mantissa, High",
"14572":"Get FAC Right Shift Sign Extension",
"14574":"Set RESULT Mantissa, Top ($00 or $FF)",
"14576":"Reduce Negative Shift Count (Add 8 Bits)",
"14578":"Repeat if Neg Shift Count \u003c 0 still",
"14580":"Repeat if Neg Shift Count = 0 also",
"14582":"Advance Neg Shift Count (Subtract 8 Bits)",
"14584":"Save Remaining Negative Shift Count",
"14585":"Get FAC Extra Precision Byte",
"14587":"EXIT if Shift Right Finished",
"14589":"Shift Left: RESULT Mantissa, Top",
"14591":"Skip Advancing Top Byte if NO Carry",
"14593":"Advance (+1) Result, Top; Adds Carry",
"14595":"Shift Right: RESULT Mantissa, Top (1st)",
"14597":"Shift Right: RESULT Mantissa, Top (2nd)",
"14599":"Shift Right: RESULT Mantissa, High",
"14601":"Shift Right: RESULT Mantissa, Middle",
"14603":"Shift Right: RESULT Mantissa, Low",
"14605":"Shift Right: Extension Byte (A)",
"14606":"Reduce Negative Shift Count (Add a Bit)",
"14607":"LOOP: Shift Right Until All Bits Done",
"14609":"Return with Carry Clear",
"14610":"Return to Caller",
"14611":"\u003c-[Normalized]; The Number One (1)",
"14616":"Number of Log Coefficients - 1",
"14617":"* X^7 +              :[10^7 = 10,000,000]",
"14622":"* X^5 +              :[10^5 =    100,000]",
"14627":"* X^3 +              :[10^3 =      1,000]",
"14632":"* X^1 +              :[10^1 =         10]",
"14637":"SQR(1/2) = 0.707106781",
"14642":"  SQR(2) = 1.414213562",
"14647":"   -1/2  = -.500000000",
"14652":"   ln(2) = 0.693147181; {\u003c\u003e POLY_EXP_LN2}",
"14657":"FAC Sign (Neg|0|Pos) Returns (A)=(-1|0|1)",
"14660":"Do Illegal Quantity Error if Not Positive",
"14662":"Do Natural Logarithm if Number is Positive",
"14664":"Print \"?Illegal Quantity\" Error Message",
"14667":"Get FAC Exponent [Log (base 2)]",
"14669":"Subtract with Borrow [A-Data-!C]:(!C=1)",
"14671":"Push FAC Exponent [Unbiased (FACX-$80)]",
"14672":"Normalize between .5 \u0026 1",
"14674":"Set FAC Exponent [Normalized]",
"14676":"Get Address of Constant [SQR(1/2)], Low",
"14678":"Get Address of Constant [SQR(1/2)], High",
"14680":"Add FAC to (A,Y) \u0026 Put back in FAC",
"14683":"Get Address of Constant [SQR(2)], Low",
"14685":"Get Address of Constant [SQR(2)], High",
"14687":"Divide FAC into (A,Y) \u0026 Put back in FAC",
"14690":"Get Address of Constant [One (1)], Low",
"14692":"Get Address of Constant [One (1)], High",
"14694":"Subtract FAC from (A,Y) \u0026 Put back in FAC",
"14697":"Get Address of Log Coefficients, Low",
"14699":"Get Address of Log Coefficients, High",
"14701":"Compute [LOG (base 2) of (+.5)]:",
"14704":"Get Address of Constant [(-.5)], Low",
"14706":"Get Address of Constant [(-.5)], High",
"14708":"Add FAC to (A,Y) \u0026 Put back in FAC",
"14711":"Pull FAC Exponent [Unbiased (FACX-$80)]",
"14712":"Add FAC to (A) \u0026 Put back in FAC",
"14715":"Get Address of Constant [ln(2)], Low",
"14717":"Get Address of Constant [ln(2)], High",
"14719":"Unpack FP# at [(A,Y)={Low,High}] into ARG",
"14722":"Branch if FAC is Not Zero (FAC\u003c\u003e0)",
"14724":"So, just Return if FAC is Zero (FAC=0)",
"14727":"Add ARG \u0026 FAC Exponents [FACX=ARGX+FACX]",
"14730":"Initialize Product = 0",
"14732":"Set RESULT Mantissa, Top",
"14734":"Set RESULT Mantissa, High",
"14736":"Set RESULT Mantissa, Middle",
"14738":"Set RESULT Mantissa, Low",
"14740":"Get FAC Extra Precision Byte",
"14742":"Multiply (A) by ARG \u0026 Add to RESULT",
"14745":"Get FAC Mantissa, Low",
"14747":"Multiply (A) by ARG \u0026 Add to RESULT",
"14750":"Get FAC Mantissa, Middle",
"14752":"Multiply (A) by ARG \u0026 Add to RESULT",
"14755":"Get FAC Mantissa, High",
"14757":"Multiply (A) by ARG \u0026 Add to RESULT",
"14760":"Get FAC Mantissa, Top",
"14762":"Multiply ARG by (A) \u0026 Add to RESULT",
"14765":"Go Move RESULT into FAC \u0026 Normalize",
"14768":"Branch if Multipliand is Not Zero (A\u003c\u003e0)",
"14770":"Go Shift RESULT Right 1 Byte (Speedier!)",
"14773":"Shift Multipliand LS-Bit into Carry",
"14774":"Supply a Guard MS-Bit (to LOOP 8 times)",
"14776":"Save Remaining Multipliand with Guard Bit",
"14777":"Branch if Multipliand LS-Bit is Zero (C=0)",
"14779":"Prepare for Add with Carry",
"14780":"Get RESULT Mantissa, Low",
"14782":"Add ARG Mantissa, Low",
"14784":"Set RESULT Mantissa, Low",
"14786":"Get RESULT Mantissa, Middle",
"14788":"Add ARG Mantissa, Middle",
"14790":"Set RESULT Mantissa, Middle",
"14792":"Get RESULT Mantissa, High",
"14794":"Add ARG Mantissa, High",
"14796":"Set RESULT Mantissa, High",
"14798":"Get RESULT Mantissa, Top",
"14800":"Add ARG Mantissa, Top",
"14802":"Set RESULT Mantissa, Top",
"14804":"Shift Right: RESULT Mantissa, Top",
"14806":"Shift Right: RESULT Mantissa, High",
"14808":"Shift Right: RESULT Mantissa, Middle",
"14810":"Shift Right: RESULT Mantissa, Low",
"14812":"Shift Right: FAC Extra Precision Byte",
"14814":"Retrieve Remaining Multipliand \u0026 Guard Bit",
"14815":"Shift Multipliand LS-Bit into Carry \u0026 ...",
"14816":"LOOP if Multipliand is Not Zero (A\u003c\u003e0) YET",
"14818":"Return to Caller",
"14819":"Set as NUMBER Pointer, Low",
"14821":"Set as NUMBER Pointer, High",
"14823":"Set Y-Index [=4] to Count Down Moves",
"14825":"Get NUMBER Mantissa, Low",
"14827":"Set ARG Mantissa, Low",
"14829":"Reduce Y-Index [=3]",
"14830":"Get NUMBER Mantissa, Middle",
"14832":"Set ARG Mantissa, Middle",
"14834":"Reduce Y-Index [=2]",
"14835":"Get NUMBER Mantissa, High",
"14837":"Set ARG Mantissa, High",
"14839":"Reduce Y-Index [=1]",
"14840":"Get NUMBER Mantissa, Top",
"14842":"Set ARG Unpacked Sign (msb), too",
"14844":"XOR with FAC Unpacked Sign (msb)",
"14846":"Set Sign Flag for Comparing as M/D Sign ",
"14848":"Get ARG Unpacked Sign (msb) to...",
"14850":"Set Normalized Invisible Bit (msb)",
"14852":"Set ARG Mantissa, Top",
"14854":"Reduce Y-Index [=0]",
"14855":"Get NUMBER Exponent",
"14857":"Set ARG Exponent",
"14859":"Get FAC Exponent (to Check Zero Status)",
"14861":"Return [(A)=(FAC Exponent)] to Caller",
"14862":"Get ARG Exponent",
"14864":"Branch if ARG=0, Result is Zero",
"14866":"Prepare for Add with Carry",
"14867":"Add FAC Exponent",
"14869":"Branch if In Range",
"14871":"Branch if Overflow",
"14873":"Prepare for Add with Carry",
"14874":"Fake BIT OpCode to skip next line",
"14875":"Branch if Underflow, Result is Zero",
"14877":"Add to Re-Bias Exponent",
"14879":"Set FAC Exponent with Result",
"14881":"Branch if FAC\u003c\u003e0, Result is In Range",
"14883":"GO Zero FAC Sign",
"14886":"Get Sign Flag for Comparing",
"14888":"Use it to Set Sign of Result in FAC",
"14890":"Return to Caller \u003c* from here, not via JMP\u003e",
"14891":"Get FAC Unpacked Sign (msb)",
"14893":"Invert Bits (Negate)",
"14895":"Overflow Error if was Positive Number",
"14897":"Pull/Discard Return Address, Low",
"14898":"Pull/Discard Return Address, High",
"14899":"Return Zero if was Negative Number",
"14902":"Go Throw an \"?Overflow\" Error",
"14905":"Copy FAC to ARG (Rounded)",
"14908":"Test FAC Eponent:",
"14909":"EXIT if FACX=0",
"14911":"Prepare for Add with Carry",
"14912":"FACX+2 = [(2^2)*FACX] = 4*FACX",
"14914":"Throw an \"?Overflow\" Error if Carry is Set",
"14916":"Set as Flag for Adding Same Signed Values:",
"14918":"Set Sign Flag for Comparing",
"14920":"Makes FAC*5: [FACX=(4*FACX)+ARGX]",
"14923":"Makes FAC*10: [FACX=2*(FACX*5)]",
"14925":"Throw an \"?Overflow\" Error if FACX=0",
"14927":"Return to Caller",
"14928":"\u003c-[Normalized]; The Number Ten (10)",
"14933":"Copy FAC to ARG (Rounded)",
"14936":"Get Address of Constant Ten (10), Low",
"14938":"Get Address of Constant Ten (10), High",
"14940":"Set as Flag for Adding Same Signed Values:",
"14942":"Set Sign Flag for Comparing",
"14944":"Unpack #@[(A,Y)={Low,High}] into FAC (=10)",
"14947":"Divide ARG by FAC",
"14950":"Unpack FP# at [(A,Y)={Low,High}] into ARG",
"14953":"Throw a \"?Division by Zero\" Error if FAC=0",
"14955":"Else, Round FAC using MSB of FACEXT",
"14958":"Clear Accumulator",
"14960":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"14961":"Subtract FACX from Zero to get -FACX",
"14963":"Set FACX = -FACX",
"14965":"Add ARG \u0026 FAC Exponents [FACX=ARGX+FACX]",
"14968":"Advance FAC Exponent [FACX=FACX+1]",
"14970":"Throw an \"?Overflow\" Error if FACX=0",
"14972":"Get/Set as Loop Index [($FC)=(-4)]",
"14974":"Get/Set as Bit Count \u0026 Partial Quotient",
"14976":"Get ARG Mantissa, Top",
"14978":"Compare to FAC Mantissa, Top",
"14980":"Branch if Not Equal .. (ARGT \u003c\u003e FACT)",
"14982":"Get ARG Mantissa, High",
"14984":"Compare to FAC Mantissa, High",
"14986":"Branch if Not Equal .. (ARGH \u003c\u003e FACH)",
"14988":"Get ARG Mantissa, Middle",
"14990":"Compare to FAC Mantissa, Middle",
"14992":"Branch if Not Equal .. (ARGM \u003c\u003e FACM)",
"14994":"Get ARG Mantissa, Low",
"14996":"Compare to FAC Mantissa, Low",
"14998":"Push Processor Status",
"14999":"Shift Left: Bit Count \u0026 Partial Quotient",
"15000":"Skip Following Until 8 Bits Done (C=1)",
"15002":"Advance Loop Index",
"15003":"Store a Quotient Byte",
"15005":"Branch if Completed 5 Bytes (32 Bits)",
"15007":"EXIT if (X=1): Left Justify Extension Bits",
"15009":"Reset Bit Count \u0026 Partial Quotient",
"15011":"Pull Processor Status",
"15012":"BGE: Branch if ARG \u003e= FAC (C=1)",
"15014":"Shift Left: ARG Mantissa, Low",
"15016":"Shift Left: ARG Mantissa, Middle",
"15018":"Shift Left: ARG Mantissa, High",
"15020":"Shift Left: ARG Mantissa, Top",
"15022":"LOOP if (New) ARG Mantissa Overflows",
"15024":"LOOP if Further Comparison Needed",
"15026":"LOOP if No Comparison Needed; Always Taken",
"15028":"Save Bit Count \u0026 Partial Quotient",
"15029":"Get ARG Mantissa, Low",
"15031":"Subtract FAC Mantissa, Low",
"15033":"Set ARG Mantissa, Low",
"15035":"Get ARG Mantissa, Middle",
"15037":"Subtract FAC Mantissa, Middle",
"15039":"Set ARG Mantissa, Middle",
"15041":"Get ARG Mantissa, High",
"15043":"Subtract FAC Mantissa, High",
"15045":"Set ARG Mantissa, High",
"15047":"Get ARG Mantissa, Top",
"15049":"Subtract FAC Mantissa, Top",
"15051":"Set ARG Mantissa, Top",
"15053":"Retrieve Bit Count \u0026 Partial Quotient",
"15054":"LOOP: Shift ARG Mantissa Left 1 Bit \u0026 LOOP",
"15057":"Set Extension Bit Count; (Two Left Shifts",
"15059":"Always Taken",
"15061":"1. Shift Left: Accumulator",
"15062":"2. Shift Left: Accumulator",
"15063":"3. Shift Left: Accumulator",
"15064":"4. Shift Left: Accumulator",
"15065":"5. Shift Left: Accumulator",
"15066":"6. Shift Left: Accumulator",
"15067":"Set FAC Extra Precision Byte",
"15069":"Pull Processor Status",
"15070":"Copy RESULT into FAC Mantissa, \u0026 Normalize",
"15073":"Throw a \"?Division by Zero\" Error:",
"15075":"Go Print Error Message based on X-Reg",
"15078":"Get RESULT Mantissa, Top",
"15080":"Set FAC Mantissa, Top",
"15082":"Get RESULT Mantissa, High",
"15084":"Set FAC Mantissa, High",
"15086":"Get RESULT Mantissa, Middle",
"15088":"Set FAC Mantissa, Middle",
"15090":"Get RESULT Mantissa, Low",
"15092":"Set FAC Mantissa, Low",
"15094":"Go Normalize Value in FAC",
"15097":"Set as NUMBER Pointer, Low",
"15099":"Set as NUMBER Pointer, High",
"15101":"Set Y-Index [=4] to Count Down Moves",
"15103":"Get NUMBER Mantissa, Low",
"15105":"Set FAC Mantissa, Low",
"15107":"Reduce Y-Index [=3]",
"15108":"Get NUMBER Mantissa, Middle",
"15110":"Set FAC Mantissa, Middle",
"15112":"Reduce Y-Index [=2]",
"15113":"Get NUMBER Mantissa, High",
"15115":"Set FAC Mantissa, High",
"15117":"Reduce Y-Index [=1]",
"15118":"Get NUMBER Mantissa, Top",
"15120":"Set FAC Unpacked Sign (msb)",
"15122":"Set Normalized Invisible Bit (msb)",
"15124":"Set FAC Mantissa, Top",
"15126":"Reduce Y-Index [=0]",
"15127":"Get NUMBER Exponent",
"15129":"Set FAC Exponent",
"15131":"Clear FAC Extra Precision Byte",
"15133":"Return [(A)=(FAC Exponent)] to Caller",
"15134":"Get Zero-Page Address of TEMP2, Low",
"15136":"Fake BIT OpCode to skip next line",
"15137":"Get Zero-Page Address of TEMP1, Low",
"15139":"Get Zero-Page Address of TEMP1, High",
"15141":"Always Taken",
"15143":"Get Destination Address, Low",
"15145":"Get Destination Address, High",
"15147":"Round FAC using MS-Bit of FACEXT",
"15150":"Set as Destination Pointer, Low",
"15152":"Set as Destination Pointer, High",
"15154":"Set Y-Index [=4] to Count Down Moves",
"15156":"Get FAC Mantissa, Low",
"15158":"Set Destination Mantissa, Low",
"15160":"Reduce Y-Index [=3]",
"15161":"Get FAC Mantissa, Middle",
"15163":"Set Destination Mantissa, Middle",
"15165":"Reduce Y-Index [=2]",
"15166":"Get FAC Mantissa, High",
"15168":"Set Destination Mantissa, High",
"15170":"Reduce Y-Index [=1]",
"15171":"Get FAC Unpacked Sign (msb)",
"15173":"Set (AND Mask msb)=(FACSGN msb)",
"15175":"Set in (A): Sign Bit of FAC Mantissa, Top",
"15177":"Set Destination Mantissa, Signed Top",
"15179":"Reduce Y-Index [=0]",
"15180":"Get FAC Exponent",
"15182":"Set Destination Exponent",
"15184":"Clear FAC Extra Precision Byte",
"15186":"Return [(A)=(FAC Exponent)] to Caller",
"15187":"Get ARG Unpacked Sign (msb)",
"15189":"Set FAC Unpacked Sign (msb)",
"15191":"Set X-Index [=5] to Count Down Moves",
"15193":"Get ARG Value",
"15195":"Set FAC Value",
"15197":"Count Down Move",
"15198":"LOOP Until Done (X=0)",
"15200":"Clear FAC Extra Precision Byte",
"15202":"Return to Caller",
"15203":"Round FAC using MS-Bit of FACEXT",
"15206":"Set X-Index [=6] to Count Down Moves",
"15208":"Get FAC Value",
"15210":"set ARG Value",
"15212":"Count Down Move",
"15213":"LOOP Until Done (X=0)",
"15215":"Clear FAC Extra Precision Byte",
"15217":"Return to Caller",
"15218":"Get FAC Exponent",
"15220":"Branch if FACX=0 (Which means FAC=0 too!)",
"15222":"Else, Shift Left: FAC Extra Precision Byte",
"15224":"Return to Caller if No Carryover into FAC",
"15226":"Else, Advance FAC Mantissa (Add Carryover)",
"15229":"Return to Caller if No Carryover",
"15231":"Else, Advance FAC Exponent (Add Carryover)",
"15234":"Get FAC Exponent",
"15236":"Return (A = 0) to Caller if (FAC = 0)",
"15238":"Get FAC Unpacked Sign (msb)",
"15240":"Shift Sign (msb) Left into Carry",
"15241":"Get a Negative One (-1) for (FAC \u003c 0)",
"15243":"Return (A = -1) to Caller if (FAC \u003c 0)",
"15245":"Get a Positive One (+1) for (FAC \u003e 0)",
"15247":"Return (A = +1) to Caller (FAC \u003e 0)",
"15248":"FAC Sign (Neg|0|Pos) Returns (A)=(-1|0|1)",
"15251":"Set FAC Mantissa, Top",
"15253":"Clear Accumulator",
"15255":"Clear FAC Mantissa, High",
"15257":"Use Exponent 2^9 (to Move DP 8 Bits Right)",
"15259":"Get FAC Mantissa, High",
"15261":"Invert Bits (Negate)",
"15263":"Set Carry if FAC is a Positive Number",
"15264":"Clear Accumulator",
"15266":"Clear FAC Mantissa, Low",
"15268":"Clear FAC Mantissa, Middle",
"15270":"Set FAC Exponent (to Move DP 8 Bits Right)",
"15272":"Clear FAC Extra Precision Byte",
"15274":"Clear FAC Unpacked Sign (msb)",
"15276":"Go Normalize Value in FAC",
"15279":"Make FAC [Unpacked Sign (msb)] Positive",
"15281":"Return to Caller",
"15282":"Set as NUMBER Pointer, Low",
"15284":"Set as NUMBER Pointer, High",
"15286":"Clear Indirect Addressing Index (=0)",
"15288":"Get NUMBER Exponent",
"15290":"Advance Indirect Addressing Index (=1)",
"15291":"Save NUMBER Exponent (to Compare with FAC)",
"15292":"Branch if NUMBER Exponent is Zero",
"15294":"Get NUMBER Mantissa, Top",
"15296":"XOR with FAC Unpacked Sign (msb)",
"15298":"Branch if Signs Not Equal",
"15300":"Compare NUMBER to FAC, Exponents",
"15302":"Branch if Exponents Not Equal",
"15304":"Get NUMBER Mantissa, Top",
"15306":"Make NUMBER Negative",
"15308":"Compare NUMBER to FAC, Mantissa Tops",
"15310":"Branch if Mantissa Tops Not Equal",
"15312":"Advance Indirect Addressing Index (=2)",
"15313":"Get NUMBER Mantissa, High",
"15315":"Compare NUMBER to FAC, Mantissa Highs",
"15317":"Branch if Mantissa Highs Not Equal",
"15319":"Advance Indirect Addressing Index (=3)",
"15320":"Get NUMBER Mantissa, Middle",
"15322":"Compare NUMBER to FAC, Mantissa Middles",
"15324":"Branch if Mantissa Middles Not Equal",
"15326":"Advance Indirect Addressing Index (=4)",
"15327":"FAKE Extra Precision Byte (for NUMBER)",
"15329":"Compare FAKE to FAC, Extra Precision Bytes",
"15331":"Get NUMBER Mantissa, Low",
"15333":"Compare NUMBER to FAC, Mantissa Lows",
"15335":"Branch if Mantissa Lows are Equal",
"15337":"Get FAC Unpacked Sign (msb)",
"15339":"BLT: ABS(FAC) is Larger: Skip Negation",
"15341":"Else, ABS(FAC) is Smaller: Invert Bits",
"15343":"Go Convert (A) to (+1) or (-1)",
"15346":"Get FAC Exponent",
"15348":"EXIT if FAC Exponent is Zero",
"15350":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"15351":"Subtract #$A0 from FACX for Shift Count",
"15353":"Check FAC Unpacked Sign (msb)",
"15355":"Branch if Positive",
"15357":"Save (-# Fractional Bits) Shift Count",
"15358":"Set All Bits in Byte (A) [for Shifting]",
"15360":"Set FAC Right Shift Sign Extension",
"15362":"Two\u0027s Complement FAC Mantissa (only)",
"15365":"Retrieve (-# Fractional Bits) Shift Count",
"15366":"Point at FAC for Shift Right Subroutine",
"15368":"More than 7 Bits to Shift?",
"15370":"NO: Do Short (\u003c8b) Shift Right Subroutine",
"15372":"YES: Do Long (\u003e7b) Shift Right Subroutine",
"15375":"Y=0: Clear FAC Right Shift Sign Extension",
"15377":"Return to Caller",
"15378":"Save (-# Fractional Bits) Shift Count",
"15379":"Get FAC Unpacked Sign (msb)",
"15381":"Get Sign Bit (msb) Only [in (A)]",
"15383":"Shift Right: FAC Mantissa, Top",
"15385":"Merge with Sign: FAC Mantissa, Top",
"15387":"Set FAC Mantissa, Top",
"15389":"Finsh Shifting FAC (Mantissa-H/M/L, etc.)",
"15392":"Y=0: Clear FAC Right Shift Sign Extension",
"15394":"Return to Caller",
"15395":"Get FAC Exponent",
"15397":"Is (FACX\u003c$A0) [32 Bit Mantissa Exponent]?",
"15399":"BGE: EXIT if NOT (FACX\u003c$A0)",
"15401":"Else, Convert FAC to (4 Byte) Integer",
"15404":"Y=0: Clear FAC Extra Precision Byte",
"15406":"Get [into (A)] FAC Unpacked Sign (msb)",
"15408":"Y=0: Clear FAC Unpacked Sign (msb)",
"15410":"Invert [in (A)] Sign Bit (msb) ONLY!",
"15412":"Shift Sign Bit (msb) Left into Carry Flag",
"15413":"Get Initial 32 Bit Mantissa Exponent",
"15415":"Set FAC Exponent [for NO Fractional Bits]",
"15417":"Get FAC Mantissa [Integer Form], Low",
"15419":"Save for EXP \u0026 POWER (FPWRT) Functions",
"15421":"Go Normalize Value in FAC",
"15424":"Clear FAC Mantissa, Top",
"15426":"Clear FAC Mantissa, High",
"15428":"Clear FAC Mantissa, Middle",
"15430":"Clear FAC Mantissa, Low",
"15432":"Clear Y-Index Register",
"15433":"Return to Caller",
"15434":"Clear Y-Index Register",
"15436":"Get Range to Clear Working Area ($99..A3):",
"15438":"TMPEXP, EXPON, DPFLG, EXPSGN, FAC, SERLEN",
"15440":"Reduce Range (X-Index Register)",
"15441":"LOOP Until All Clear",
"15443":"Branch if Char is a Numeral (C=0)",
"15445":"Is First Char [in (A)] a Minus Sign?",
"15447":"NO (Leading Sign), Number is NOT Negative",
"15449":"X=$FF: SERLEN Holds Length of Series-1",
"15451":"Always Taken",
"15453":"Is First Char [in (A)] a Plus Sign?",
"15455":"NO (Leading Sign), but Number is Positive!",
"15457":"Get Next Char/Token of String",
"15460":"Branch if Char is a Numeral (C=0)",
"15462":"Is Char [in (A)] a Decimal Point?",
"15464":"YES (Leading DP), Number is a Fraction:",
"15466":"NO, Is Char [in (A)] an Exponent Token?",
"15468":"NO, So End of Number; EXIT",
"15470":"YES, Get Next Char/Token of String",
"15473":"Branch if Char is a Numeral (C=0)",
"15475":"Is Char [in (A)] a Minus Token?",
"15477":"YES (Minus Token), Exponent is Negative",
"15479":"NO, Is Char [in (A)] a Minus Sign?",
"15481":"YES (Minus Sign), Exponent is Negative",
"15483":"NO, Is Char [in (A)] a Plus Token?",
"15485":"YES (Plus Token), Exponent is Positive",
"15487":"NO, Is Char [in (A)] a Plus Sign?",
"15489":"YES (Plus Sign), Exponent is Positive",
"15491":"NO, So End of Exponent; EXIT; Always Taken",
"15493":"C=1: Flag Negative Exponent",
"15495":"Get Next Char/Token of Exponent",
"15498":"Branch if Char is a Numeral (C=0)",
"15500":"Else, End of Number, Test Sign of Exponent",
"15502":"Branch if Exponent is Positive",
"15504":"Clear Accumulator",
"15506":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"15507":"Subtract Saved Exponent",
"15509":"Go Complete Exponent Adjustment",
"15512":"C=1, Set Decimal Point Flag",
"15514":"Test Flag for prior Decimal Point",
"15516":"LOOP if NO prior Decimal Point",
"15518":"Get Saved Exponent",
"15520":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"15521":"Subtract Current Exponent Shift Count",
"15523":"Complete/Save Current Adjusted Exponent",
"15525":"Branch if Exponent=0: No Adjust Needed",
"15527":"Branch if Exponent\u003e0: Multiply by Ten",
"15529":"Else, Exponent\u003c0, Divide by Ten",
"15532":"Advance Exponent",
"15534":"Branch Until Exponent=0",
"15536":"Done; Always Taken",
"15538":"Exponent\u003e0: Multiply by Ten",
"15541":"Reduce Exponent",
"15543":"Branch Until Exponent=0",
"15545":"Is Whole Number Negative/Positive?",
"15547":"Negative Number: Negate FAC",
"15549":"Positive Number: All Done! Return to Caller",
"15550":"Negative Number: Go Negate FAC",
"15553":"Push Numeral",
"15554":"Was there a Decimal Point?",
"15556":"Branch if NOT",
"15558":"Else, Advance Exponent Shift Count",
"15560":"Multiply by Ten (FAC=10*FAC)",
"15563":"Pull Numeral; Compensate for ASCII:",
"15564":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"15565":"Subtract Low ASCII Zero; Mask ",
"15567":"Accumulate (Add) Numeral",
"15570":"LOOP: Evaluate Next Char/Token of String",
"15573":"Push Addend",
"15574":"Copy FAC to ARG (Rounded)",
"15577":"Pull Addend",
"15578":"Float Signed Integer in (A) into FAC",
"15581":"Get ARG Unpacked Sign (msb)",
"15583":"XOR FAC Unpacked Sign (msb)",
"15585":"Set Sign Flag for Comparing",
"15587":"Get Fax Exponent to Signal if FAC \u003c\u003e|= 0",
"15589":"Go Add FAC to ARG \u0026 Put back in FAC",
"15592":"Get Saved Exponent",
"15594":"Is its Current Value \u003e 2 Digits",
"15596":"NO, This is 1st or 2nd Digit",
"15598":"Exponent Too Big",
"15600":"Unless it is Negative",
"15602":"Large Negative Exponent makes FAC=0",
"15604":"Large Positive Exponent is Error",
"15607":"Exponent Times 2  . . . . . . . . .  [2X] ",
"15608":"Exponent Times 2  . . . . . . . . .  [4X] ",
"15609":"Prepare for Add with Carry",
"15610":"Add Exponent  . . . . . . . . . . .  [5X] ",
"15612":"Exponent Times 2  . . . . . . . . . [10X] ",
"15613":"Prepare for Add with Carry",
"15614":"Clear Indirect Addressing Index",
"15616":"Add the New Digit; Compensate for ASCII:",
"15618":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"15619":"Subtract Low ASCII Zero; Mask ",
"15621":"Set Saved Exponent",
"15623":"Go Get Next Char/Token of Exponent",
"15626":"[Normalized]; ((10^8)-.1)=(99,999,999.9)",
"15631":"[Normalized]; ((10^9)-1) = (999,999,999)",
"15636":"[Normalized];  (10^9)   =(1,000,000,000)",
"15641":"Get \" IN \" Zero-String Address, Low",
"15643":"Get \" IN \" Zero-String Address, High",
"15645":"Print String starting at [(A,Y)={Low,High}]",
"15648":"Get Current Applesoft Line Number, High",
"15650":"Get Current Applesoft Line Number, Low",
"15652":"Set FAC Mantissa, Top",
"15654":"Set FAC Mantissa, High",
"15656":"Set Exponent to 2^16 =65,536 =%0001,0000",
"15658":"Flag to Float (FAC+1,2) as Positive Number",
"15659":"Float Unsigned: [(X)-\u003e(FACX), (FAC+1,2)]",
"15662":"Convert Number in FAC to String \u0026 Print It",
"15665":"Print String starting at [(A,Y)={Low,High}]",
"15668":"Set Indirect Addressing Index, Advanced 1",
"15670":"Flag (Sign) in case FAC is Negative",
"15672":"Reduce Indirect Addressing Y-Index",
"15673":"Test FAC Unpacked Sign (msb)",
"15675":"Branch if FAC is Positive",
"15677":"Advance Indirect Addressing Y-Index",
"15678":"Make Minus Sign 1st Char of String",
"15681":"Set FAC Unpacked Sign (msb) [$2D=Positive]",
"15683":"Save Indirect Addressing Y-Index",
"15685":"Advance Indirect Addressing Y-Index",
"15686":"Get a Low ASCII Zero in case FAC=0",
"15688":"Get FAC Exponent [FAC\u003c\u003e|=0?]",
"15690":"Branch if FAC (Exponent) is NOT Zero",
"15692":"Else, FAC (Exponent) is Zero, So Finish Up",
"15695":"Clear (A) [Starting Value for TMPEXP]",
"15697":"   Is the FAC Exponent\u003e=128? [FAC\u003e=1?]",
"15699":"Branch if FAC Exponent =128. [FAC =1.]",
"15701":"Branch if FAC Exponent\u003e=128. [FAC\u003e=1.]",
"15703":"Get Address of Constant 1E9, Low",
"15705":"Get Address of Constant 1E9, High",
"15707":"Move Decimal Point: FAC=FAC*[(A,Y)={L,H}]",
"15710":"Fix Exponent for more speed: [(Exp)=(-9)]",
"15712":"Set Shift Counter: (TMPEXP)=[(0) or (-9)]",
"15714":"Get Address of Constant 1E9-1, Low",
"15716":"Get Address of Constant 1E9-1, High",
"15718":"Compare FAC with Packed Number at (A,Y) ^",
"15721":"Branch if FAC=1E9-1; In Range, EXIT LOOP",
"15723":"Branch if FAC\u003e1E9-1; Too Large, Do FAC/10",
"15725":"Get Address of Constant 1E8-.1, Low",
"15727":"Get Address of Constant 1E8-.1, High",
"15729":"Compare FAC with Packed Number at (A,Y) ^",
"15732":"Branch if FAC=1E8-.1; Too Small, Do FAC*10",
"15734":"Branch if FAC\u003e1E8-.1; In Range, EXIT LOOP",
"15736":"Too Small, Multiply FAC by Ten",
"15739":"Keep Track of Multiplies (Shift Count)",
"15741":"LOOP until 1E8 \u003c= FAC \u003c 1E9; Always Taken",
"15743":"Too Large, Divide FAC by Ten",
"15746":"Keep Track of Divisions (Shift Count)",
"15748":"LOOP until 1E8 \u003c= FAC \u003c 1E9; Always Taken",
"15750":"Round FAC",
"15753":"Convert FAC to (4 Byte) Integer",
"15756":"Preset Decimal Point Pointer",
"15758":"Get FAC Exponent Shift Count",
"15760":"Prepare for Add with Carry",
"15761":"Add Ten [(A)=(TMPEXP+10)]:[(0)\u003c(A)\u003c(11)]?",
"15763":"Branch if [(TMPEXP)\u003c=(-10)]:[(A)\u003c(0)]",
"15765":"Is [(-10)\u003c(TMPEXP)\u003c(1)]:[(0)\u003c(A)\u003c(11)]?",
"15767":"Branch if [(TMPEXP)\u003e=(1)]:[(A)\u003e=(11)]",
"15769":"Subtract 1 to Get Decimal Point Pointer",
"15771":"Set Decimal Point Pointer",
"15772":"Preset Remaining Exponent, Advanced",
"15774":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"15775":"Subtract Advanced Preset",
"15777":"Set Remaining Exponent = 0",
"15779":"Save Decimal Point Pointer",
"15781":"Get Decimal Point Pointer",
"15782":"Branch if Decimal Point is 1st (at Start)",
"15784":"Branch if NO Decimal Point at Start",
"15786":"Retrieve Saved Indirect Addressing Y-Index",
"15788":"Get a Decimal Point Character",
"15790":"Advance Indirect Addressing Y-Index",
"15791":"Place a Decimal Point Character in String",
"15794":"Get Decimal Point Pointer",
"15795":"Branch if Decimal Point is 1st (at Start)",
"15797":"Get a Zero Character",
"15799":"Advance Indirect Addressing Y-Index",
"15800":"Place a Zero Character in String",
"15803":"Save Indirect Addressing Y-Index",
"15805":"Clear Indirect Addressing Y-Index",
"15807":"Starting Value for Numeral [w/o (msb)]",
"15809":"Get FAC Mantissa, Low",
"15811":"Prepare for Add with Carry",
"15812":"Add Power Data, Low",
"15815":"Set FAC Mantissa, Low",
"15817":"Get FAC Mantissa, Middle",
"15819":"Add Power Data, Middle",
"15822":"Set FAC Mantissa, Middle",
"15824":"Get FAC Mantissa, High",
"15826":"Add Power Data, High",
"15829":"Set FAC Mantissa, High",
"15831":"Get FAC Mantissa, Top",
"15833":"Add Power Data, Top",
"15836":"Set FAC Mantissa, Top",
"15838":"Advance Counter: Numeral Value [w/o (msb)]",
"15839":"(C=1); Branch if FAC Mantissa Overflowed",
"15841":"(C=0); LOOP if [(X)\u003e=(0)]",
"15843":"(C=0); Branch if [(X)\u003c(0)]; Always Taken",
"15845":"(C=1); LOOP if [(X)\u003c(0)]",
"15847":"Get Count: Numeral Value [w/o (msb)]",
"15848":"Branch if Overshot Lower Limit",
"15850":"Invert Bits (Negate)",
"15852":"Numeral=10+C-X; (*) Remember X is One Up!",
"15854":"Convert Count to ASCII Numeral",
"15856":"Advance Indirect Addressing Y-Index (*4)",
"15857":"[4 times to get 4 Power Data Bytes/Cycle",
"15858":"Sequencially from the Powers of 10",
"15859":"(Decimal/Hexadecimal Constants) Table]",
"15860":"Save Y-Index: Pointer to Powers",
"15862":"Get Output String Character Pointer",
"15864":"Advance Output String Character Pointer",
"15865":"Save ASCII Numeral, (msb) is Direction",
"15866":"Assure it\u0027s Low ASCII, $30..39, for String",
"15868":"Place Low ASCII Numeral into Output String",
"15871":"Count Numeral; Adjust Decimal Point Pointer",
"15873":"Branch if Not yet Time for Decimal Point",
"15875":"Else, Time for Decimal Point, Get One",
"15877":"Advance Output String Character Pointer",
"15878":"Place Decimal Point into Output String",
"15881":"Save Output String Character Pointer",
"15883":"Retrieve Saved Pointer to Powers",
"15885":"Retrieve ASCII Numeral, (msb) is Direction",
"15886":"Invert Bits (Negate) [Toggle Sign]",
"15888":"Keep Negated Sign \u0026 Discard Negated Value",
"15890":"Save Direction: Adding=0, Subtracting=$80",
"15891":"[DECTBLEND-DECTBL]=[$EE8D-$EE69]=[$24]=[36]",
"15893":"LOOP Until Done Adding \u0026 Subtracting",
"15895":"Retrieve Output String Character Pointer",
"15897":"Get (Y) Character Placed in Output String",
"15900":"Reduce Output String Character Pointer",
"15901":"Was Last Character Got a Zero?",
"15903":"Branch to Suppress Trailing Zero",
"15905":"Was Last Character Got a Decimal Point?",
"15907":"Branch to Overwrite Trailing Decimal Point",
"15909":"Advance Output String Character Pointer",
"15910":"Prepare for Positive Exponent \"E+##\"",
"15912":"Get Exponent from Safe",
"15914":"Branch if NO Exponent (A=0)",
"15916":"Branch if Exponent is Positive (A\u003e0)",
"15918":"Prepare to Negate Exponent (0-EXPON)",
"15920":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"15921":"Subtract to Negate Exponent (0-EXPON)",
"15923":"Save Negated Exponent: (X)=(-EXPON)",
"15924":"Get a Minus Sign",
"15926":"Place Minus Sign into Output String [E-##]",
"15929":"Get an \"E\" (Exponent) Sign",
"15931":"Place \"E\" Sign into Output String [E-##]",
"15934":"Retrieve Negated Exponent: (A=X)=(-EXPON)",
"15935":"=(\"0\"-1); Convert to Decimal [Lower Limit]",
"15937":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"15938":"Count Subtraction (from Negated Exponent)",
"15939":"Subtract 10 (for Exponent Ten\u0027s Place)",
"15941":"BGT: Branch if More Tens to Subtract",
"15943":"=(\"9\"+1); Convert to Decimal [Upper Limit]",
"15945":"Place into String at Exponent One\u0027s Place",
"15948":"Get Exponent Ten\u0027s Place Subtraction Count",
"15949":"Place into String at Exponent Ten\u0027s Place",
"15952":"Get a Zero ($00) to Terminate Z-String",
"15954":"Place Zero at End of String",
"15957":"Always Taken",
"15959":"Place ASCII \"0\" into String at (Y) Position",
"15962":"Get a Zero ($00) to Terminate Z-String",
"15964":"Place Zero at End of String",
"15967":"Apple-II 6502 Microprocessor Stack, Low",
"15969":"Apple-II 6502 Microprocessor Stack, High",
"15971":"Return to Caller",
"15972":"\u003c-[Normalized]; (1/2)=(0.500)",
"15977":"-100,000,000= -1E+8 =$FFFF,FFFF,FA0A,1F00",
"15981":" +10,000,000= +1E+7 =$0000,0000,0098,9680",
"15985":". -1,000,000= -1E+6 =$FFFF,FFFF,FFF0,BDC0",
"15989":"... +100,000= +1E+5 =$0000,0000,0001,86A0",
"15993":".... -10,000= -1E+4 =$FFFF,FFFF,FFFF,D8F0",
"15997":"..... +1,000= +1E+3 =$0000,0000,0000,03E8",
"16001":"....... -100= -1E+2 =$FFFF,FFFF,FFFF,FF9C",
"16005":"........ +10= +1E+1 =$0000,0000,0000,000A",
"16009":"......... -1= -1E+0 =$FFFF,FFFF,FFFF,FFFF",
"16013":"Copy FAC to ARG (Rounded)",
"16016":"Get Address for Constant, Low",
"16018":"Get Address for Constant, High",
"16020":"Unpack FP# at [(A,Y)={Low,High}] into FAC",
"16023":"Branch to \"EXP\" Function if (A=0)",
"16025":"Get ARG Exponent ",
"16027":"Branch if ARG (Exponent) is Not Zero",
"16029":"Go Set FAC Signed Exponent \u0026 Sign",
"16032":"Get Destination Address, Low",
"16034":"Get Destination Address, High",
"16036":"Pack FAC (Rounded) into [(X,Y)={Low,High}]",
"16039":"Get ARG Unpacked Sign (msb)",
"16041":"Branch if ARG is Positive (OK)",
"16043":"Get Integer Part in FAC = Float[INT(FAC)]",
"16046":"Get Comparand Address, Low",
"16048":"Get Comparand Address, High",
"16050":"Compare FAC with Packed Number at (A,Y) ^",
"16053":"Branch if Not Integer Power (FAC)\u003c\u003e(TEMP3)",
"16055":"Clear Accumulator (A=Y=0)",
"16056":"Get Parity [(lsb) of (CHARAC)] (from INT)",
"16058":"Copy ARG into FAC [FAC=ABS(ARG)]",
"16061":"Get to Save [Y=0 or Y=(CHARAC)] on STACK:",
"16062":"Push (Y) as Flag for Negative ARG [0=(+)]",
"16063":"Do LOG(FAC) [ABS(ARG) was copied into FAC]",
"16066":"Get TEMP3 (Safe FAC [POWER]) Address, Low",
"16068":"Get TEMP3 (Safe FAC [POWER]) Address, High",
"16070":"Multiply FAC by POWER [FAC=FAC*(A,Y)]",
"16073":"Raise to Power of Natural Base (e=2.718282)",
"16076":"Pull Flag for Negative ARG [0=(+)]",
"16077":"Put Negative ARG Flag (lsb) into Carry",
"16078":"Return to Caller if NOT; Else, Do NEGOP",
"16080":"Get FAC Exponent",
"16082":"Branch if FAC=0; No need to Complement",
"16084":"Get FAC Unpacked Sign (msb)",
"16086":"Invert Bits (Negate)",
"16088":"Set FAC Unpacked Sign (msb)",
"16090":"Return to Caller",
"16091":"[Normalized]; LOG(base2)(e) = 1.442695042",
"16096":"Index: (Polynomial Coeficients)-1",
"16097":"\u003c-[Normalized]; (LOG(2)^7)/7!",
"16102":"\u003c-[Normalized]; (LOG(2)^6)/6!",
"16107":"\u003c-[Normalized]; (LOG(2)^5)/5!",
"16112":"\u003c-[Normalized]; (LOG(2)^4)/4!",
"16117":"\u003c-[Normalized]; (LOG(2)^3)/3!",
"16122":"\u003c-[Normalized]; (LOG(2)^2)/2!",
"16127":"\u003c-[Normalized]; (LOG(2)^1)/1! {\u003c\u003e ln(2)}",
"16132":"\u003c-[Normalized]; The Number One (1), again",
"16137":"Get Constant [Log2(e)] Address, Low",
"16139":"Get Constant [Log2(e)] Address, High",
"16141":"Multiply: FAC = FAC * [(A,Y)={Low,High}]",
"16144":"Get FAC Extra Precision Byte",
"16146":"1st Range Test; Add to Round Up",
"16148":"Branch if No Carryover",
"16150":"Advance FAC (Add Carryover)",
"16153":"Set ARG Extra Precision Byte",
"16155":"Copy FAC to ARG",
"16158":"Get FAC Exponent",
"16160":"Within Range? [Maximum Exponent \u003c 128]",
"16162":"BLT: Branch if within Range    [\u003c 136]",
"16164":"Else, Out of Range, Make Zero or Overflow",
"16167":"Get Integer Part in FAC = Float[INT(FAC)]",
"16170":"Get Integer Part of POWER",
"16172":"Prepare for Add with Carry",
"16173":"2nd Range Test; Add to Exponent Bias + 1",
"16175":"[0-$81=$7F] Branch if Overflow",
"16177":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"16178":"Subtract 1 from Exponent Bias + 1",
"16180":"Save Exponent",
"16181":"Get Count: Number of Bytes to Swap",
"16183":"Get ARG Byte to Swap",
"16185":"Get FAC Byte to Swap",
"16187":"Set FAC Byte being Swapped",
"16189":"Set ARG Byte being Swapped",
"16191":"Reduce Byte Counter",
"16192":"LOOP Until Done",
"16194":"Get ARG Extra Precision Byte",
"16196":"Set FAC Extra Precision Byte",
"16198":"Subtract Integer Part [POWER-INT(POWER)]",
"16201":"Negate Value in FAC (Invert FACSIGN Bits)",
"16204":"Get Polynomial Coeficients Address, Low",
"16206":"Get Polynomial Coeficients Address, High",
"16208":"Compute Series F(x) on Fractional Part",
"16211":"Clear Accumulator",
"16213":"Clear Sign Flag for Comparing",
"16215":"Retrieve Exponent",
"16216":"Add Exponent of Integer Part",
"16219":"Return to Caller",
"16220":"Save Series Pointer, Low",
"16222":"Save Series Pointer, High",
"16224":"Store FAC Rounded in TEMP1",
"16227":"Get TEMP1 ZP Address, Low",
"16229":"Square x; Then Do Series in (x^2):",
"16232":"Calc: a+bx+cx^2+...; Coef\u0027s: ...c,b,a.",
"16235":"Get TEMP1 ZP Address, Low",
"16237":"Get TEMP1 ZP Address, High",
"16239":"Multiply by P(x^2) Series (\u0026 Exit)",
"16242":"Save Series Pointer, Low",
"16244":"Save Series Pointer, High",
"16246":"Store FAC Rounded (x) in TEMP2",
"16249":"Get PC Index: (Polynomial Coeficients)-1",
"16251":"Save PC Index as Series Length",
"16253":"Get Pointer to Series Data, Low",
"16255":"Advance Y-Index: Series Data Pointer, Low",
"16256":"Get Series Data Pointer, Low",
"16257":"Branch if Not Crossing Page Boundary",
"16259":"Advance Pointer to Series Data, High",
"16261":"Set Pointer to Series Data, Low",
"16263":"Get Pointer to Series Data, High",
"16265":"Multiply: FAC = FAC * [(A,Y)={Low,High}]",
"16268":"Get Pointer to Series Data, Low",
"16270":"Get Pointer to Series Data, High",
"16272":"Prepare for Add with Carry",
"16273":"Add 5 Bytes/Coefficient",
"16275":"Branch if No Carryover",
"16277":"Advance Y-Index: Series Data Pointer, High",
"16278":"Set Pointer to Series Data, Low",
"16280":"Set Pointer to Series Data, High",
"16282":"Add: FAC = FAC + [(A,Y)={Low,High}]",
"16285":"Get Address of TEMP2 FAC Safe, Low",
"16287":"Get Address of TEMP2 FAC Safe, High",
"16289":"Reduce Series Length",
"16291":"LOOP Until Done",
"16293":"Return to Caller",
"16294":"\u003c\u003c\u003c Missing one byte for a FP value! \u003e\u003e\u003e",
"16298":"\u003c\u003c\u003c Missing one byte for a FP value! \u003e\u003e\u003e",
"16302":"FAC Sign (Neg|0|Pos) Returns (A)=(-1|0|1)",
"16305":"Save Sign of FAC (as Potential RND Seed)",
"16306":"Branch if Sign of FAC (Seed) is Negative",
"16308":"Get Pointer to FP Random Number Seed, Low",
"16310":"Get Pointer to FP Random Number Seed, High",
"16312":"Unpack FP# at [(A,Y)={Low,High}] into FAC",
"16315":"Retrieve Sign of FAC (Potential RND Seed)",
"16316":"Branch if FAC=0, Return Seed=0 Unchanged",
"16318":"Get RND FP Number Constant #1, Low",
"16320":"Get RND FP Number Constant #1, High",
"16322":"Multiply: FAC = FAC * [(A,Y)={Low,High}]",
"16325":"Get RND FP Number Constant #2, Low",
"16327":"Get RND FP Number Constant #2, High",
"16329":"Add: FAC = FAC + [(A,Y)={Low,High}]",
"16332":"Get FAC Mantissa, Low",
"16334":"Get FAC Mantissa, Top",
"16336":"Set FAC Mantissa, Low",
"16338":"Set FAC Mantissa, Top",
"16340":"Clear Accumulator",
"16342":"Clear FAC Unpacked Sign (msb)",
"16344":"Get FAC Exponent",
"16346":"Set FAC Extra Precision Byte",
"16348":"Adjust Range: Set FACX to be between 0 \u0026 1",
"16350":"Set FAC Exponent",
"16352":"Normalize Value in FAC",
"16355":"Get Pointer to FP Random Number Seed, Low",
"16357":"Get Pointer to FP Random Number Seed, High",
"16359":"Pack FAC (Rounded) into [(X,Y)={Low,High}]",
"16362":"Get Pi Halved (pi/2) Coefficient, Low",
"16364":"Get Pi Halved (pi/2) Coefficient, High",
"16366":"Add: FAC = FAC + [(A,Y)={Low,High}]",
"16369":"Copy FAC to ARG (Rounded)",
"16372":"Get Pi Doubled (2*pi) Coefficient, Low",
"16374":"Get Pi Doubled (2*pi) Coefficient, High",
"16376":"Get ARG Unpacked Sign (msb) to use in DIV",
"16378":"Divide by 2*pi: FAC=ARG/[(A,Y)={Low,High}]",
"16381":"Copy FAC to ARG (Rounded)",
"16384":"Get Integer Part in FAC = Float[INT(FAC)]",
"16387":"Clear Accumulator",
"16389":"Clear Sign Flag for Comparing",
"16391":"Subtract Integer Part [FAC-INT(FAC)] to",
"16394":"Get Address of Constant (1/4)=(0.25), Low",
"16396":"Get Address of Constant (1/4)=(0.25), High",
"16398":"Subtract: FAC=[(A,Y)={Low,High}]-FAC",
"16401":"Get FAC Unpacked Sign (msb)",
"16403":"Push FAC Unpacked Sign (msb)",
"16404":"Branch if FACSIGN is Positive, which means",
"16406":"Round Up to Add 1/2: FAC = FAC + 1/2",
"16409":"Get FAC Unpacked Sign (msb)",
"16411":"Branch if FACSIGN is Negative [Angle\u0027s OK]",
"16413":"Get Trig Functions Sign Flag",
"16415":"Invert Bits (Negate)",
"16417":"Set Trig Functions Sign Flag",
"16419":"Negate Value in FAC (Invert FACSIGN Bits)",
"16422":"Get Address of Constant (1/4)=(0.25), Low",
"16424":"Get Address of Constant (1/4)=(0.25), High",
"16426":"Add: FAC = FAC + [(A,Y)={Low,High}]",
"16429":"Pull (A): FAC Unpacked Sign (msb)",
"16430":"Branch if (A) is Positive ",
"16432":"Negate Value in FAC (Invert FACSIGN Bits)",
"16435":"Get Address of Sin Coefficients, Low",
"16437":"Get Address of Sin Coefficients, High",
"16439":"Go do Standard Sin Series: Compute SIN",
"16442":"Save FAC Rounded in TEMP1",
"16445":"Clear Accumulator",
"16447":"Clear Trig Functions Sign Flag [will be ",
"16449":"Get SIN(FAC)",
"16452":"Get Address of Temp FAC #3, Low",
"16454":"Get Address of Temp FAC #3, High",
"16456":"Pack FAC (Rounded) into [(X,Y)={Low,High}]",
"16459":"Get Address of Temp FAC #1, Low",
"16461":"Get Address of Temp FAC #1, High",
"16463":"Unpack FP# at [(A,Y)={Low,High}] into FAC",
"16466":"Clear Accumulator",
"16468":"Clear FAC Unpacked Sign (msb)",
"16470":"Get Trig Functions Sign Flag",
"16472":"Get COS",
"16475":"Get Address of Temp FAC #3, Low",
"16477":"Get Address of Temp FAC #3, High",
"16479":"Divide: (A,Y)--\u003e(ARG)/(FAC)--\u003e(FAC)",
"16482":"Push Trig Functions Sign Flag",
"16483":"Go Get COS",
"16486":"\u003c-[Normalized]; (pi/2)",
"16491":"\u003c-[Normalized]; (2*pi); = PI2_1 (below)",
"16496":"\u003c-[Normalized]; (1/4)=(0.250000000)",
"16501":"Index: (Pi Coefficients)-1",
"16502":"(2*pi)^11/11!",
"16507":"(2*pi)^9/9!",
"16512":"(2*pi)^7/7!",
"16517":"(2*pi)^5/5!",
"16522":"(2*pi)^3/3!",
"16527":"\u003c-[Normalized]; (2*pi); = PI_DOUBLED (^)",
"16532":"XOR $87 = ASCII: \"!TFOS\"",
"16537":"XOR $87 = ASCII: \"ORCIM\"",
"16542":"Fold the Argument Range first:",
"16544":"Save FAC Sign for later unfolding",
"16545":"BGE: If Not Negative; Else, Complement:",
"16547":"Negate Value in FAC (Invert FACSIGN Bits)",
"16550":"If x \u003e= 1, Form Reciprocal; (x = FACEXP)",
"16552":"Save for later unfolding",
"16553":"(Exp for FAC \u003e= 1) Normalize between 0 \u0026 1",
"16555":"BLT: If x \u003c 1, Skip:",
"16557":"Form Reciprocal (1/x)",
"16559":"The Number One (1), Normalized",
"16561":"Divide: (A,Y)--\u003e(ARG)/(FAC)--\u003e(FAC)",
"16564":"Compute Polynomial Approximation",
"16566":"using Polynomial ATN Coeficients:",
"16568":"Calc: ax+bx^3+cx^5+...; Coef\u0027s: ...c,b,a.",
"16571":"Start to unfold:",
"16572":"(Exp for FAC \u003e= 1) Was x \u003e= 1?",
"16574":"BLT: NO, x \u003c 1, Skip:",
"16576":"YES, Compensate for Normalization,",
"16578":"Subtract from pi/2:",
"16580":"Subtract: (A,Y)--\u003e(ARG)-(FAC)--\u003e(FAC)",
"16583":"Was FACSIGN Negative?",
"16584":"BGE: NO, FACSIGN is Positive; Skip next:",
"16586":"Negate Value in FAC (Invert FACSIGN Bits)",
"16589":"Return to Caller",
"16590":"Index: (Polynomial ATN Coeficients)-1",
"16591":"-1.96512662E-4 =~ -(1/5089)",
"16596":"+4.85094216E-3 =~ +(1/206)",
"16601":"-4.86701843E-4 =~ -(1/2055)",
"16606":"+3.42096380E-2 =~ +(1/29)",
"16611":"-2.30291328E-2 =~ -(1/43)",
"16616":"+7.24571965E-2 =~ +(1/14)",
"16621":"-2.73023954E-2 =~ -(1/37)",
"16626":"+1.10932413E-1 =~ +(1/9)",
"16631":"-1.78398077E-2 =~ -(1/56)  = -1/(7*8)",
"16636":"+1.99999120E-1 =~ +(1/5)",
"16641":"-8.33333157E-2 =~ -(1/12) = -1/(3*4)",
"16646":"The Number One (1), again!",
"16651":"Advance Next Char/Token Pointer, Low",
"16653":"Skip Advancing Pointer, High",
"16655":"Advance Next Char/Token Pointer, High",
"16657":"NON_SEQUITUR is TXTPTR in Zero-Page",
"16660":"Is A-Reg a Number, a Colon/EOS, EOL/EOP?",
"16662":"BGE: Return Carry Set if Not a Number \u0026",
"16664":"Is A-Reg a Space Character?",
"16666":"YES, Ignore it; Get Next Character/Token",
"16668":"Prep to Subtract w/o Borrow [A-Data-!C]",
"16669":"Subtract Low ASCII Zero (\u00270\u0027) Character",
"16671":"Prep to Subtract w/o Borrow [A-Data-!C]",
"16672":"Subtract $100-\u00270\u0027 Lo-ASCII Zero Character",
"16674":"Return to Caller",
"16675":"Approximately = .811635157",
"16680":"Initialize Direct Mode:",
"16682":"Set Direct Mode Flag",
"16684":"Initialize Stack Pointer:",
"16686":"Set Stack Pointer Register [S-Reg)=(-5)]",
"16687":"Get Cold Start Address, Low            [*]",
"16689":"Get Cold Start Address, High",
"16691":"Set GOWARM+1; =LOC0+1                  [*]",
"16693":"Set GOWARM+2; =LOC0+2; =LOC1+1; =LOC2",
"16695":"Set GOSTROUT+1; =LOC3+1                [*]",
"16697":"Set GOSTROUT+2; =LOC3+2; =LOC4+1; =LOC5",
"16699":"Set Normal Display Mode",
"16702":"Set JMP OpCode for 4 Vectors:",
"16704":"Set GOWARM   : (LOC0, LOC1 \u0026 LOC2)",
"16706":"Set GOSTROUT : (LOC3, LOC4 \u0026 LOC5)",
"16708":"Set Applesoft Jump from ZP to \u003cAddress\u003e",
"16710":"Set Applesoft USR() Command Vector (JMP)",
"16712":"Get Print IQ-Error, Low                [*]",
"16714":"Get Print IQ-Error, High",
"16716":"Set USR() Command Ptr, Low             [*]",
"16718":"Set USR() Command Ptr, High",
"16720":"COLD_START-GENCHRGET-1=$1C=28 [is WRONG!] ",
"16722":"Get a Byte; \u003c\u003c\u003c No -1 would fix BUG \u0026 \u003e\u003e\u003e",
"16725":"Set a Byte; \u003c\u003c\u003c No -1 would fix BUG ! \u003e\u003e\u003e",
"16727":"Initialize Speed (on last pass SPDBYT = 1)",
"16729":"Count Down",
"16730":"Loop Until Done; \u003c\u003c\u003c BPL would fix BUG \u003e\u003e\u003e",
"16732":"Set NOTRACE (X-Reg=0)",
"16734":"Reset A-Reg to Zero, too (from X-Reg)",
"16735":"Clear Sign Extension Right Shifter",
"16737":"Clear Last Used Temp String Pointer, High",
"16739":"Push a Zero onto STACK at $1FB; The Zero",
"16740":"Get 3 to set TSD Length:",
"16742":"Set Temporary String Descriptor Length",
"16744":"Print a Carriage \u003cReturn\u003e Character",
"16747":"Initialize Input Line\u0027s Next Line Pointer",
"16749":"Set Input Line\u0027s Next Line Pointer, High",
"16752":"Set Input Line\u0027s Next Line Pointer, Low",
"16755":"Holds up to 3 Descriptors [($55~$5D)=(9B)]",
"16757":"Set SD Stack: Next Temp Descriptor Pointer",
"16759":"Get Start of Program Memory, Low (=0)  [*]",
"16761":"Get Start of Program Memory, High",
"16763":"Set Memory Scan Pointer, Low, for Zip! [*]",
"16765":"Set Memory Scan Pointer, High, for Paging",
"16767":"Set for Indirect Addressing of Mem Pages",
"16769":"Incement Memory Scan Paging Pointer",
"16771":"Test 1st.Byte on Page",
"16773":"Invert Bits: Test if RAM|ROM|MT-RAM-SKT",
"16775":"Can change RAM",
"16777":"Cannot change ROM/MT-RAM-SKT",
"16779":"ROM/MT-RAM-SKT found!",
"16781":"Invert Bits: Put back in RAM as found",
"16783":"Can change/fix RAM",
"16785":"Cannot change/fix ROM/MT-RAM-SKT",
"16787":"Test \u0026 Fix RAM until ROM/MT-RAM-SKT found",
"16789":"Get Memory Scan Pointer, Low (=0)     [*]",
"16791":"Get Memory Scan Pointer, High",
"16793":"Keep High Nibble and Zero Low Nibble",
"16795":"Set End of String Space (HIMEM), Low  [*]",
"16797":"Set End of String Space (HIMEM), High",
"16799":"Set Top of Free Space, Low            [*]",
"16801":"Set Top of Free Space, High",
"16803":"Get Start of Program Memory, Low (=0) [*]",
"16805":"Get Start of Program Memory, High (=8)",
"16807":"Set Start of Program Pointer, Low     [*]",
"16809":"Set Start of Program Pointer, High",
"16811":"Both Index Registers (X \u0026 Y) are now Zero",
"16813":"Initialize Lock Byte; Turn Off Auto-Run",
"16815":"The Accumulator Register is now Zero",
"16816":"Start of Program ($800) is now Zero",
"16818":"Point at $801 as Start of Program",
"16820":"Skip High Byte; Always Happens",
"16822":"Never Happens \u003c-\\-\u003c [Wasted 4 Bytes Here!]",
"16824":"Get Start of Program Pointer, Low (=1) [*]",
"16826":"Get Start of Program Pointer, High (=8)",
"16828":"Assure enough Arrays-to-Strings Free-Space",
"16831":"Initialize NEW Program",
"16834":"Get String Out Routine Address, Low",
"16836":"Get String Out Routine Address, High",
"16838":"Set GOSTROUT+1; =LOC3+1",
"16840":"Set GOSTROUT+2; =LOC3+2; =LOC4+1; =LOC5",
"16842":"Get BASIC Warm Start Address, Low",
"16844":"Get BASIC Warm Start Address, High",
"16846":"Set GOWARM+1; =LOC0+1",
"16848":"Set GOWARM+2; =LOC0+2; =LOC1+1; =LOC2",
"16850":"DO WARM START",
"16853":"Evaluate \u0026 Assure Expression is Numeric",
"16856":"Convert FAC to a 16-bit Value in LINNUM",
"16859":"Jump to 6502 Memory Address in Line Number",
"16862":"Convert Expression to a Byte in X-Reg",
"16865":"Get Value of Expression (0~255)",
"16866":"Go Set Slot for Input (Monitor S/R)",
"16869":"Convert Expression to a Byte in X-Reg",
"16872":"Get Value of Expression (0~255)",
"16873":"Go Set Slot for Output (Monitor S/R)",
"16876":"Convert Expression to a Byte in X-Reg",
"16879":"Assure (X)\u003c(Max Size of Lo-Res Screen)",
"16881":"BGE: IQ ERROR if it is Not \u003c SIZE",
"16883":"Save 1st Lo-Res Plot Coordinate",
"16885":"Must have a Comma next",
"16887":"If = Chr Got, Get Next; Else, Syntax Error",
"16890":"Convert Expression to a Byte in X-Reg",
"16893":"Assure (X)\u003c(Max Size of Lo-Res Screen)",
"16895":"BGE: IQ ERROR if it is Not \u003c SIZE",
"16897":"Set Right End of Horizontal Line (HLINE)",
"16899":"Set Bottom End of Vertical Line (VLINE)",
"16901":"Return [(FIRST),(X=H2=V2)] to Caller",
"16902":"Go Print \"?Illegal Quantity\" Error Message",
"16905":"Get Cartesian (\"A,B\") Coordinates",
"16908":"Is B \u003c A?  [Plot Coordinates (PC)]",
"16910":"BGE: Branch if B \u003e= A",
"16912":"Get B, 2nd Lo-Res PC, \u0026 Smaller of (A,B)",
"16914":"Set Right End of Horizontal Line (HLINE)",
"16916":"Set Bottom End of Vertical Line (VLINE)",
"16918":"Save X as 1st Lo-Res Plot Coordinate",
"16920":"Get \"AT\" Token",
"16922":"If = Chr Got, Get Next; Else, Syntax Error",
"16925":"Convert Next Expression to a Byte in X-Reg",
"16928":"Assure (X)\u003c(Max Size of Lo-Res Screen)",
"16930":"BGE: IQ ERROR if it is Not \u003c SIZE",
"16932":"Return to Caller",
"16933":"Get Cartesian (\"X,Y\") Coordinates",
"16936":"Get 2nd (Y) Coordinate",
"16937":"Get 1st (X) Coordinate",
"16939":"Is  1st (X) Coordinate \u003c 40?",
"16941":"BGE: IQ ERROR if 1st (X) Coordinate \u003e= 40",
"16943":"Go Let Monitor Plot Point on Lo-Res Screen",
"16946":"Get Lo-Res Line (\"A,B at Y\") Coordinates",
"16949":"Get 3rd (Y) Horizontal Line Coordinate",
"16950":"Get Right End (B) of Horizontal Line",
"16952":"Is  Right End (B) of Horizontal Line \u003c 40?",
"16954":"BGE: IQ ERROR if Right End of Line \u003e= 40",
"16956":"Get Left End (A) of Horizontal Line",
"16958":"Go Let Monitor Draw Line on Lo-Res Screen",
"16961":"Get Lo-Res Line (\"A,B at X\") Coordinates",
"16964":"Get 3rd (X) Vertical Column Coordinate",
"16965":"Get Bottom End (B) of Vertical Line",
"16966":"Is  Bottom End (B) of Vertical Line \u003c 40?",
"16968":"BGE: IQ ERROR if Bottom End of Line \u003e= 40",
"16970":"Get Top End (A) of Vertical Line",
"16972":"Go Let Monitor Draw Line on Lo-Res Screen",
"16975":"Convert Expression to a Byte in X-Reg",
"16978":"Get Color for Lo-Res (Dot/Line) Plotting",
"16979":"Go Let Monitor Set Color for Lo-Res Plots",
"16982":"Convert Expression to a Byte in X-Reg",
"16985":"Reduce Line Number [from (1~24) to (0~23)]",
"16986":"Get Line Number to Check Range",
"16987":"Is Line Number \u003c 24?",
"16989":"BGE: IQ ERROR if Line Number \u003e= 24",
"16991":"Go Let Monitor Set Vertical Cursor Position",
"16994":"Convert Expression to a Byte in X-Reg",
"16997":"Get Input/Output Speed Specified (0~255)",
"16998":"Invert Bits (Negate)            -(0~255)",
"17000":"Get Negated I/O Speed           (-255~0)",
"17001":"Advance I/O Speed   [1+(-255~0)=(-254~1)]",
"17002":"=$100-Speed+1, So SPEED=255 is Fastest[?]",
"17004":"Return to Caller",
"17005":"To Set Sign Bit in TRCFLG",
"17006":"Never Taken; Fake BCC to skip next OpCode",
"17007":"To Clear Sign Bit in TRCFLG",
"17008":"Shift CARRY into TRCFLG",
"17010":"Return to Caller",
"17011":"For INVFLG Text Mask",
"17013":"Always Taken",
"17015":"For INVFLG Text Mask",
"17017":"For FLASHBIT Text Mask",
"17019":"Text Mask (Normal=$FF, Flash=$7F, Inverse=$3F)",
"17021":"Text Mask (Flash=$40, Lowercase=$20, Else=$00)",
"17023":"Return to Caller",
"17024":"For INVFLG Text Mask",
"17026":"For FLASHBIT Text Mask",
"17028":"Always Taken",
"17030":"Get Value Specified as 16-Bit Integer",
"17033":"Convert FAC to a 16-bit Value in LINNUM",
"17036":"Get HIMEM Value Specified, Low",
"17038":"Subtract Start of Free Space, Low",
"17040":"Get HIMEM Value Specified, High",
"17042":"Subtract Start of Free Space, High",
"17044":"BGE: Branch if HIMEM is above them",
"17046":"ERROR if NOT, Do \"?Out Of Memory\" Error",
"17049":"Get HIMEM Value Specified, Low",
"17051":"Set Top End of String Space (HIMEM), Low",
"17053":"Set Bottom End of String Space, Low",
"17055":"Get HIMEM Value Specified, High",
"17057":"Set Top End of String Space (HIMEM), High",
"17059":"Set Bottom End of String Space, High",
"17061":"Return to Caller",
"17062":"Get Value Specified as 16-Bit Integer",
"17065":"Convert FAC to a 16-bit Value in LINNUM",
"17068":"Get LOMEM Value Specified, Low",
"17070":"Subtract Top of String Space (HIMEM), Low",
"17072":"Get LOMEM Value Specified, High",
"17074":"Subtract Top of String Space (HIMEM), High",
"17076":"BGE: Do \"?Out Of Memory\" ERROR if NOT",
"17078":"Get LOMEM Value Specified, Low",
"17080":"Subtract Start of Variables (EOP+1), Low",
"17082":"Get LOMEM Value Specified, High",
"17084":"Subtract Start of Variables (EOP+1), High",
"17086":"BLT: Do \"?Out Of Memory\" ERROR if NOT",
"17088":"Get LOMEM Value Specified, Low",
"17090":"Set Start of Variables (EOP+1), Low",
"17092":"Get LOMEM Value Specified, High",
"17094":"Set Start of Variables (EOP+1), High",
"17096":"Go Clear Variables \u0026 Arrays",
"17099":"Get GOTO Token",
"17101":"If = Chr Got, Get Next; Else, Syntax Error",
"17104":"Get Next Char/Token Pointer, Low",
"17106":"Set Char/Token Pointer Safe, Low",
"17108":"Get Next Char/Token Pointer, High",
"17110":"Set Char/Token Pointer Safe, High",
"17112":"Set Sign Bit of ERRFLG",
"17113":"Activate ONERR GOTO (ERRFLG=#$80)",
"17115":"Get Current Line Number, Low",
"17117":"Set Current Line Safe, Low",
"17119":"Get Current Line Number, High",
"17121":"Set Current Line Safe, High",
"17123":"Set (Y)=(Offset to Next \":\" or EOL)",
"17126":"Continue Program at Next Line",
"17129":"Set Current Error Number Safe",
"17131":"Get Stack Ptr Saved Before Each Statement",
"17133":"Set Stack Pointer Before Error Safe",
"17135":"Get Current Line Number, Low",
"17137":"Set Line Number Where ERROR Occurred, Low",
"17139":"Get Current Line Number, High",
"17141":"Set Line Number Where ERROR Occurred, High",
"17143":"Get Old Text Pointer, Low",
"17145":"Set Error Handler TXTPTR Safe, Low",
"17147":"Get Old Text Pointer, High",
"17149":"Set Error Handler TXTPTR Safe, High",
"17151":"Get Char/Token Pointer Safe, Low",
"17153":"Set Next Char/Token Pointer, Low",
"17155":"Get Char/Token Pointer Safe, High",
"17157":"Set Next Char/Token Pointer, High",
"17159":"Get Current Line Safe, Low",
"17161":"Set Current Line Number, Low",
"17163":"Get Current Line Safe, High",
"17165":"Set Current Line Number, High",
"17167":"Get Char/Token Got w/o advancing TXTPTR",
"17170":"Goto Specified ONERR GOTO Line Number",
"17173":"Execute a New Statement",
"17176":"Get Line Number Where ERROR Occurred, Low",
"17178":"Set Current Line Number, Low",
"17180":"Get Line Number Where ERROR Occurred, High",
"17182":"Set Current Line Number, High",
"17184":"Get Error Handler TXTPTR Safe, Low",
"17186":"Set Next Char/Token Pointer, Low",
"17188":"Get Error Handler TXTPTR Safe, High",
"17190":"Set Next Char/Token Pointer, High",
"17192":"Get Stack Pointer Before Error Safe",
"17194":"Set Stack Pointer",
"17195":"Execute Offending Statement, Again",
"17198":"Relay Point to Throw a \"?Syntax\" Error",
"17201":"BGE: ERROR If Line Number NOT Specified",
"17203":"Get End of Program Pointer, Low",
"17205":"Set Start of Variables Pointer, Low",
"17207":"Get End of Program Pointer, High",
"17209":"Set Start of Variables Pointer, High",
"17211":"Get Range START Line Number (LINNUM)",
"17214":"Find, Convert, \u0026 Point LOWTR at Line/Next",
"17217":"Get Address of Line or Next Line, Low",
"17219":"Set Move Destination Pointer, Low",
"17221":"Get Address of Line or Next Line, High",
"17223":"Set Move Destination Pointer, High",
"17225":"Require a Comma Separator Character next: ",
"17227":"If = Chr Got, Get Next; Else, Syntax Error",
"17230":"Get Range END Line Number (LINNUM)",
"17233":"Advance Range END Line Number, Low",
"17235":"Branch if No Page Carryover",
"17237":"Advance Range END Line Number, High",
"17239":"Find, Convert, \u0026 Point LOWTR at Line/Next",
"17242":"Get Address of Line or Next Line, Low",
"17244":"Subtract Move Destination Pointer, Low",
"17246":"Get Address of Line or Next Line, High",
"17248":"Subtract Move Destination Pointer, High",
"17250":"BGE: Branch if Range Valid (START \u003c END)",
"17252":"Else, Nothing to Delete; Return to Caller",
"17253":"Clear Indirect Addressing Index",
"17255":"Get a Byte from (Source Address),Y",
"17257":"Copy Byte to (Destination Address),Y",
"17259":"Advance Source Address, Low",
"17261":"Branch if No Page Boundary Reached",
"17263":"Advance Source Address, High",
"17265":"Advance Destination Address, Low",
"17267":"Branch if No Page Boundary Reached",
"17269":"Advance Destination Address, High",
"17271":"Get Start of Variables Ptr (EOP+1), Low",
"17273":"Subtract Source Address, Low",
"17275":"Get Start of Variables Ptr (EOP+1), High",
"17277":"Subtract Source Address, High",
"17279":"BGE: LOOP if Not Done Moving Bytes",
"17281":"Get Destination Address, High",
"17283":"Get Destination Address, Low",
"17285":"Branch if No Page Boundary Reached",
"17287":"Reduce Destination Address, High",
"17288":"Reduce Destination Address, Low",
"17289":"Set Start of Variables Ptr (EOP+1), High",
"17291":"Set Start of Variables Ptr (EOP+1), Low",
"17293":"Go Clear Vars, Fix Fwd Links, Restart Warm",
"17296":"Reset HiRes Mode to LoRes/Text Mode",
"17299":"Set Mixed Graphics \u0026 Text Mode",
"17302":"Go Set Screen to Graphics Mode",
"17305":"Display Text Page1; R/W Main V-RAM",
"17308":"Go Set Screen to Text Mode",
"17311":"If Found, Point LOWTR at Array Specified",
"17314":"Point to Forward Offset Pointer, High",
"17316":"Get Forward Offset, High",
"17318":"Save Forward Offset, High",
"17319":"Point to Forward Offset Pointer, Low",
"17320":"Get Forward Offset, Low",
"17322":"Reduce Forward Offset, Low",
"17324":"BGE: Branch if Borrowed [(A)\u003e=(Data)]",
"17326":"Else, LT: Reduce Forward Offset, High",
"17327":"Save Array Size, Low",
"17329":"Save Array Size, High",
"17331":"Write 3-Byte Header (Length \u0026 Lock Byte)",
"17334":"Point at 1st Value in Array",
"17337":"Go Write Array Data to Tape",
"17340":"If Found, Point LOWTR at Array Specified",
"17343":"Read 3-Byte Header (Length \u0026 Lock Byte)",
"17346":"Point to Forward Offset Pointer, Low",
"17348":"Get Forward Offset, Low",
"17350":"Subtract Tape Array Size, Low (A-Data):NZC",
"17352":"Point to Forward Offset Pointer, High",
"17353":"Get Forward Offset, High",
"17355":"Subtract Tape Array Size, High",
"17357":"BGE: Branch if Borrowed [(A)\u003e=(Data)]",
"17359":"Else, LT: Throw an \"?Out Of Memory\" Error",
"17362":"Point at 1st Value in Array",
"17365":"Go Read Array Data from Tape",
"17368":"Display Text Page 2",
"17371":"Set Full Screen Graphics \u0026 Text Mode",
"17374":"Get Hi-Res Screen Pg.2 Base-Address, High",
"17376":"Go Set Hi-Res Graphics Mode; Always Taken",
"17378":"Get Hi-Res Screen Pg.1 Base-Address, High",
"17380":"Display Text Page1; R/W Main V-RAM",
"17383":"Set Mixed Graphics \u0026 Text Mode",
"17386":"Set Hi-Res Base Page (HPg1=$20, HPg2=$40)",
"17388":"Reset Lo-Res/Text Mode to Hi-Res Mode",
"17391":"Set Graphics Display Mode",
"17394":"Clear Accumulator",
"17396":"Clear Hi-Res Color Mask (Black Background)",
"17398":"Get Hi-Res Base Page (HPg1=$20, HPg2=$40)",
"17400":"Clear Hi-Res Screen Byte Pointer, High",
"17402":"Clear Indirect Addressing Index",
"17404":"Clear Hi-Res Screen Byte Pointer, Low",
"17406":"Get Hi-Res Color Mask",
"17408":"Clear Hi-Res Screen to Mask Color",
"17410":"Correct for Color Shift",
"17413":"Advance Indirect Addressing Index",
"17414":"LOOP if Not at Page Boundary",
"17416":"Advance Hi-Res Screen Byte Pointer, High",
"17418":"Get Hi-Res Screen Byte Pointer, High",
"17420":"Done? \u003c-[Done at Hi-Res Page End +1, High:",
"17422":"LOOP if Not Done",
"17424":"Else, Return to Caller",
"17425":"Save  Vertical  Y-Position",
"17427":"Save Horizontal X-Position, Low",
"17429":"Save Horizontal X-Position, High",
"17431":"*** BITS IN: A|Y=ABCDEFGH; Push Y-Position",
"17432":"Retain A|Y=AB000000, Negative \u0026 Overflow Bits",
"17434":"Set Graphics Base Address, Low",
"17436":"Shift Right: A|Y=0AB00000",
"17437":"Shift Right: A|Y=00AB0000",
"17438":"*** BITS OUT: GBASL=ABAB0000",
"17440":"Set Graphics Base Address, Low",
"17442":"| --------  --------  -------- Pull Y-Pos",
"17443":"Y=ABCDEFGH (ABCDEFGH) ABAB0000 \u003cSet GBASH",
"17445":"A-BCDEFGH0\u003c ABCDEFGH  ABAB0000 Shift Left",
"17446":"B-CDEFGH00\u003c ABCDEFGH  ABAB0000 Shift Left",
"17447":"C-DEFGH000\u003c ABCDEFGH  ABAB0000 Shift Left",
"17448":"A-DEFGH000  BCDEFGHC\u003c ABAB0000 Sets GBASH",
"17450":"D-EFGH0000\u003c BCDEFGHC  ABAB0000 Shift Left",
"17451":"B-EFGH0000  CDEFGHCD\u003c ABAB0000 Sets GBASH",
"17453":"E-FGH00000\u003c CDEFGHCD  ABAB0000 Shift Left",
"17454":"0-FGH00000  CDEFGHCD \u003eEABAB000 Sets GBASL",
"17456":"0-CDEFGHCD (CDEFGHCD) EABAB000 \u003cGet GBASH",
"17458":"0-000FGHCD\u0026 CDEFGHCD  EABAB000 Rtn 5 LSBs",
"17460":"0-PPPFGHCD+ CDEFGHCD  EABAB000 +($20,$40)",
"17462":"0-PPPFGHCD (PPPFGHCD) EABAB000 \u003cSet GBASH",
"17464":"Retrieve Horizontal X-Position, Low",
"17465":"Is Horizontal X-Position, High a Zero?",
"17467":"Branch if So: Horizontal X-Position \u003c 256",
"17469":"Following INY will make Y=36",
"17471":"Addvance Horizontal X-Position, Low",
"17473":"Addvance Horizontal X-Position, High",
"17474":"Reduce Horizontal X-Position, Low",
"17476":"BGE: LOOP if Borrowed [(A)\u003e=(Data)]",
"17478":"Store Horizontal Byte Index (Counted)",
"17480":"Use Remainder -7 to look up Color Bit Mask:",
"17481":"[Should be MSKTBL-$100+7,X] Get Bit Mask",
"17484":"Save H/GR On-the-Fly Color Bit Mask",
"17486":"Retrieve Horizontal Byte Index (Quotient)",
"17487":"Shift Right (lsb-\u003eC): Even or Odd Column?",
"17488":"Get Specified Hi-Res Graphics Color",
"17490":"Set Hi-Res Color Mask (Color Specified)",
"17492":"Branch if Odd Column: Fix Odd Color",
"17494":"Return to Caller if Even Column: No Fix",
"17495":"Set Hi-Res Cursor Position",
"17498":"Get Hi-Res Color Mask (Color Specified)",
"17500":"XOR with Dot at Cursor Position",
"17502":"AND with H/GR On-the-Fly Color Bit Mask",
"17504":"XOR with Dot at Cursor Position",
"17506":"Plot a Dot: Set Color at Cursor Position",
"17508":"Return to Caller",
"17509":"Go Move Right If Status is Positive",
"17511":"Get H/GR On-the-Fly Color Bit Mask",
"17513":"Shift Right (lsb-\u003eC): Bit = 0 or 1?",
"17514":"Branch if Bit Set: Dot Moved to Next Byte",
"17516":"Move Sign bit back to where it was (msb)",
"17518":"Set New H/GR On-the-Fly Color Bit Mask",
"17520":"Return to Caller",
"17521":"Reduce Horizontal Byte Index",
"17522":"Branch if still Not Past Edge",
"17524":"Else, Off Left Edge, So Wrap Around Scrn:",
"17526":"New HMASK, Rightmost Bit on Screen, ...",
"17528":"Set New H/GR On-the-Fly Color Bit Mask",
"17530":"Set New Horizontal Byte Index",
"17532":"Get Hi-Res Color Mask: Black Bits = 1",
"17534":"Shift/Rotate/Fix Even/Odd Color",
"17535":"(Black1|White1|Black2|White2)=(0|3|4|7)?",
"17537":"Return to Caller if Black or White",
"17539":"Get Hi-Res Color Mask: Black Bits = 1",
"17541":"Keep Sign Bit \u0026 Invert 7 Color Bits",
"17543":"Set Hi-Res Color Mask",
"17545":"Return to Caller",
"17546":"Get H/GR On-the-Fly Color Bit Mask",
"17548":"Shift Left (N-\u003eS): Bit = 0 or 1?",
"17549":"Invert Sign Bit \u0026 Keep 7 Color Bits",
"17551":"Branch if Finished [(N-\u003eS): Bit was = 0]",
"17553":"Get New H/GR On-the-Fly Color Bit Mask",
"17555":"Advance Horizontal Byte Index",
"17556":"Is Horizontal Byte Index Off Right Edge?",
"17558":"BLT: Branch if Not Past Edge; Else:",
"17560":"Wrap Around Scrn: Zero Horiz. Byte Index",
"17562":"Now, Go Finish Up; Always Taken",
"17564":"Clear Carry Flag (C=0)",
"17565":"Get Hi-Res Drawing Column, High",
"17567":"Is (Bit 2 = 0)?",
"17569":"YES, (Bit2 = 0), Don\u0027t Plot",
"17571":"Clear Sign Bit \u0026 Keep 7 Color Bits:",
"17573":"AND with H/GR On-the-Fly Color Bit Mask",
"17575":"Get Dot at Cursor Position",
"17577":"YES, Go Clear Screen Bit",
"17579":"NO, Count Collision",
"17581":"\u0026 Turn Bit On",
"17583":"And with H/GR On-the-Fly Color Bit Mask",
"17585":"Go Plot Bit; Always Taken",
"17587":"Clear Carry Flag (C=0)",
"17588":"Get Hi-Res Drawing Column, High",
"17590":"Is (Bit 2 = 0)?",
"17592":"YES, (Bit 2 = 0), Don\u0027t Plot",
"17594":"Get Dot at Cursor Position",
"17596":"XOR with Hi-Res Color Mask: Black Bits = 1",
"17598":"AND with H/GR On-the-Fly Color Bit Mask",
"17600":"Plot Bit if it was Zero",
"17602":"Else, Bit is already 1: Count Collision",
"17604":"XOR with Dot at Cursor Position",
"17606":"Set Dot at Cursor Position",
"17608":"Get Hi-Res Drawing Column, High",
"17610":"Add Hi-Res Drawing Quadrant",
"17612":"Wrap Around Circle",
"17614":"C=0 if 0 or 1, C=1 if 2 or 3",
"17616":"Put C into Sign, Odd/Even into C",
"17617":"BGE: Branch if C \u003e= 2: Move Left or Right",
"17619":"Branch if Sign = 1: Move Down",
"17621":"Prepare for Add with Carry",
"17622":"Get Graphics Base Address, High",
"17624":"\u0026-Mask for \"FGH\" bits [($1C)=(%00011100)]",
"17627":"Branch if FGH Bits \u003c\u003e 0; Go Do FGH=FGH-1",
"17629":"Else, Put GBASL Sign (E) Bit into Carry",
"17631":"Branch if Sign (E) Bit was Set (=1)",
"17633":"(Constant=3)[SourceGen Mission Impossible]",
"17636":"Finished if No Carryover [(H=0)\u003c-(CD)]",
"17638":"^[Do CDEFGH=CDEFGH-1 for Row = ABCDEFGH]",
"17640":"Force Following Branch:",
"17641":"Always Taken",
"17643":"Add enough to make GBASH=PPP11111 later",
"17645":"Push Modified GBASH: Save it for Later",
"17646":"GBASL is now ABAB0000 (AB=00,01,10)",
"17648":"Add to GBASL [High Nibble] ",
"17650":"Branch if C=1: No Wrap-Around Needed",
"17652":"Add to Fix GBASL [High Nibble]-\u003e[1010]",
"17654":"Set Graphics Base Address, Low",
"17656":"Pull Modified GBASH: Saved for later Mod",
"17657":"Always Taken",
"17659":"Add to GBASH=PPPFGHCD",
"17661":"Shift (E) back in to get GBASL=EABAB000",
"17663":"Add to GBASH=PPPFGHCD [Really^: PPPFGH-1]",
"17665":"Set Graphics Base Address, High",
"17667":"Return to Caller",
"17668":"Prepare for Add with Carry \u003c(Never Used)\u003e",
"17669":"Get Graphics Base Address, High",
"17671":"Add to GBASH=PPPFGHCD; Do FGH=FGH+1",
"17673":"\u0026-Mask for \"FGH\" bits [($1C)=(%00011100)]",
"17676":"Branch if FGH Bits \u003c\u003e 0: Finished",
"17678":"Else, Put GBASL Sign (E) Bit into Carry",
"17680":"Branch if Sign (E) Bit was Clear (=0)",
"17682":"Add to GBASH=PPPFGHCD; Do PPP=PPP-1",
"17684":"Prepare for Add with Carry",
"17685":"(Constant=4)[SourceGen Mission Impossible]",
"17688":"Finished if No Carryover [(H=0)\u003c-(CD)]",
"17690":"Get Graphics Base Address, Low",
"17692":"Advance GBASL (AB)\u0027s [High Nibble]: ",
"17694":"Invert GBASL (AB)\u0027s [High Nibble]",
"17696":"Branch if GBASL is Zero: Wrap Needed",
"17698":"Invert GBASL (AB)\u0027s [High Nibble], Again",
"17700":"Set New Graphics Base Address, Low",
"17702":"Get Hi-Res Base Page (HPg1=$20, HPg2=$40)",
"17704":"Always Taken",
"17706":"Add to GBASH=PPPFGHCD; Do PPP=PPP-1",
"17708":"Shift (E) back in to get GBASL=EABAB000",
"17710":"Finished, Go Set GBASH; Always Taken",
"17712":"Push Accumulator",
"17713":"Clear Accumulator",
"17715":"Clear Horizontal X-Position, Low",
"17717":"Clear Horizontal X-Position, High",
"17719":"Clear  Vertical  Y-Position, Low",
"17721":"Pull Accumulator",
"17722":"Push Target Point X-Coordinate, Low",
"17723":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"17724":"Subtract Horizontal X-Position, Low",
"17726":"Push Delta X, Low",
"17727":"Get Target Point X-Coordinate, High",
"17728":"Subtract Horizontal X-Position, High",
"17730":"Set Hi-Res Drawing Quadrant (w/ DXH)",
"17732":"BGE: Branch if Borrowed",
"17734":"Else, Pull Delta X, Low; \u0026",
"17735":"Invert Bits (Negate)",
"17737":"Add to Get New Delta X, Low [DXL=(1-DXL)]",
"17739":"Push New Delta X, Low",
"17740":"Prep to Subtract to Get [DXH=(1-DXH-!C)]",
"17742":"Subtract Hi-Res Drawing Quadrant (w/ DXH)",
"17744":"Set Hi-Res Drawing Column, High [ABS(DXH)]",
"17746":"Set Magnitude of Delta X, High  [ABS(DXH)]",
"17748":"Pull New Delta X, Low",
"17749":"Set Hi-Res Drawing Column, Low  [ABS(DXL)]",
"17751":"Set Magnitude of Delta X, Low   [ABS(DXL)]",
"17753":"Pull Target Point X-Coordinate, Low",
"17754":"Set Horizontal X-Position, Low",
"17756":"Set Horizontal X-Position, High",
"17758":"Get Target Point Y-Coordinate [Low \u003c 256]",
"17759":"Prepare to Subtract w/ Borrow [A-Data-!C]",
"17760":"Subtract Vertical Y-Position  [DY=Y-Y0-1]",
"17762":"BLT: Branch if No Borrow",
"17764":"Invert Bits (Negate)",
"17766":"Add to Get New Delta Y [DY=(254+{C=1}-DY)]",
"17768":"Set Hi-Res Drawing Row, Low [DY=(-1-DY)]",
"17770":"Set Vertical Y-Position = Target Y Point",
"17772":"Shift Carry Right into HGRQUAD Bit 7",
"17774":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"17775":"Subtract Drawing Column, Low [ABS(DXL)]",
"17777":"Save Result [-ABS(DY)-ABS(DXL)]",
"17778":"Get -1",
"17780":"Subtract Drawing Column, High [ABS(DXH)]",
"17782":"Set Hi-Res Line Step [-1-ABS(DXH)]",
"17784":"Get Hi-Res Byte Horiz. Index from GBASH,L",
"17786":"BGE: Branch if Borrowed; Always Taken",
"17788":"Shift Column Direction into Sign Bit",
"17789":"Move Left or Right One Pixel (1 Dot)",
"17792":"Prepare to Add with Carry Set (Adds 1)",
"17793":"(C=1): Get Magnitude of Delta X, Low",
"17795":"Add Hi-Res Drawing Row, Low [DY=(-1-DY)]",
"17797":"Set Magnitude of Delta X, Low",
"17799":"Get Magnitude of Delta X, High",
"17801":"Subtract Zero with Borrow [A-Data-!C]",
"17803":"Set Magnitude of Delta X, High",
"17805":"Get Dot at Cursor Position",
"17807":"XOR with Hi-Res Color Mask",
"17809":"AND with H/GR On-the-Fly Color Bit Mask",
"17811":"XOR with Dot at Cursor Position",
"17813":"Set Dot at Cursor Position",
"17815":"Count Dot Plotted",
"17816":"Branch if All Dots Not Done",
"17818":"Advance Hi-Res Line Step [-Dots Needed]",
"17820":"EXIT if All Dots Done: Return to Caller",
"17822":"Get Hi-Res Drawing Quadrant",
"17824":"[LOOP] BGE: Do Next Column (X Dir) Move",
"17826":"Else, Do Next Row (Y Direction) Move",
"17829":"Prepare for Add with Carry",
"17830":"Get Magnitude of Delta X, Low",
"17832":"Add Hi-Res Drawing Column, Low",
"17834":"Set Magnitude of Delta X, Low",
"17836":"Get Magnitude of Delta X, High",
"17838":"Add Hi-Res Drawing Column, High",
"17840":"[LOOP] Branch if NO Overflow; Always Taken",
"17842":"Mask Hi-Res Byte Sign Bit \u0026 Column Bit 1",
"17843":"Mask Hi-Res Byte Sign Bit \u0026 Column Bit 2",
"17844":"Mask Hi-Res Byte Sign Bit \u0026 Column Bit 3",
"17845":"Mask Hi-Res Byte Sign Bit \u0026 Column Bit 4",
"17846":"Mask Hi-Res Byte Sign Bit \u0026 Column Bit 5",
"17847":"Mask Hi-Res Byte Sign Bit \u0026 Column Bit 6",
"17848":"Mask Hi-Res Byte Sign Bit \u0026 Column Bit 7",
"17849":"Mask for \"FGH\" Bits [($1C)=(%00011100)]",
"17850":"=(65,279)=(   -257)|(255,254)=(  -1,  -2)",
"17852":"=(62,714)=( -2,822)|(250,244)=(  -6, -12)",
"17854":"=(57,836)=( -7,700)|(236,225)=( -20, -31)",
"17856":"=(50,644)=(-14,892)|(212,197)=( -44, -59)",
"17858":"=(41,396)=(-24,140)|(180,161)=( -76, -95)",
"17860":"=(30,861)=(-34,675)|(141,120)=(-115,-136)",
"17862":"=(18,785)=(-46,751)|( 97, 73)=(-159,-183)",
"17864":"=( 6,193)=(-59,343)|( 49, 24)=(-207,-232)",
"17866":"=(   255)=(-65,281)|(255,n/a)=(  -1, n/a)",
"17867":"EABAB000; Get Graphics Base Address, Low",
"17869":"EABAB000; Shift Sign (E) Bit into Carry",
"17870":"PPPFGHCD; Get Graphics Base Address, High",
"17872":"000000CD; AND Graphics Base Address, High",
"17874":"00000CDE; Rotate Left: Carry, Sign (E) Bit",
"17875":"EABABCDE; OR Graphics Base Address, Low",
"17877":"ABABCDE0; Shift Left",
"17878":"BABCDE00; Shift Left",
"17879":"ABCDE000; Shift Left",
"17880":"ABCDE000; Save in Vertical Y-Position, Low",
"17882":"PPPFGHCD; Get Graphics Base Address, High",
"17884":"0PPPFGHC; Shift Right",
"17885":"00PPPFGH; Shift Right",
"17886":"00000FGH; AND with Seven",
"17888":"ABCDEFGH; OR with Vertical Y-Position, Low",
"17890":"ABCDEFGH; Set Vertical Y-Position, Low",
"17892":"Get Hi-Res Byte Horizontal Index    (I*1)",
"17894":"Double (A): Horizontal Index        (I*2)",
"17895":"Add Hi-Res Byte Horizontal Index    (I*3)",
"17897":"Double (A): Horizontal Index        (I*6)",
"17898":"Save (I*6) Horizontal Index",
"17899":"[Loop Prep] Reduce (I*6) Hrz.Index (I*6)-1",
"17900":"Get H/GR On-the-Fly Color Bit Mask",
"17902":"Discard Sign Bit; Keep 7 Lower Bits (LSBs)",
"17904":"Advance (Loop) Shift Counter   (I*6) 1st.",
"17905":"Shift LSB Right into Carry",
"17906":"LOOP if LSB was Set; Else, Exit Loop:",
"17908":"Set Horizontal X-Position, High (=0)",
"17910":"Get Shift Count",
"17911":"Prepare for Add with Carry",
"17912":"Add Hi-Res Byte Horizontal Index  (I*7)+N",
"17914":"Branch if No Carryover",
"17916":"Advance Horizontal X-Position, High",
"17918":"Set Horizontal X-Position, Low    (I*7)+N",
"17920":"Return to Caller",
"17921":"Set Hi-Res Screen Byte Pointer, Low",
"17923":"Set Hi-Res Screen Byte Pointer, High",
"17925":"Save Rotation Angle [($00-$3F)=(0-63)]",
"17926":"Shift Right: (A)=(A/2);  NOW",
"17927":"Shift Right: (A)=(A/2); (A/4)",
"17928":"Shift Right: (A)=(A/2); (A/8)",
"17929":"Shift Right: (A)=(A/2); (A/16)",
"17930":"Set HGR Drawing Quadrant",
"17932":"Retrieve Rotation Angle [($00-$3F)=(0-63)]",
"17933":"AND w/ Rotation to Get Index (Low Nibble)",
"17935":"Set Positive Index into Trig Table for DX",
"17936":"Get COS(90*X/16 Degrees)*$100-1, Low",
"17939":"Save COS in HGRDX, Drawing Column, Low",
"17941":"Invert (Negate) Low Nibble Bits of Index",
"17943":"Set Negative Index into Trig Table for DY",
"17944":"Get COS(90*X/16 Degrees)*$100-1, High",
"17947":"Advance Value Got; Now have SIN, too",
"17948":"Save SIN in HGRDY, Drawing Row",
"17950":"Get HGR Hrz.Index frm GBAS to Current Byte",
"17952":"Clear Index into Trig Table ",
"17954":"Clear HGR Collision Counter",
"17956":"Get 1st Byte of SHAPE Definition",
"17958":"Store SHAPE Byte in Drawing Column, High",
"17960":"Get Initial Value for Fractional Vectors:",
"17962":"Set .5 in COS X-Component",
"17964":"Set .5 in SIN Y-Component",
"17966":"Get Drawing Scale Factor",
"17968":"Get COS X-Component",
"17970":"Prepare for Add w/ Carry Set (Adds 1)",
"17971":"Add COS X-Component to Drawing Column",
"17973":"Set COS X-Component",
"17975":"BLT: Branch if No Carryover; Else, ...*",
"17977":"* DRAW One Bit (w/o 90 Degree Rotation)",
"17980":"Prepare for Add w/ Carry Clear (Adds 0)",
"17981":"Get SIN Y-Component",
"17983":"Add SIN Y-Component to Drawing Row",
"17985":"Set SIN Y-Component",
"17987":"BLT: Branch if No Carryover; Else, ...*",
"17989":"* DRAW One Bit (w/ 90 Degree Rotation)",
"17992":"Reduce Drawing Scale Factor",
"17993":"LOOP if Still on Same SHAPE Item",
"17995":"Get Next SHAPE Item",
"17997":"Shift Right: 1st Bit Out",
"17998":"Shift Right: 2nd Bit Out",
"17999":"Shift Right: 3rd Bit Out",
"18000":"LOOP if More in this SHAPE Byte",
"18002":"Advance to Next SHAPE Byte, Low",
"18004":"Branch Until Page Boundary Reached",
"18006":"Advance to Next SHAPE Byte, High",
"18008":"Get Next Byte of SHAPE Definition",
"18010":"LOOP if SHAPE Definition \u003c\u003e 0",
"18012":"Else, Finished, Return to Caller",
"18013":"Set Hi-Res Screen Byte Pointer, Low",
"18015":"Set Hi-Res Screen Byte Pointer, High",
"18017":"Save Rotation Angle [($00-$3F)=(0-63)]",
"18018":"Shift Right: (A)=(A/2);  NOW",
"18019":"Shift Right: (A)=(A/2); (A/4)",
"18020":"Shift Right: (A)=(A/2); (A/8)",
"18021":"Shift Right: (A)=(A/2); (A/16)",
"18022":"Set HGR Drawing Quadrant",
"18024":"Retrieve Rotation Angle [($00-$3F)=(0-63)]",
"18025":"AND w/ Rotation to Get Index (Low Nibble)",
"18027":"Set Positive Index into Trig Table for DX",
"18028":"Get COS(90*X/16 Degrees)*$100-1, Low",
"18031":"Save COS in HGRDX, Drawing Column, Low",
"18033":"Invert (Negate) Low Nibble Bits of Index",
"18035":"Set Negative Index into Trig Table for DY",
"18036":"Get COS(90*X/16 Degrees)*$100-1, High",
"18039":"Advance Value Got; Now have SIN, too",
"18040":"Save SIN in HGRDY, Drawing Row",
"18042":"Get HGR Hrz.Index frm GBAS to Current Byte",
"18044":"Clear Index into Trig Table",
"18046":"Clear HGR Collision Counter",
"18048":"Get 1st Byte of SHAPE Definition",
"18050":"Store SHAPE Byte in Drawing Column, High",
"18052":"Get Initial Value for Fractional Vectors:",
"18054":"Set .5 in COS X-Component",
"18056":"Set .5 in SIN Y-Component",
"18058":"Get Drawing Scale Factor",
"18060":"Get COS X-Component",
"18062":"Prepare for Add w/ Carry Set (Adds 1)",
"18063":"Add COS X-Component to Drawing Column",
"18065":"Set COS X-Component",
"18067":"BLT: Branch if No Carryover; Else, ...*",
"18069":"* XDRAW One Bit (w/o 90 Degree Rotation)",
"18072":"Prepare for Add w/ Carry Clear (Adds 0)",
"18073":"Get SIN Y-Component",
"18075":"Add SIN Y-Component to Drawing Row",
"18077":"Set SIN Y-Component",
"18079":"BLT: Branch if No Carryover; Else, ...*",
"18081":"* XDRAW One Bit (w/ 90 Degree Rotation)",
"18084":"Reduce Drawing Scale Factor",
"18085":"LOOP if Still on Same SHAPE Item",
"18087":"Get Next SHAPE Item",
"18089":"Shift Right: 1st Bit Out",
"18090":"Shift Right: 2nd Bit Out",
"18091":"Shift Right: 3rd Bit Out",
"18092":"LOOP if More in this SHAPE Byte",
"18094":"Advance to Next SHAPE Byte, Low",
"18096":"Branch Until Page Boundary Reached",
"18098":"Advance to Next SHAPE Byte, High",
"18100":"Get Next Byte of SHAPE Definition",
"18102":"LOOP if SHAPE Definition \u003c\u003e 0",
"18104":"Else, Finished, Return to Caller",
"18105":"Get Value Specified as 16-Bit Integer",
"18108":"Convert FAC to a 16-bit Value in LINNUM",
"18111":"Get Horizontal-Column X-Coordinate, High",
"18113":"Get Horizontal-Column X-Coordinate, Low",
"18115":"\u003c 280 Pixels: HGR Screens Width, High?",
"18117":"BLT: Branch if in Range, \u003c 280 Pixels",
"18119":"Branch if Too Big (\u003e=280); Throw IQ ERROR",
"18121":"\u003c 280 Pixels: HGR Screens Width, Low?",
"18123":"Branch if Too Big (\u003e=280); Throw IQ ERROR",
"18125":"Get Horizontal-Column X-Coordinate, Low",
"18126":"Push Horizontal-Column X-Coordinate, Low",
"18127":"Get Horizontal-Column X-Coordinate, High",
"18128":"Push Horizontal-Column X-Coordinate, High",
"18129":"Require a Comma (at TXTPTR)",
"18131":"If = Chr Got, Get Next; Else, Syntax Error",
"18134":"Convert Expression to a Byte in X-Reg",
"18137":"\u003c 192 Pixels: HGR Screens Height?",
"18139":"Branch if Too Big (\u003e=192); Throw IQ ERROR",
"18141":"Save Vertical-Row Y-Coordinate in FAC",
"18143":"Pull Horizontal-Column X-Coordinate, High",
"18144":"Set Horizontal-Column X-Coordinate, High",
"18145":"Pull Horizontal-Column X-Coordinate, Low",
"18146":"Set Horizontal-Column X-Coordinate, Low",
"18147":"Set Vertical-Row Y-Coordinate from FAC",
"18149":"Return to Caller",
"18150":"Go Print \"?Illegal Quantity\" Error Message",
"18153":"Convert Expression to a Byte in X-Reg",
"18156":"Value must be 0~7",
"18158":"Branch if Too Big (\u003e=8); Throw IQ ERROR",
"18160":"Get Color Pattern from Table",
"18163":"Save Hi-Res Graphics Color",
"18165":"Return to Caller",
"18166":"Black1",
"18167":"Green",
"18168":"Violet",
"18169":"White1",
"18170":"Black2",
"18171":"Orange",
"18172":"Cyan (Light-Blue)",
"18173":"White2",
"18174":"Continue Plotting \"TO\" Requested?",
"18176":"YES, Start from Current Location",
"18178":"NO, Get Starting Point of Line",
"18181":"Plot Point \u0026 Prep to Draw a Line from it",
"18184":"Get Character at End of Expression",
"18187":"Is a Line Specified?",
"18189":"NO, Exit: a Line is Not Specified",
"18191":"If = Chr Got, Get Next; Else, Syntax Error",
"18194":"Get Point Coordinates at End of Line",
"18197":"Swap (Y) into (T)",
"18199":"Swap (A) into (Y)",
"18200":"Swap (X) into (A)",
"18201":"Swap (T) into (X)",
"18203":"Plot Line",
"18206":"LOOP Until No More \"TO\" Phrases",
"18209":"Convert Expression to a Byte in X-Reg",
"18212":"Set Hi-Res Graphics Rotation Value",
"18214":"Return to Caller",
"18215":"Convert Expression to a Byte in X-Reg",
"18218":"Set Hi-Res Graphics Drawing Scale Factor",
"18220":"Return to Caller",
"18221":"Convert Expression to a Byte in X-Reg",
"18224":"Get HGR SHAPE Pointer, Low",
"18226":"Set SHAPE Table Start Pointer, Low",
"18228":"Get HGR SHAPE Pointer, High",
"18230":"Set SHAPE Table Start Pointer, High",
"18232":"Get SHAPE Number Specified",
"18233":"Clear (Indexed Indirect) Addressing Index",
"18235":"Subtract Total Number of SHAPE Definitions",
"18237":"Branch if Both Numbers of SHAPEs are Equal",
"18239":"Else, Branch if Spec Too Big; Throw IQ ERR",
"18241":"Double SHAPE Number Specified for Index",
"18242":"Branch if SHAPE Number Specified \u003c 128",
"18244":"Advance SHAPE Table Start Pointer, High",
"18246":"Prepare for Add with Carry",
"18247":"Get Index into SHAPE Table Offsets Index",
"18248":"Get SHAPE Offset, Low",
"18250":"Add SHAPE Table Start Pointer, Low",
"18252":"Save Low Address of SHAPE in Table",
"18253":"INC Index into SHAPE Table Offsets Index",
"18254":"Get SHAPE Offset, High",
"18256":"Add HGR SHAPE Pointer, High",
"18258":"Set SHAPE Start Pointer, High",
"18260":"Set SHAPE Start Pointer, Low",
"18262":"Get Last Char/Token Got",
"18265":"Is it an \"AT\" Phrase?",
"18267":"Branch if Not: DRAW at Current Position",
"18269":"If = Chr Got, Get Next; Else, Syntax Error",
"18272":"Get Column \u0026 Row to Start Drawing SHAPE",
"18275":"Set Hi-Res Cursor at Position Coordinates",
"18278":"Get Rotation Value",
"18280":"Return to Caller",
"18281":"Prepare for DRAW|XDRAW",
"18284":"Go DRAW 1 Shape",
"18287":"Prepare for DRAW|XDRAW",
"18290":"Go XDRAW 1 Shape",
"18293":"Clear Accumulator",
"18295":"Clear Monitor General Purpose A1-Reg, High",
"18297":"Clear Monitor General Purpose A2-Reg, High",
"18299":"Get ZP Address of LINNUM",
"18301":"Set Monitor General Purpose A1-Reg, Low",
"18303":"Get ZP Address of LINNUM+1",
"18304":"Set Monitor General Purpose A2-Reg, Low",
"18306":"Go Read 2 Bytes of Data from Tape",
"18309":"Prepare to Subtract w/ Borrow [A-Data-!C]",
"18310":"Get Top End of String Space (HIMEM), Low",
"18312":"Set (X)=[String Space End (HIMEM), Low]",
"18313":"(X)=[(HIMEM)-1] Forming End Pointer, Low",
"18314":"Set Monitor General Purpose A2-Reg, Low",
"18316":"[(HIMEM)-(LINNUM)] Forming Start Ptr, Low",
"18318":"Push Start Pointer, Low",
"18319":"Get Top End of String Space (HIMEM), High",
"18321":"Set (Y)=[String Space End (HIMEM), High]",
"18322":"Set (X)=[String Space End (HIMEM), Low]",
"18323":"Branch if Not at Page Boundary",
"18325":"(Y)=[(HIMEM)-1] Forming End Pointer, High",
"18326":"Set Monitor General Purpose A2-Reg, High",
"18328":"[(HIMEM)-(LINNUM)] Forming Start Ptr, High",
"18330":"Subtract End of Vars \u0026 Ptrs Storage, High",
"18332":"Branch if SHLOAD would clobber Vars \u0026 Ptrs",
"18334":"Branch if SHLOAD has sufficient Free Space",
"18336":"Throw an \"?Out Of Memory\" Error",
"18339":"Set Top End of String Space (HIMEM), High",
"18341":"Set FreSpcEnd/StringStorageStart Ptr, High",
"18343":"Set Monitor General Purpose A1-Reg, High",
"18345":"Set Hi-Res Graphics Shape Pointer, High",
"18347":"Pull [(HIMEM)-(LINNUM)] Start Pointer, Low",
"18348":"Set Hi-Res Graphics Shape Pointer, Low",
"18350":"Set Top End of String Space (HIMEM), Low",
"18352":"Set FreSpcEnd/StringStorageStart Ptr, Low",
"18354":"Set Monitor General Purpose A1-Reg, Low",
"18356":"Read Two Bits, Tape Transitions; Find Edge",
"18359":"Create Short Delay for Intermediate Header",
"18361":"Go Read Shape Table into (A1-Reg)",
"18364":"Prepare for Add with Carry",
"18365":"Get Specified Array Variable Pointer, Low",
"18367":"Add Array Size, Low",
"18369":"Set Monitor General Purpose A2-Reg, Low",
"18371":"Get Specified Array Variable Pointer, High",
"18373":"Add Array Size, High",
"18375":"Set Monitor General Purpose A2-Reg, High",
"18377":"Point to Number of Array Dimensions",
"18379":"Get Number of Array Dimensions",
"18381":"Compute Address of 1st Value in Array",
"18384":"Get Array Pointer, Low",
"18386":"Set Monitor General Purpose A1-Reg, Low",
"18388":"Get Array Pointer, High",
"18390":"Set Monitor General Purpose A1-Reg, High",
"18392":"Return to Caller",
"18393":"Prepare to Flag \"Called from GETARYPTR\"",
"18395":"Set Subscript Flag ($00=Allowed, $80=NOT)",
"18397":"Locate Variable: Returns Address",
"18400":"Prepare to Allow Subscripts",
"18402":"Set Subscript Flag ($00=Allowed, $80=NOT)",
"18404":"Point A1/A2 at LINNUM/TEMPPT ZP-Pointers",
"18407":"Convert Expression to a Byte in X-Reg",
"18410":"Reduce Column Position Specified (-1)",
"18411":"Get Text Screen Position (0~255)",
"18412":"Is it More or Less than Text Screen Width?",
"18414":"BLT: Branch if it is \u003c 1 Screen Width",
"18416":"Else, Subtract 1 Screen Width \u0026 Add a Line",
"18418":"Push Reduced HTAB Value",
"18419":"Print a Carriage \u003cReturn\u003e Character",
"18422":"Pull Reduced HTAB Value",
"18423":"LOOP Until it is \u003c 1 Screen Width",
"18426":"Set Cursor Horizontal Displacement",
"18428":"Return to Caller",
"18429":"Someone\u0027s initials?  K?  R?  W?",
"18432":"(A)=(Y-Coordinate/2)",
"18433":"Push Status (P-Reg); Save Carry (LSB)",
"18434":"Calculate Base Address in GBASL,H",
"18437":"Pull Status (P-Reg); Retrieve Carry (LSB)",
"18438":"Mask $0F if Even",
"18440":"Branch if LSB (in Carry) is a Zero",
"18442":"Mask $F0 if Odd; (Adds 1 with Carry Set)",
"18444":"Store AND Mask (for High/Low Nibble)",
"18446":"Get Data",
"18448":"XOR with Color; [Set HMASK 1st!]",
"18450":"AND with Nibble Mask",
"18452":"XOR with Data",
"18454":"Set Data",
"18456":"Return to Caller",
"18457":"Plot Square",
"18460":"Done?",
"18462":"YES, Return to Caller",
"18464":"NO, Advance Index (X-Coordinate)",
"18465":"Plot Next Square",
"18468":"Loop; Always Taken",
"18470":"(A)=[Next Row (Y-Coordinate)]",
"18472":"Push Next Row ",
"18473":"Plot Square",
"18476":"Pull Next Row",
"18477":"Done?",
"18479":"NO, LOOP",
"18481":"Return to Caller",
"18482":"Maximize Y for Full Screen",
"18484":"Always Taken",
"18486":"Maximize Y for Top Screen",
"18488":"Store as Bottom Coordinate for VLINE Calls",
"18490":"Rightmost X-Coordinate (Column)",
"18492":"Top Coordinate for VLINE Calls",
"18494":"Clear Color (to Black)",
"18496":"Draw VLINE",
"18499":"Next Leftmost X-Coordinate",
"18500":"Loop Until Done",
"18502":"Return to Caller",
"18503":"Push (A)=(GR_Line/2)=[(GBASL) for Input]",
"18504":"Set (A)=(GR_Line/4) [GBASH=0ABCDEFG; C=H]",
"18505":"Generate GBASH=000000FG",
"18507":"Generate GBASH=000001FG",
"18509":"Set Graphics Base Address, High (GBASH)",
"18511":"Pull (A)=(GBASL=IJKLMNOP)",
"18512":"Generate GBASL=000LM000",
"18514":"Skip Next Op if Carry is Clear (C=H=0)",
"18516":"Generate GBASL=I00LM000 (C=H=1: Adds 1)",
"18518":"Set Graphics Base Address, Low  (GBASL)",
"18520":"Generate GBASL=(00LM0000 = 00LM0000; C=I)",
"18521":"Generate GBASL=(0LM00000 = 0LM00000; C=0)",
"18522":"Generate GBASL=(0LMLM000 | ILMLM000)",
"18524":"Set Graphics Base Address, Low  (GBASL)",
"18526":"Return to Caller",
"18527":"Get Graphics On-the-Fly Color Bit Mask",
"18529":"Prepare for Add with Carry",
"18530":"Advance Plotting Color to Color+3",
"18532":"Discard High Nibble \u0026 Keep Low Nibble",
"18534":"Set Graphics On-the-Fly Color Bit Mask",
"18536":"Make Both Nibbles of Plotting Color Equal",
"18537":"Shift Low Nibble to High Nibble",
"18538":"(%####,0000 \u003c-- \u003c-- \u003c-- \u003c-- %0000,####)",
"18539":"Now High Nibble is what Low Nibble was",
"18540":"OR with Graphics On-the-Fly Color Bit Mask",
"18542":"Set Graphics On-the-Fly Color Bit Mask",
"18544":"Return to Caller",
"18545":"(A)=(Y-Coordinate/2)",
"18546":"Push Status (P-Reg); Save Carry (LSB)",
"18547":"Calculate Base Address in GBASL,H",
"18550":"Get Colors Byte at Column,Row Coordinates",
"18552":"Pull Status (P-Reg); Retrieve Carry (LSB)",
"18553":"If Even, use Low Nibble",
"18555":"If Odd, use High Nibble",
"18556":"Shift High Nibble",
"18557":"... to Low Nibble",
"18558":"Now Low Nibble is what High Nibble was",
"18559":"Mask 4-Bit Color at Column,Row Coordinates",
"18561":"Return to Caller",
"18562":"Get Program Counter, Low",
"18564":"Get Program Counter, High",
"18566":"Print Program Counter [(Y,X)={High,Low}]",
"18569":"Followed by a Blank (3 Spaces)",
"18572":"Get OpCode",
"18574":"Save OpCode",
"18575":"Even/Odd Test: Put LSB (Bit 0) into (C)",
"18576":"Branch if OpCode is (=%#######0) Even",
"18578":"Bit 1 Test: Put (C=1) in MSB \u0026 LSB in (C)",
"18579":"Branch if OpCode is (=%######11) Invalid",
"18581":"Is OpCode a NOP?  (%10001001=$89=137):(?)",
"18583":"Branch if OpCode is Invalid (=$89)",
"18585":"Mask Bits: Keep Sign \u0026 3 LSBs",
"18587":"Put LSB into Carry for Left/Right Test",
"18588":"Set Absolute,X-Index [(X=A)=(%0#######)]",
"18589":"Get Instruction Display Format Index Byte",
"18592":"Get Right or Left Nibble Based on Carry",
"18595":"Branch if Low Nibble \u003c\u003e 0: OpCode is Valid",
"18597":"Else, Substitute $80 for Invalid OpCodes",
"18599":"Clear Accumulator",
"18601":"Set Absolute,X-Index",
"18602":"Get Instruction Display Print Format Byte",
"18605":"Save for Address Field Formatting",
"18607":"Mask to Get 2-Bit LENGTH (OpCodeBytes-1:",
"18609":"Save Length (Number of OpCode Bytes -1)",
"18611":"Get Saved {Valid or Invalid ($80)} OpCode",
"18612":"Mask for 6502 Bit Mapping Test (%1###1010)",
"18614":"Save Masked Byte for Test",
"18615":"Get Saved OpCode Again",
"18616":"Set Loop Counter",
"18618":"Is Masked Byte for an OpCode=(%1###1010)?",
"18620":"YES, Form an Index into the Mnemonic Table",
"18622":"Even/Odd Test: Put LSB into (C)",
"18623":"Branch if LSB was Even; Else:",
"18625":"Put Next LSB into Carry (C) [Discarded]",
"18626":"Put Next LSB into Carry (C) [Discarded]",
"18627":"Set Current Bit 5",
"18629":"Reduce Loop Counter",
"18630":"Loop until Y=0",
"18632":"Advance to Compensate for Next Reduction ",
"18633":"Reduce Loop Counter",
"18634":"Loop until Y=0; Else:",
"18636":"Return to Caller",
"18637":"Filler",
"18640":"Display Instruction Line Address \u0026",
"18643":"Push/Save Index into Mnemonic Table ^",
"18644":"Get Byte at (Program Counter),Y",
"18646":"Print (A) as Two-Digit Hex Number",
"18649":"Prepare to Print One Space",
"18651":"Print a Blank [(X) Spaces]",
"18654":"Subtract (Number of OpCode Bytes -1)",
"18656":"Advance OpCode Bytes Counter",
"18657":"BLT: Loop if Byte Count \u003c LENGTH (^)",
"18659":"Get Blank Char Count (for No OpCode Byte)",
"18661":"Ending with (Y) Blanks of (X) Spaces each",
"18663":"BLT: Loop if OpCode Bytes Counter \u003c 4",
"18665":"Pull/Retrieve Index into Mnemonic Table",
"18666":"Set Indirect Addressing Index",
"18667":"Get 1st Packed Byte of Mnemonic",
"18670":"Set Left  (ZP) Byte of Mnemonic",
"18672":"Get 2nd Packed Byte of Mnemonic",
"18675":"Set Right (ZP) Byte of Mnemonic",
"18677":"PRMN1: Clear Accumulator",
"18679":"Set to Shift 5 Bits into (A)",
"18681":"Shift Left 5 Bits of",
"18683":"Packed Mnemonic Characters [^^^]",
"18685":"into the Accumulator (Clears Carry)",
"18686":"Reduce Bit Counter",
"18687":"Branch Until Shifted All 5 Bits",
"18689":"Add Offset to make Char High ASCII (\u003e=\"?\")",
"18691":"Output 1 Character of Mnemonic",
"18694":"Reduce Mnemonic Character Counter",
"18695":"Loop Until 3 Packed Mnemonic Chars Printed",
"18697":"Print a Blank [(3) Spaces]",
"18700":"Get LENGTH (Number of OpCode Bytes -1)",
"18702":"Count for 6 Format Bits",
"18704":"3 Packed Mnemonic Chars Printed?",
"18706":"YES, Branch if X=3: Do Address Field",
"18708":"Shift Addressing Field Format MSB-\u003e(C)",
"18710":"Branch if Shifted MSB is Zero; Else:",
"18712":"[-1 OK Here] Get Address Printout Byte",
"18715":"Print Addressing CHAR1 Byte",
"18718":"[-1 OK Here] Get Address Printout Byte",
"18721":"Branch if CHAR2 is a Zero (0)",
"18723":"Else, Print Addressing CHAR2 Byte",
"18726":"Reduce Format Bit Count",
"18727":"Loop Until 6 Format Bits Counted",
"18729":"Else, Done, Return to Caller",
"18730":"Reduce (Number of OpCode Bytes -1) Count",
"18731":"Loop if All Instruction Bytes Processed",
"18733":"Else, Print (A) as Two-Digit Hex Number",
"18736":"Get Addressing Field Format",
"18738":"Subtract $E8 [(A)-Data -\u003e NZC]",
"18740":"Get Byte at (Program Counter),Y",
"18742":"Branch if Addressing Mode is Not Relative",
"18744":"Add (A+C) to Instruction Address (PCL,H)",
"18747":"Get (Target Address -1), Low",
"18748":"Add 1 to (Target Address -1), Low",
"18749":"Branch if Not Crossing Page Boundary",
"18751":"Else, Add 1 to (Target Address -1), High",
"18752":"Get Target Address, High",
"18753":"Print A-Reg as Two-Digit Hex Number",
"18756":"Get Target Address, Low",
"18757":"Print A-Reg as Two-Digit Hex Number",
"18760":"Print a Blank [(3) Spaces]",
"18762":"Print a Blank [(X) Spaces]",
"18764":"Print (A) to Output Device",
"18767":"Reduce Character Count",
"18768":"LOOP Until All Characters are Done",
"18770":"Return to Caller",
"18771":"Prepare for Add with Carry Set (Adds 1)",
"18772":"Get LENGTH (Number of OpCode Bytes -1)",
"18774":"Get Instruction Address, High",
"18776":"Get Offset to Target Address",
"18777":"Branch if Offset to Target is Positive",
"18779":"Else, Extend Negative Target Offset",
"18780":"Add Offset to Instruction Address, Low ",
"18782":"Branch if No Carryover (or Page Crossed)",
"18784":"Else, Add 1 to Instruction Address, High",
"18785":"Return to Caller",
"18786":"$00: ??? Error/Unknown  | 1 | {Empty}",
"18787":"$02: ASL Zero-Page [ZP] | 2 | $NN",
"18788":"$04: ASL Accumulator    | 1 | {Empty}",
"18789":"$06: ASL Absolute       | 3 | $NNNN",
"18790":"$08: ??? Error/Unknown  | 1 | {Empty}",
"18791":"$0A: ASL Zero-Page,X    | 2 | $NN,X",
"18792":"$0C: ??? Error/Unknown  | 1 | {Empty}",
"18793":"$0E: ASL Absolute,X     | 3 | $NNNN,X",
"18794":"$10: ??? Error/Unknown  | 1 | {Empty}",
"18795":"$12: ROL Zero-Page [ZP] | 2 | $NN",
"18796":"$14: ROL Accumulator    | 1 | {Empty}",
"18797":"$16: ROL Absolute       | 3 | $NNNN",
"18798":"$18: ??? Error/Unknown  | 1 | {Empty}",
"18799":"$1A: ROL Zero-Page,X    | 2 | $NN,X",
"18800":"$1C: ??? Error/Unknown  | 1 | {Empty}",
"18801":"$1E: ROL Absolute,X     | 3 | $NNNN,X",
"18802":"$20: ??? Error/Unknown  | 1 | {Empty}",
"18803":"$22: LSR Zero-Page [ZP] | 2 | $NN",
"18804":"$24: LSR Accumulator    | 1 | {Empty}",
"18805":"$26: LSR Absolute       | 3 | $NNNN",
"18806":"$28: ??? Error/Unknown  | 1 | {Empty}",
"18807":"$2A: LSR Zero-Page,X    | 2 | $NN,X",
"18808":"$2C: ??? Error/Unknown  | 1 | {Empty}",
"18809":"$2E: LSR Absolute,X     | 3 | $NNNN,X",
"18810":"$30: ??? Error/Unknown  | 1 | {Empty}",
"18811":"$32: ROR Zero-Page [ZP] | 2 | $NN",
"18812":"$34: ROR Accumulator    | 1 | {Empty}",
"18813":"$36: ROR Absolute       | 3 | $NNNN",
"18814":"$38: ??? Error/Unknown  | 1 | {Empty}",
"18815":"$3A: ROR Zero-Page,X    | 2 | $NN,X",
"18816":"$3C: ??? Error/Unknown  | 1 | {Empty}",
"18817":"$3E: ROR Absolute,X     | 3 | $NNNN,X",
"18818":"$40: ??? Error/Unknown  | 1 | {Empty}",
"18819":"$42: STX Zero-Page [ZP] | 2 | $NN",
"18820":"$44: TYA Implied        | 1 | {Empty}",
"18821":"$46: STX Absolute       | 3 | $NNNN",
"18822":"$48: ??? Error/Unknown  | 1 | {Empty}",
"18823":"$4A: STX Zero-Page,Y    | 2 | $NN,Y",
"18824":"$4C: TXS Implied        | 1 | {Empty}",
"18825":"$4E: ??? Error/Unknown  | 1 | {Empty}",
"18826":"$50: LDX Immediate      | 2 | #$NN",
"18827":"$52: LDX Zero-Page [ZP] | 2 | $NN",
"18828":"$54: TAX Implied        | 1 | {Empty}",
"18829":"$56: LDX Absolute       | 3 | $NNNN",
"18830":"$58: ??? Error/Unknown  | 1 | {Empty}",
"18831":"$5A: LDX Zero-Page,Y    | 2 | $NN,Y",
"18832":"$5C: TSX Implied        | 1 | {Empty}",
"18833":"$5E: LDX Absolute,Y     | 3 | $NNNN,Y",
"18834":"$60: ??? Error/Unknown  | 1 | {Empty}",
"18835":"$62: DEC Zero-Page [ZP] | 2 | $NN",
"18836":"$64: DEX Implied        | 1 | {Empty}",
"18837":"$66: DEC Absolute       | 3 | $NNNN",
"18838":"$68: ??? Error/Unknown  | 1 | {Empty}",
"18839":"$6A: DEC Zero-Page,X    | 2 | $NN,X",
"18840":"$6C: ??? Error/Unknown  | 1 | {Empty}",
"18841":"$6E: DEC Absolute,X     | 3 | $NNNN,X",
"18842":"$70: ??? Error/Unknown  | 1 | {Empty}",
"18843":"$72: INC Zero-Page [ZP] | 2 | $NN",
"18844":"$74: NOP Implied        | 1 | {Empty}",
"18845":"$76: INC Absolute       | 3 | $NNNN",
"18846":"$78: ??? Error/Unknown  | 1 | {Empty}",
"18847":"$7A: INC Zero-Page,X    | 2 | $NN,X",
"18848":"$7C: ??? Error/Unknown  | 1 | {Empty}",
"18849":"$7E: INC Absolute,X     | 3 | $NNNN,X",
"18850":"$80: *** Zero-Page [ZP] | 2 | $NN",
"18851":"$82: *** Absolute       | 3 | $NNNN",
"18852":"$84: *** Zero-Page,X    | 2 | $NN,X",
"18853":"$86: *** Absolute,X     | 3 | $NNNN,X",
"18854":"Error/Unknown  | 1 | {MT}[All are NOP\u0027s]",
"18855":"Immediate      | 2 | #$NN",
"18856":"Zero-Page [ZP] | 2 | $NN",
"18857":"Absolute       | 3 | $NNNN",
"18858":"Implied        | 1 | {Empty} [\u0026 $EA=NOP]",
"18859":"Accumulator    | 1 | {Empty}",
"18860":"(Zero-Page,X)  | 2 | ($NN,X) [NDXD-NDRCT]",
"18861":"(Zero-Page),Y  | 2 | ($NN),Y [NDRCT-NDXD]",
"18862":"Zero-Page,X    | 2 | $NN,X",
"18863":"Absolute,X     | 3 | $NNNN,X",
"18864":"Absolute,Y     | 3 | $NNNN,Y",
"18865":"(Indirect)  *1 | 3 | JMP (Absolute)",
"18866":"Zero-Page,Y *2 | 2 | LDX ZP,Y \u0026 STX ZP,Y",
"18867":"Relative       | 2 | $NN",
"18868":"ASCII \",\"",
"18869":"ASCII \")\"",
"18870":"ASCII \",\"",
"18871":"ASCII \"#\"",
"18872":"ASCII \"(\"",
"18873":"ASCII \"$\"",
"18874":"ASCII \"Y\"",
"18875":"VALUE \"0\"",
"18876":"ASCII \"X\"",
"18877":"ASCII \"$\"",
"18878":"ASCII \"$\"",
"18879":"VALUE \"0\"",
"18880":"(A) BRK: %00011=B; %10011=R; %01100=K",
"18881":"(A) PHP: %10001=P; %01001=H; %10001=P",
"18882":"(A) BPL: %00011=B; %10001=P; %01101=L",
"18883":"(A) CLC: %00100=C; %01101=L; %00100=C",
"18884":"(A) JSR: %01011=J; %10100=S; %10011=R",
"18885":"(A) PLP: %10001=P; %01101=L; %10001=P",
"18886":"(A) BMI: %00011=B; %01110=M; %01010=I",
"18887":"(A) SEC: %10100=S; %00110=E; %00100=C",
"18888":"(A) RTI: %10011=R; %10101=T; %01010=I",
"18889":"(A) PHA: %10001=P; %01001=H; %00010=A",
"18890":"(A) BVC: %00011=B; %10111=V; %00100=C",
"18891":"(A) CLI: %00100=C; %01101=L; %01010=I",
"18892":"(A) RTS: %10011=R; %10101=T; %10100=S",
"18893":"(A) PLA: %10001=P; %01101=L; %00010=A",
"18894":"(A) BVS: %00011=B; %10111=V; %10100=S",
"18895":"(A) SEI: %10100=S; %00110=E; %01010=I",
"18896":"(A) ???: %00000=?; %00000=?; %00000=?",
"18897":"(A) DEY: %00101=D; %00110=E; %11010=Y",
"18898":"(A) BCC: %00011=B; %00100=C; %00100=C",
"18899":"(A) TYA: %10101=T; %11010=Y; %00010=A",
"18900":"(A) LDY: %01101=L; %00101=D; %11010=Y",
"18901":"(A) TAY: %10101=T; %00010=A; %11010=Y",
"18902":"(A) BCS: %00011=B; %00100=C; %10100=S",
"18903":"(A) CLV: %00100=C; %01101=L; %10111=V",
"18904":"(A) CPY: %00100=C; %10001=P; %11010=Y",
"18905":"(A) INY: %01010=I; %01111=N; %11010=Y",
"18906":"(A) BNE: %00011=B; %01111=N; %00110=E",
"18907":"(A) CLD: %00100=C; %01101=L; %00101=D",
"18908":"(A) CPX: %00100=C; %10001=P; %11001=X",
"18909":"(A) INX: %01010=I; %01111=N; %11001=X",
"18910":"(A) BEQ: %00011=B; %00110=E; %10010=Q",
"18911":"(A) SED: %10100=S; %00110=E; %00101=D",
"18912":"(B) ???: %00000=?; %00000=?; %00000=?",
"18913":"(B) BIT: %00011=B; %01010=I; %10101=T",
"18914":"(B) JMP: %01011=J; %01110=M; %10001=P",
"18915":"(B) JMP: %01011=J; %01110=M; %10001=P",
"18916":"(B) STY: %10100=S; %10101=T; %11010=Y",
"18917":"(B) LDY: %01101=L; %00101=D; %11010=Y",
"18918":"(B) CPY: %00100=C; %10001=P; %11010=Y",
"18919":"(B) CPX: %00100=C; %10001=P; %11001=X",
"18920":"(C) TXA: %10101=T; %11001=X; %00010=A",
"18921":"(C) TXS: %10101=T; %11001=X; %10100=S",
"18922":"(C) TAX: %10101=T; %00010=A; %11001=X",
"18923":"(C) TSX: %10101=T; %10100=S; %11001=X",
"18924":"(C) DEX: %00101=D; %00110=E; %11001=X",
"18925":"(C) ???: %00000=?; %00000=?; %00000=?",
"18926":"(C) NOP: %01111=N; %10000=O; %10001=P",
"18927":"(C) ???: %00000=?; %00000=?; %00000=?",
"18928":"(D) ASL: %00010=A; %10100=S; %01101=L",
"18929":"(D) ROL: %10011=R; %10000=O; %01101=L",
"18930":"(D) LSR: %01101=L; %10100=S; %10011=R",
"18931":"(D) ROR: %10011=R; %10000=O; %10011=R",
"18932":"(D) STX: %10100=S; %10101=T; %11001=X",
"18933":"(D) LDX: %01101=L; %00101=D; %11001=X",
"18934":"(D) DEC: %00101=D; %00110=E; %00100=C",
"18935":"(D) INC: %01010=I; %01111=N; %00100=C",
"18936":"(E) ORA: %10000=O; %10011=R; %00010=A",
"18937":"(E) AND: %00010=A; %01111=N; %00101=D",
"18938":"(E) EOR: %00110=E; %10000=O; %10011=R",
"18939":"(E) ADC: %00010=A; %00101=D; %00100=C",
"18940":"(E) STA: %10100=S; %10101=T; %00010=A",
"18941":"(E) LDA: %01101=L; %00101=D; %00010=A",
"18942":"(E) CMP: %00100=C; %01110=M; %10001=P",
"18943":"(E) SBC: %10100=S; %00011=B; %00100=C",
"18944":"(A) BRK: %00011=B; %10011=R; %01100=K",
"18945":"(A) PHP: %10001=P; %01001=H; %10001=P",
"18946":"(A) BPL: %00011=B; %10001=P; %01101=L",
"18947":"(A) CLC: %00100=C; %01101=L; %00100=C",
"18948":"(A) JSR: %01011=J; %10100=S; %10011=R",
"18949":"(A) PLP: %10001=P; %01101=L; %10001=P",
"18950":"(A) BMI: %00011=B; %01110=M; %01010=I",
"18951":"(A) SEC: %10100=S; %00110=E; %00100=C",
"18952":"(A) RTI: %10011=R; %10101=T; %01010=I",
"18953":"(A) PHA: %10001=P; %01001=H; %00010=A",
"18954":"(A) BVC: %00011=B; %10111=V; %00100=C",
"18955":"(A) CLI: %00100=C; %01101=L; %01010=I",
"18956":"(A) RTS: %10011=R; %10101=T; %10100=S",
"18957":"(A) PLA: %10001=P; %01101=L; %00010=A",
"18958":"(A) BVS: %00011=B; %10111=V; %10100=S",
"18959":"(A) SEI: %10100=S; %00110=E; %01010=I",
"18960":"(A) ???: %00000=?; %00000=?; %00000=?",
"18961":"(A) DEY: %00101=D; %00110=E; %11010=Y",
"18962":"(A) BCC: %00011=B; %00100=C; %00100=C",
"18963":"(A) TYA: %10101=T; %11010=Y; %00010=A",
"18964":"(A) LDY: %01101=L; %00101=D; %11010=Y",
"18965":"(A) TAY: %10101=T; %00010=A; %11010=Y",
"18966":"(A) BCS: %00011=B; %00100=C; %10100=S",
"18967":"(A) CLV: %00100=C; %01101=L; %10111=V",
"18968":"(A) CPY: %00100=C; %10001=P; %11010=Y",
"18969":"(A) INY: %01010=I; %01111=N; %11010=Y",
"18970":"(A) BNE: %00011=B; %01111=N; %00110=E",
"18971":"(A) CLD: %00100=C; %01101=L; %00101=D",
"18972":"(A) CPX: %00100=C; %10001=P; %11001=X",
"18973":"(A) INX: %01010=I; %01111=N; %11001=X",
"18974":"(A) BEQ: %00011=B; %00110=E; %10010=Q",
"18975":"(A) SED: %10100=S; %00110=E; %00101=D",
"18976":"(B) ???: %00000=?; %00000=?; %00000=?",
"18977":"(B) BIT: %00011=B; %01010=I; %10101=T",
"18978":"(B) JMP: %01011=J; %01110=M; %10001=P",
"18979":"(B) JMP: %01011=J; %01110=M; %10001=P",
"18980":"(B) STY: %10100=S; %10101=T; %11010=Y",
"18981":"(B) LDY: %01101=L; %00101=D; %11010=Y",
"18982":"(B) CPY: %00100=C; %10001=P; %11010=Y",
"18983":"(B) CPX: %00100=C; %10001=P; %11001=X",
"18984":"(C) TXA: %10101=T; %11001=X; %00010=A",
"18985":"(C) TXS: %10101=T; %11001=X; %10100=S",
"18986":"(C) TAX: %10101=T; %00010=A; %11001=X",
"18987":"(C) TSX: %10101=T; %10100=S; %11001=X",
"18988":"(C) DEX: %00101=D; %00110=E; %11001=X",
"18989":"(C) ???: %00000=?; %00000=?; %00000=?",
"18990":"(C) NOP: %01111=N; %10000=O; %10001=P",
"18991":"(C) ???: %00000=?; %00000=?; %00000=?",
"18992":"(D) ASL: %00010=A; %10100=S; %01101=L",
"18993":"(D) ROL: %10011=R; %10000=O; %01101=L",
"18994":"(D) LSR: %01101=L; %10100=S; %10011=R",
"18995":"(D) ROR: %10011=R; %10000=O; %10011=R",
"18996":"(D) STX: %10100=S; %10101=T; %11001=X",
"18997":"(D) LDX: %01101=L; %00101=D; %11001=X",
"18998":"(D) DEC: %00101=D; %00110=E; %00100=C",
"18999":"(D) INC: %01010=I; %01111=N; %00100=C",
"19000":"(E) ORA: %10000=O; %10011=R; %00010=A",
"19001":"(E) AND: %00010=A; %01111=N; %00101=D",
"19002":"(E) EOR: %00110=E; %10000=O; %10011=R",
"19003":"(E) ADC: %00010=A; %00101=D; %00100=C",
"19004":"(E) STA: %10100=S; %10101=T; %00010=A",
"19005":"(E) LDA: %01101=L; %00101=D; %00010=A",
"19006":"(E) CMP: %00100=C; %01110=M; %10001=P",
"19007":"(E) SBC: %10100=S; %00011=B; %00100=C",
"19008":"Save (A) in Accumulator Safe",
"19010":"Pull Processor Status from Top of STACK",
"19011":"Restore STACK Top: Push Processor Status",
"19012":"Shift Break Flag (Bit 4)",
"19013":"over into the",
"19014":"Negative Flag (Bit 7)",
"19015":"Branch if Break Flag (Bit 4) was Set",
"19017":"Else, Go to (User Routine Vector) in RAM",
"19020":"Retrieve Processor Status",
"19021":"Save All 6502 Registers",
"19024":"Pull Program Counter, Low",
"19025":"Save in Program Counter Safe, Low",
"19027":"Pull Program Counter, High",
"19028":"Save in Program Counter Safe, High",
"19030":"BRKV is Set to OLDBRK by Disk Bootup",
"19033":"New Monitor \u003c\u003e Old Monitor \"XBRK\"",
"19036":"Print User Program Counter \u0026 Registers",
"19039":"Go to Monitor",
"19042":"Do this 1st this time;",
"19043":"Set Normal Video Mode \u0026 ...",
"19046":"Init Keyboard \u0026 Screen as I/O Devices",
"19049":"Reset CSW Output Vector to COUT1 \u003c--+/",
"19052":"Reset KSW Input Vector to KEYIN \u003c--+/",
"19055":" Turn OFF: AN0",
"19058":" Turn OFF: AN1",
"19061":" Turn  ON: AN2",
"19064":" Turn  ON: AN3",
"19067":"Tell slots to disable their extension ROM",
"19070":"Clear KBD Strobe (KBD\u003c128)",
"19073":"[As opposed to the Old MON @ $FF65]",
"19074":"BELL Causes Delay if Key Bounces",
"19077":"Soft Entry (Warm Start) Vector, High",
"19080":"PWREDUP must equal [(SOFTEV+1)EOR #$A5]",
"19082":"Power-Up Reset CHKSUM",
"19085":"Not Equal, so in a Power-Up Reset cycle",
"19087":"Equal, so has Cold Start been done yet?",
"19090":"Cold Start done, so don\u0027t reset SOFTEV",
"19092":"Soft/Warm/Ctrl-C Entry Point, High",
"19094":"Soft Entry (Warm Start) Vector",
"19097":"Cold Start done, so don\u0027t reset SOFTEV",
"19099":"Soft/Warm/Ctrl-C Entry Point, Low",
"19101":"Set Adrs of Reset Handler to Warm Start",
"19104":"Cold Start BASIC (Reinitialize)",
"19107":"Go to Soft Entry (Warm Start) Address",
"19110":"Display \"Apple ][\"",
"19113":"Number of bytes to copy",
"19115":"Get Page 3 Vectors",
"19118":"Set Page 3 Vectors",
"19122":"Loop until X=0",
"19124":"Load High Slot (7) Page Address ($C7) + 1",
"19126":"Set Poiter, Low; X=0",
"19128":"Set Poiter, High; (for JMP @ $FAD2 below)",
"19130":"Y is Byte Pointer",
"19132":"Decrement Slot Page Address",
"19134":"Get Slot Page Address for comparison",
"19136":"Down to last Slot yet?",
"19138":"YES, it can\u0027t be a disk; Cold Start BASIC",
"19140":"NO, Save current Slot Page Address",
"19143":"Fetch a Slot Byte",
"19145":"Is it a Disk?",
"19148":"NO, so next Slot down",
"19150":"Skip over $FF bytes; See DISKID below",
"19151":"YES, so check next byte ...",
"19152":"Until 4 checked",
"19154":"Go there",
"19157":"Fill",
"19158":"Fuller ;-)",
"19159":"Print Carriage Return (Ctrl-M) Character",
"19162":"A-Reg Safe (Accumulator)",
"19164":"Save ACC/A5H-Reg Address in A3-Reg",
"19166":"ACC/A5H-Reg is a Zero Page Address",
"19168":"Monitor General Purpose A3-Reg, High",
"19170":"Load Index (-5)",
"19172":"Print a Space character",
"19174":"Print A-Reg to Output Device",
"19177":"^\"AXYPS\"; 6502 Registers (Letter-Names)",
"19180":"Print A-Reg to Output Device",
"19183":"Print an Equal-Sign character",
"19185":"Print A-Reg to Output Device",
"19188":"6502 Registers Safe (Save Locations)+5",
"19190":"Print A-Reg as Two-Digit Hex Number",
"19193":"Count UP",
"19194":"Loop until all 5 6502 Reg\u0027s are displayed",
"19196":"**; Return to Caller",
"19197":"To Set New BRK Vector (BRKV)",
"19199":"To Set Soft Entry Vector (SOFTEV)",
"19201":"To Set Powered-Up Flag",
"19202":"20/00/03/3C is controller signature (**)",
"19203":"$FFs are Skipped over; See NXTBYT above",
"19204":"** See DISK2ROM..MKDCTBL @ $C600..$C606",
"19205":"$FF bytes are substitutes for OpCodes",
"19206":"that would otherwise make this data into",
"19207":"functional code identical to the first 7",
"19208":"bytes of code on the disk drive control-",
"19209":"High ASCII \"APPLE ][\"",
"19217":"High ASCII ($C4 = 196) \"D\"",
"19218":"High ASCII ($C2 = 194) \"B\"",
"19219":"High ASCII ($C1 = 193) \"A\"",
"19220":"High ASCII ($FF = 255) \"Delete\"",
"19221":"High ASCII ($C3 = 195) \"C\"",
"19222":"High ASCII ($FF = 255) \"Delete\"",
"19223":"High ASCII ($FF = 255) \"Delete\"",
"19224":"High ASCII ($FF = 255) \"Delete\"",
"19225":"6502 Accumulator Register",
"19226":"6502 X-Index Register",
"19227":"6502 Y-Index Register",
"19228":"6502 Processor Status Register",
"19229":"6502 Stack Pointer Register",
"19230":"~($C07X)[R/W]; Trigger/Reset All Paddles",
"19233":"Initialize Time-Counter",
"19235":"Compensate for First Time-Count: Do zip",
"19236":"for (2 NOPs)*(2 cycles/NOP)=4 cycles",
"19237":"Read Paddle (X-Reg)",
"19240":"Timed-Out if (A) is positive [0\u003c=(A)\u003c128]",
"19242":"Count UP (Y) every 12 microseconds",
"19243":"Exit at (Y=0) for a Max Count of 255",
"19245":"*: Return Last Time-Count in (Y)",
"19246":"* [Time=~(Y)*12us]; Return to Caller",
"19247":"Clear Acc for Screen Initialization:",
"19249":"Save Status Register in P-Reg Safe",
"19251":"Reset HiRes Mode to LoRes/Text Mode",
"19254":"Display Text Page1; R/W Main V-RAM",
"19257":"Set Screen to Text Mode",
"19260":"Clear Accumulator (Again)",
"19262":"Always Taken",
"19264":"Set Screen to Graphics Mode",
"19267":"Set Mixed Graphics \u0026 Text Mode",
"19270":"Clear Top (40 Lines on) Lo-Res Screen",
"19273":"Normal Mixed Graphics \u0026 Text Window Top",
"19275":"Set Top of Scroll Window",
"19277":"Normal Lo-Res/Text Window Left",
"19279":"Set Left Column of Scroll Window",
"19281":"Normal Lo-Res/Text Window Width",
"19283":"Set Width of Scroll Window",
"19285":"Normal Lo-Res/Text Window Bottom",
"19287":"Set Bottom of Scroll Window",
"19289":"Normal Text Window Bottom Line Number",
"19291":"Place Cursor at Line (A) \u0026 Column (CH) ",
"19293":"TAB to ROW specified in (A)",
"19296":"Clear Text Display \u0026 Home Cursor",
"19299":"Prepare to Display 8 Title Characters",
"19301":"Get a Title Character to Display",
"19304":"Put a Title Character in Display Memory",
"19307":"Reduce Loop Character Counter",
"19308":"Loop until all Title Characters Displayed",
"19310":"Return to Caller",
"19311":"Get Soft Entry (Warm Start) Vector, High",
"19314":"Compute: [(SOFTEV+1)EOR #$A5]",
"19316":"Power-Up Reset CHKSUM",
"19319":"Return to Caller",
"19320":"Is (A)=(Carriage Return)?",
"19322":"NO, Do Not Wait",
"19324":"YES, Has a Key been Pressed?",
"19327":"NO, Do Not Wait",
"19329":"YES, was it a Ctrl+S Character?",
"19331":"NO, Do Not Wait",
"19333":"YES, Clear KBD Strobe (Make KBD\u003c128)",
"19336":"Wait until next Key to Resume",
"19339":"Loop, Wait for Keypress",
"19341":"Key Pressed, was it a Ctrl+C Character?",
"19343":"YES, Do Not Wait",
"19345":"NO, Clear KBD Strobe (Make KBD\u003c128)",
"19348":"\u0026 Do as Before",
"19351":"Prepare for Add with Carry Set (Adds 1)",
"19352":"Handle Escape Character",
"19355":"Use Character as Index",
"19356":"Translate (I|J|K|M) to (C|B|A|D)",
"19359":"Do Cursor Motion",
"19362":"\u0026 Get in (A) \u0026 Make Cursor Char Flash",
"19365":"Was it an \"N\" Character?",
"19367":"YES, \"N\" or Greater, Do it",
"19369":"Was it an \"I\" Character?",
"19371":"YES, \"I\" or Less, Do it",
"19373":"Was it an \"L\" Character?",
"19375":"YES, Do it",
"19377":"Loop: Handle New Character; Always Taken",
"19379":"14 NOP Bytes . . .",
"19381":"This space could be used",
"19382":"by anyone if this were in",
"19383":"LC RAM instead of MB ROM!",
"19385":"This space (FBB3-FBBE) is used",
"19386":"in the Apple IIE Autostart ROM",
"19391":"(Not Used Yet)",
"19392":"(Not Used Yet)",
"19393":"Push Line Number Specified [%000ABCDE]",
"19394":"Shift %000ABCDE-\u003e%0000ABCD \u0026 %E-\u003e(C)**",
"19395":"Generate %000000CD",
"19397":"Generate %000001CD",
"19399":"Set Text Base Address, High [Pages 4~7]",
"19401":"Pull Line Number Specified [%000ABCDE]",
"19402":"Generate %000AB000",
"19404":"Branch if %E-\u003e(C=0)**; Skip Next (Add):",
"19406":"Else, Add [$7F+(C=1)=$80]-\u003e[%100AB000]**",
"19408":"Set Text Base Address, Low [%E00AB000]",
"19410":"[(A)=(A*2)]: Generate %00AB0000",
"19411":"[(A)=(A*2)]: Generate %0AB00000",
"19412":"Generate %EABAB000=[%0AB00000|%E00AB000]",
"19414":"Set Text Base Address, Low [%EABAB000]",
"19416":"Return to Caller",
"19417":"Is (A) a Bell (Cntrl-G) Character?",
"19419":"NO, Return to Caller",
"19421":"Delay .01 Second",
"19423":"Delay (26+27*Acc+5*(Acc*Acc))/2 Cycles",
"19426":"Toggle Speaker at 1 Khz for .1 Second",
"19428":"Toggle Speaker at 1 Khz for (Y) Time",
"19430":"Delay (26+27*Acc+5*(Acc*Acc))/2 Cycles",
"19433":"Toggle Speaker Output",
"19436":"Reduce Loop Counter",
"19437":"Loop Until Done",
"19439":"Return to Caller",
"19440":"Set Y-Index to Cursor Horizontal (CH)",
"19442":"Put Char (A) in (Base Adrs) Line at (CH)",
"19444":"Advance Cursor Horizontal (Move Right)",
"19446":"Get Cursor Horizontal",
"19448":"Is Cursor Horizontal past Window Width?",
"19450":"YES, Return Cursor (CR) to Next Line",
"19452":"NO, Return to Caller",
"19453":"Is (A) a Control Character [$80~$9F]?",
"19455":"BGE: NO, Output Char (A) as Text ",
"19457":"YES; Is Ctrl-Char an Inverse Video Char?",
"19458":"YES, Output Inverse Video Character",
"19460":"NO; Is Ctrl-Char a Carriage Return (CR)?",
"19462":"YES, Return Cursor (CR) to Next Line",
"19464":"NO; Is Ctrl-Char a Line Feed?",
"19466":"If YES, Go Do a Line Feed",
"19468":"NO; Is Ctrl-Char a Back Space (Ctrl-H)?",
"19470":"NO; Go Check if it is a BELL (Ctrl-G)?",
"19472":"Reduce Cursor Horizontal",
"19474":"If Positive, Return to Caller; Else:",
"19476":"Get Width of Scroll Window",
"19478":"Set Cursor Horizontal (CH=WNDWDTH)",
"19480":"Reduce Cursor Horizontal (CH=CH-1)",
"19482":"Get Top of Scroll Window",
"19484":"Is Cursor Vertical (CV) at Top of Window?",
"19486":"If at Top Line, Return to Caller",
"19488":"Else, Reduce Cursor Vertical (CV=CV-1)",
"19490":"Get Cursor Vertical",
"19492":"Generate Base Address",
"19495":"Add Left Column of Scroll Window",
"19497":"Set Base Address, Low",
"19499":"Return to Caller",
"19500":"Is Char (A)=(\"@\")?",
"19502":"Branch if Esc+@, Do Home \u0026 Clear",
"19504":"Is Char (A)=(\"A\"|\"B\")?  [Adds (C=1)]",
"19506":"Branch if Esc+A, Advance",
"19508":"Branch if Esc+B, Backspace",
"19510":"Is Char (A)=(\"C\"|\"D\")?  [Adds (C=1)]",
"19512":"Branch if Esc+C, Down",
"19514":"Branch if Esc+D, Up",
"19516":"Is Char (A)=(\"E\"|\"F\")?  [Adds (C=1)]",
"19518":"Branch if Esc+E, Clear to End of Line",
"19520":"Branch if Not Esc+F, Return to Caller",
"19522":"Get Cursor Horizontal (CH)",
"19524":"Get Cursor  Vertical  (CV)",
"19526":"Push Current Line (Save on STACK)",
"19527":"Set Base Address (Updates BASL)",
"19530":"Clear to End of Line (EOL) \u0026 Set Carry",
"19533":"Clear from Line Left End (CH=0) for Rest",
"19535":"Pull Current Line (Retrieve from STACK)",
"19536":"Advance Current Line  [Adds (C=1)]",
"19538":"Cleared to Bottom of Window?",
"19540":"NO, Keep Clearing Lines",
"19542":"YES, Tab to Current Line; Always Taken",
"19544":"Get Top of Scroll Window",
"19546":"Set Cursor  Vertical  (CV)",
"19548":"Clear Y-Index Register",
"19550":"Clear Cursor Horizontal (CH)",
"19552":"Clear to End of Page; Always Taken",
"19554":"Clear Accumulator",
"19556":"Clear Cursor Horizontal to Start of Line",
"19558":"Advance Cursor Verical  to Next Line",
"19560":"Get Cursor Verical [Now Line # (0~23)]",
"19562":"Is Cursor Vertical Off Screen (CV\u003e23)?",
"19564":"NO, Set Base Address (Updates BASL)",
"19566":"YES, Reduce Cursor Vertical to Bottom",
"19568":"Start at Top of Scroll Window",
"19570":"Push Scroll Window Top (Save on STACK)",
"19571":"Set Base Address (Updates BASL)",
"19574":"Get Base Address (1), Low",
"19576":"Set Base Address Two, Low",
"19578":"Get Base Address (1), High",
"19580":"Set Base Address Two, High",
"19582":"Get Window Width",
"19584":"Reduce to Rightmost Scroll Window Column",
"19585":"Pull Scroll Window Top (Retrieve STACK)",
"19586":"Advance Scroll Window Top (Now Line #)",
"19588":"Reached Bottom of Scroll Window, Done?",
"19590":"BGE [Exit Loop]: YES, Go Finish Up",
"19592":"NO, Push Scroll Window Top (Now Line #)",
"19593":"Set Base Address (Updates BASL)",
"19596":"Get Character (on Now Line #) to Move Up",
"19598":"Move Up: Set Character (on Now Line # -1)",
"19600":"Reduce Column [Going from Right to Left]",
"19601":"Move Up: Next Characater",
"19603":"Scroll Up: Next Line; Always Taken",
"19605":"Clear (Indirect Addressing),Y-Index for:",
"19607":"Clear to End of Line \u0026 Set Carry",
"19610":"Always Taken",
"19612":"Get Cursor Horizontal Position",
"19614":"Get a Blank/Space Character to Fill with",
"19616":"Set Char (A) at Line (BASL), Column (Y)",
"19618":"Advance Column Counter",
"19619":"Has End of Line been reached?",
"19621":"BLT [Loop]: NO, Continue Filling Line",
"19623":"YES, Done Filling; Return to Caller",
"19624":"2: Prepare to Subtract w/o Borrow",
"19625":"3: Push Accumulator (Save on STACK)",
"19626":"2: Subtract w/o Borrow [A-Data-!C]",
"19628":"2+ Loop Until (A=0) [5 cycles/iteration]",
"19630":"4: Pull Accumulator (Retrieve from STACK)",
"19631":"2: Subtract w/o Borrow [A-Data-!C]",
"19633":"2+ Loop Until (A=0) [~5*(A)+12 cycles/it]",
"19635":"6: Return to Caller",
"19636":"Increment General Purpose A4-Reg, Low",
"19638":"Branch if Not yet up to Next Page",
"19640":"Increment General Purpose A4-Reg, High",
"19642":"Get General Purpose A1-Reg, Low",
"19644":"Subtract: (A)=(A1L-A2L)",
"19646":"Get General Purpose A1-Reg, High",
"19648":"Subtract: (A)=(A1H-A2H)",
"19650":"Increment General Purpose A1-Reg, Low",
"19652":"Branch if Not yet up to Next Page",
"19654":"Increment General Purpose A1-Reg, High",
"19656":"Return to Caller",
"19657":"Get Time Count for Zero-Bit Delay Loop",
"19659":"Write a Half-Cycle [Returns (Y=44)]",
"19662":"Branch Until Done \u003c-[when (X=0)]",
"19664":"Decrement (A) {Add w/ Carry [A+Data+C]}",
"19666":"BGE: Branch Until Done \u003c-[when (A=C=0)]",
"19668":"Get Time Count for Zero-Bit Delay Loop",
"19670":"Write a Half-Cycle [Returns (Y=44)]",
"19673":"Advance Time Count [Now (Y=Y+1=45)]",
"19674":"Advance Time Count [Now (Y=Y+2=46)]",
"19675":"Reduce Time Count for Zero-Bit Delay Loop",
"19676":"Loop Until Delay Period is Done \u003c-(Y=0)",
"19678":"Branch if Doing a Zero-Bit",
"19680":"Get Time Count for One-Bit Delay Loop",
"19682":"Reduce Time Count for One-Bit Delay Loop",
"19683":"Loop Until Delay Period is Done \u003c-(Y=0)",
"19685":"Toggle Audio Data Output [(Y)=(Unkown!)]",
"19688":"Return (Y=44) .. [Now (Y)=(Known Value)]",
"19690":"Reduce (X) Audio Half-Cycle Toggle Count",
"19691":"Return to Caller; [Final (A=$FF):{A2RM}]",
"19692":"Prepare to Read a Byte (8 Bits) from Tape",
"19694":"Push Accumulator (Save on STACK)",
"19695":"Read Two Transitions (Find Edge)",
"19698":"Pull Accumulator (Retrieve from STACK)",
"19699":"Next Bit; Shift Carry into (A) Low Bit",
"19700":"Count for RD2BIT/RDBIT Sampling (58~0)",
"19702":"Reduce Bit Count",
"19703":"Loop Until Done \u003c-(X=0)",
"19705":"Return to Caller",
"19706":"Read 1st of Two Voltage Transitions",
"19709":"Reduce (Y) Until Voltage Transitions",
"19710":"Read Cassette Tape Data Input",
"19713":"XOR with Last Input Voltage Detected",
"19715":"Loop Until a Voltage Change is Detected",
"19717":"XOR with Last Input Voltage Detected",
"19719":"Reset Last Input Voltage Detected",
"19721":"Set Carry on (Y):(58~0) becoming Negative",
"19723":"Return to Caller",
"19724":"Get Cursor Horizontal",
"19726":"Get Char at (BASL,H) Line \u0026 Column (Y=CH)",
"19728":"Push/Save Current Character at Cursor",
"19729":"Truncate Character to 6 Lower Bits",
"19731":"Set Bit 6 of Character to Make it Flash",
"19733":"Set Char at (BASL,H) Line \u0026 Column (Y=CH)",
"19735":"Pull/Retrieve Current Character at Cursor",
"19736":"Returns to Caller of RDKEY",
"19739":"Advance Keyin Random Counter Value, Low",
"19741":"Branch if High Advance Not Needed Yet",
"19743":"Advance Keyin Random Counter Value, High",
"19745":"Check Keyboard Input Reg for a Key Press",
"19748":"Branch if No Key has been Pressed",
"19750":"Store (A) at (BASL,H) Line \u0026 Column (Y)",
"19752":"Read Keyboard Input Reg; Get Key Pressed",
"19755":"Clear KBD Strobe (KBD\u003c128) for Next Key",
"19758":"Return to Caller",
"19759":"Get in (A) \u0026 Make Cursor Character Flash",
"19762":"Handle Escape Character [Doesn\u0027t Return!]",
"19765":"Get in (A) \u0026 Make Cursor Character Flash",
"19768":"Is it The Escape Character?",
"19770":"YES, Handle The Escape Character",
"19772":"NO, Return to Caller",
"19773":"Get Current Setting of INVFLG (Text-Mask)",
"19775":"Push/Save Setting of INVFLG",
"19776":"Get Normal-Text Text-Mask Value",
"19778":"Set Invers Flag/Mask to Normal-Text Value",
"19780":"Get Character of Interest as Normal-Text",
"19783":"Print Char of Interest as Normal-Text",
"19786":"Pull/Retrieve Prior Setting of INVFLG",
"19787":"Restore Current Setting of INVFLG",
"19789":"Get Character of Interest as was before",
"19792":"Is it a Ctrl-H: Backspace?",
"19794":"Branch if it\u0027s a Backspace",
"19796":"Is it a Ctrl-X: Cancelation?",
"19798":"Branch if it\u0027s a Cancelation",
"19800":"Is Character Pointer Near End of INBUFF?",
"19802":"Branch if Not Near End of INBUFF",
"19804":"Else, Sound Bell, Warn: Near INBUFF End",
"19807":"Advance to Next Character of Interest",
"19808":"Branch if Not at Input Buffer End ($0300)",
"19810":"Terminate Input w/ Backslash [Ctrl+X|EOL]",
"19812":"Print the Terminal Backslash [)-:RIP:-(]",
"19815":"Print Carriage Return (Ctrl-M) Character",
"19818":"Get Command Prompt Character",
"19820":"Print Command Prompt Character",
"19823":"Point to Start of Input Buffer +1",
"19825":"Get Current Ptr to Character of Interest",
"19826":"Branch if Char Ptr is at INBUFF Zero|End",
"19828":"Else, Retreat to Prior Char of Interest",
"19829":"Read Current Cursor Character into (A)",
"19832":"Is it a Right-Arrow [Ctrl-U (NAK)]?",
"19834":"Branch if NOT Right-Arrow [Ctrl-U (NAK)]",
"19836":"Get Char at (BASL,H) Line \u0026 Column (Y)",
"19838":"What is the Upper/Lower Case of Char (A)?",
"19840":"BLT: Branch if Uppercase",
"19842":"Else, GE: Change Lowercase to Uppercase",
"19844":"Set it in Input Line (to Uppercase)",
"19847":"Is it a Carriage Return (Ctrl-M) Char?",
"19849":"Branch if Not a Carriage Return (Ctrl-M)",
"19851":"Else, it\u0027s a CR, Clear to End of Line",
"19854":"Get a Carriage Return (Ctrl-M) Character",
"19856":"Print (A) to Output Device; Always Taken",
"19858":"Get General Purpose A1-Reg, High",
"19860":"Get General Purpose A1-Reg, Low",
"19862":"Print Carriage Return (Ctrl-M) Character",
"19865":"Print 16-Bit Integer [(Y,X)={High,Low}]",
"19868":"Clear Y-Index Register",
"19870":"Get a Dash",
"19872":"Print the Dash",
"19875":"Get Monitor General Purpose A1-Reg, Low",
"19877":"Get [(A1)OR(#7)]-\u003e[(A1)MOD(8 Bytes)]",
"19879":"Set Monitor General Purpose A2-Reg, Low",
"19881":"Get Monitor General Purpose A1-Reg, High",
"19883":"Set Monitor General Purpose A2-Reg, High",
"19885":"Get Monitor General Purpose A1-Reg, Low",
"19887":"[(A1)\u0026(#7)]-\u003e[(A1)MOD(8 Bytes)] = Zero?",
"19889":"Branch if NOT at 1st of Mem Mod 8 Bytes",
"19891":"Else, Print Memory Address \u0026 a Dash, 1st",
"19894":"Get a Space Char to Print (between parts)",
"19896":"Print A-Reg to Output Device",
"19899":"Get a Memory Byte (1 of \u003c= 8 in Sequence)",
"19901":"Print A-Reg as Two-Digit Hex Number",
"19904":"Increment A1 \u0026 Compare to A2",
"19907":"BLT: Branch if (A1) has NOT Reached (A2)",
"19909":"Return to Caller",
"19910":"Shift (A*):LSB into Carry Flag",
"19911":"Branch if [A*:Bit 0 was 0]; Do XAM",
"19913":"Shift LSB into Carry Flag (Discarded)",
"19914":"Shift LSB into Carry Flag",
"19915":"Get Monitor General Purpose A2-Reg, Low",
"19917":"Branch if [A*:Bit 2 was 0]; Do ADD (Plus)",
"19919":"Negate (A) \u003c-[from (A2L)]",
"19921":"(A) = (A1L) + [{+|-}(A)\u003c-(A2L)] + (C=1)",
"19923":"Push Result",
"19924":"Print \"=\", then Result:",
"19926":"Print (A) to Output Device",
"19929":"Pull Result",
"19930":"Push Accumulator (A); Save on STACK",
"19931":"Shift High Nibble",
"19932":"... to Low Nibble",
"19933":"These 4 Shifts also Clear High Nibble",
"19934":"Now Low Nibble is what High Nibble was",
"19935":"Print Hi-Digit in Lo-Nibble as Hex Number",
"19938":"Pull Accumulator (A); Retrieve from STACK",
"19939":"Mask Off High Nibble \u0026 Keep Low Nibble",
"19941":"Assure Byte is Hex Number Chr [0~9 \u0026 A~F]",
"19943":"Assure Byte is Dec Number Chr [0~9]\u003c(\":\")",
"19945":"Print # Now if Dec Number Chr [0~9]\u003c(\":\")",
"19947":"Else Assure Letter [A~F]\u003e=[(\":\")+6+(C=1)]",
"19949":"Print Accumulator (A) to Output Device",
"19952":"Is Char (A) a Ctrl-Char or Printable?",
"19954":"BLT: Don\u0027t Output Ctrl Chars as Inverse",
"19956":"Text Mask (Normal=$FF|Flash=$7F|Inv=$3F)",
"19958":"Save Y-Reg",
"19960":"Push/Save A-Reg",
"19961":"Go Check for Pause (Ctrl-S)",
"19964":"Pull/Retrieve A-Reg",
"19965":"Retrieve Y-Reg",
"19967":"Return to Caller",
"19968":"Reduce Monitor Command Processing Value",
"19970":"Branch if MCPV is Zero; Do Memory Dump",
"19972":"Reduce X-Index Register Value",
"19973":"Branch if (X\u003c\u003e0); Save Token as Mode",
"19975":"Are we in Data-Store/Fill-Memory Mode?",
"19977":"NO, Do: \"Examine|Add|Subtract Mode?\"",
"19979":"YES, Save \":\" Token as Mode",
"19981":"Get Monitor General Purpose A2-Reg, Low",
"19983":"Set (A3-Reg),Y",
"19985":"Up Monitor General Purpose A3-Reg, Low",
"19987":"Branch if No Carryover, yet",
"19989":"Up Monitor General Purpose A3-Reg, High",
"19991":"Return to Caller",
"19992":"Get Index for Monitor Command Processing",
"19994":"Get Command Token from Input Buffer",
"19997":"Save Command Token as Monitor Mode",
"19999":"Return to Caller",
"20000":"Get Index to do High Bytes 1st",
"20002":"Get Monitor General Purpose A2-Reg, Hi/Lo",
"20004":"5et Monitor General Purpose A4-Reg, Hi/Lo",
"20006":"5et Monitor General Purpose A5-Reg, Hi/Lo",
"20008":"Reduce Index to do Low Bytes Last",
"20009":"Loop Once to do Low Bytes Last",
"20011":"Then, Return to Caller",
"20012":"Get Byte at Source Address (A1)",
"20014":"Set Byte at Destination Address (A4)",
"20016":"Increment General Purpose A4 \u0026 A1 Regs",
"20019":"BLT: Branch if A1 has NOT Reached A2",
"20021":"Return to Caller",
"20022":"Get Byte at Source Address (A1)",
"20024":"Compare Byte at Destination Address (A4)",
"20026":"Branch if Both are Identical; Do Next",
"20028":"Print Memory Address",
"20031":"Get Byte at Source Address (A1)",
"20033":"Print A-Reg as Two-Digit Hex Number",
"20036":"Get a Space Character",
"20038":"Print Char (A) to Output Device",
"20041":"Get an Opening Parenthesis",
"20043":"Print Char (A) to Output Device",
"20046":"Get Byte at Destination Address (A4)",
"20048":"Print A-Reg as Two-Digit Hex Number",
"20051":"Get an Closing Parenthesis",
"20053":"Print Char (A) to Output Device",
"20056":"Increment General Purpose A4 \u0026 A1 Regs",
"20059":"BLT: Branch if A1 has NOT Reached A2",
"20061":"Return to Caller",
"20062":"Copy A1 (2 bytes) to PC if Specified",
"20065":"Prepare to Disassemble 20 Lines",
"20067":"Push Line Count",
"20068":"Disassemble \u0026 Print Instruction at PC",
"20071":"Add (A+C) to Instruction Address (PCL,H)",
"20074":"Save Updated Program Counter, Low",
"20076":"Save Updated Program Counter, High",
"20078":"Pull Line Count",
"20079":"Prepare to Subtract w/o Borrow [A-Data-!C]",
"20080":"Reduce Line Count",
"20082":"Loop Until Done: Disassembled 20 Lines",
"20084":"Return to Caller",
"20085":"Check Index to do High Bytes 1st",
"20086":"Return to Caller if (X) is Zero (\u003c1)",
"20088":"Get Monitor General Purpose A1-Reg, Hi/Lo",
"20090":"5et Monitor General Purpose PC-Reg, Hi/Lo",
"20092":"Reduce Index to do Low Bytes Last",
"20093":"Loop Once to do Low Bytes Last",
"20095":"Return to Caller",
"20096":"Get Text Mask (Invese=$3F)",
"20098":"Always Taken",
"20100":"Get Text Mask (Normal=$FF)",
"20102":"Set Text Mask",
"20104":"Return to Caller",
"20105":"Get Zero-Page Address of KSW, High (=0)",
"20107":"Set Monitor General Purpose A2-Reg, Low",
"20109":"Get Zero-Page Address of KSW, Low",
"20111":"Get Address of KEYIN, Low",
"20113":"Always Taken",
"20115":"Get Zero-Page Address of CSW, High (=0)",
"20117":"Set Monitor General Purpose A2-Reg, Low",
"20119":"Get Zero-Page Address of CSW, Low",
"20121":"Get Address of COUT1, Low",
"20123":"Get Monitor General Purpose A2-Reg, Low",
"20125":"Clear High Nibble \u0026 Keep Low Nibble",
"20127":"Branch if Result is Zero (Page/Slot)",
"20129":"Set to Slot I/O Addresses ($CS00), High",
"20131":"Clear Y-Index Register (Force Branch)",
"20133":"Always Taken",
"20135":"Get Mon Char I/O S/R Vectors Page Adrs",
"20137":"Set BASIC Soft/Warm/Ctrl-C Entry, Low",
"20139":"Set BASIC Soft/Warm/Ctrl-C Entry, High",
"20141":"Return to Caller",
"20142":"Fill",
"20143":"Fuller ;-)",
"20144":"Cold Start BASIC (\"Ctrl-B\")",
"20147":"Warm Start BASIC (\"Ctrl-C\")",
"20150":"Copy A1 (2 bytes) to PC if Specified",
"20153":"Restore (P), (A), (X), \u0026 (Y) Registers",
"20156":"Go to User Subroutine [(PCL,H)=($3A,$3B)]",
"20159":"Show (A), (X), (Y), (P), \u0026 (S) Registers",
"20162":"TRACE is Gone; This RTS is Not Used!",
"20163":"TRACE is now like USR (via CHRTBL)*",
"20164":"STEP is Gone; This RTS is Not Used!",
"20165":"STEP is now like USR (via CHRTBL)*",
"20166":"Now, the STEP (S) Command is the",
"20167":"same as the User (Ctrl-Y) Command",
"20168":"Do Nothing Else",
"20169":"*This whole S/T code block isn\u0027t used now!",
"20170":"JMP to Autostart User Vector (\"Ctrl-Y\")",
"20173":"Prep to Write [(A)*256] Half-Cycles",
"20175":"Write 10 second Header [10,649,600 usec]",
"20178":"Set Half-Cycle Duration Counter",
"20180":"Clear Indexed Indirect Addressing Index",
"20182":"Get (A)=(A)XOR(A1L) [1st Time (A=$FF)]",
"20184":"Push XOR Result (Running CheckSum)",
"20185":"Get a Memory Byte",
"20187":"Write 8 Bit Byte to Cassette Tape Record",
"20190":"Increment A1 \u0026 Compare to A2",
"20193":"Set Half-Cycle Duration Counter",
"20195":"Pull XOR Result (Running CheckSum)",
"20196":"BLT: Loop if A1 has NOT Reached A2",
"20198":"Set Half-Cycle Duration Counter",
"20200":"Write 8 Bit Byte to Cassette Tape Record",
"20203":"(X=0): Always Taken",
"20205":"Get (X) Audio Half-Cycle Toggle Count",
"20207":"Shift High Bit into Carry",
"20208":"Write a Bit [Returns: (X=X-2)]",
"20211":"Branch Until Done \u003c-[when (X=0)]",
"20213":"Return to Caller",
"20214":"Handle Carriage Return as a Blank",
"20217":"Pull/Discard Return Address, Low",
"20218":"Pull/Discard Return Address, High",
"20219":"Restart Monitor (\"*\" Prompt) Silently",
"20221":"Read Two Transitions (Find Edge)",
"20224":"Prep to Write [(A)*256] Half-Cycles",
"20226":"Write used to Delay about 3.5 seconds",
"20229":"Initialize CheckSum (A=$FF):[A2RM]",
"20231":"Read Two Transitions (Find Edge)",
"20234":"Set Half-Cycle Duration Counter",
"20236":"Read 1 Transition from Tape Record",
"20239":"BGE: Loop Until \u0027Short-0\u0027 Sync Bit Found",
"20241":"Skip Sync-Bit\u0027s 2nd Half-Cycle",
"20244":"Set Half-Cycle Duration Counter",
"20246":"Read 8 Bit Byte from Cassette Tape Record",
"20249":"Store Byte in Memory Range Specified",
"20251":"Compute New Running CheckSum",
"20253":"Save New Running CheckSum",
"20255":"Increment A1 \u0026 Compare to A2",
"20258":"Set Half-Cycle Duration Counter",
"20260":"BLT: Loop if A1 has NOT Reached A2",
"20262":"Read CheckSum Byte from Tape Record",
"20265":"Do the two CheckSums Match?",
"20267":"YES, Sound Bell \u0026 Return to Caller",
"20269":"Get 1st Letter Char to Print",
"20271":"Print A-Reg to Output Device",
"20274":"Get 2nd \u0026 3rd Letter Char to Print",
"20276":"Print A-Reg to Output Device",
"20279":"Print A-Reg to Output Device",
"20282":"BELL causes delay if Key bounces",
"20284":"Print A-Reg to Output Device",
"20287":"Retrieve Status from P-Reg Safe",
"20289":"Push Status",
"20290":"Retrieve A-Reg from Safe",
"20292":"Retrieve X-Reg from Safe",
"20294":"Retrieve Y-Reg from Safe",
"20296":"Pull Status",
"20297":"Return to Caller",
"20298":"Save A-Reg in Safe",
"20300":"Save X-Reg in Safe",
"20302":"Save Y-Reg in Safe",
"20304":"Push Status Register",
"20305":"Pull Status Value",
"20306":"Save Status in P-Reg Safe",
"20308":"Get STACK Pointer",
"20309":"Save STACK Pointer in Safe",
"20311":"Clear Decimal Flag; Sets Hex Mode",
"20312":"Return to Caller",
"20313":"Set Normal Video Mode",
"20316":"Initialize Video Screen for Text Mode",
"20319":"Reset CSW Output Vector to COUT1 ($FDF0)",
"20322":"Reset KSW Input Vector to KEYIN ($FD1B)",
"20325":"Must Clear Decimal Flag; Sets Hex Mode",
"20326":"Send BELL Char to Output Device",
"20329":"Get Monitor Prompt Character (\"*\")",
"20331":"Set Monitor Prompt Character (\"*\")",
"20333":"Prompt User for Input; Read a Line",
"20336":"Clear Monitor Mode",
"20339":"Get Non-Hex Char; (X=0) If No Hex Input",
"20342":"Save (Y) for Monitor Command Processing",
"20344":"There are only 23 Monitor Commands",
"20346":"Reduce Monitor Command Search Counter",
"20347":"If Not Found, Go Restart Monitor Loudly",
"20349":"Else, Find Command Char in Char Table",
"20352":"Loop until Search Counter is Zero",
"20354":"Cmd Found: Call Corresponding Subroutine",
"20357":"Save (Y) for Monitor Command Processing",
"20359":"Go Process Next Monitor Command",
"20362":"Set Index to Shift 4 Bits (Hi\u003c-Lo Bytes)",
"20364":"Got Hex Digit, Shift it into A2:",
"20365":"1st Shift (A) Low Nibble into High Nibble",
"20366":"(4 ASL\u0027s Discard High Nibble Bits",
"20367":"\u0026 Zero Low Nibble Bits); (A)=(%UVWX,0000)",
"20368":"2nd Shift (A) High Nibble",
"20369":"into (A2L) Low Nibble; (A2L)=(%MNOP,UVWX)",
"20371":"\u0026 (A2L) High Nibble into (A2H) Low Nibble",
"20373":"Reduce Shift Count",
"20374":"Branch Until All 4 Bits have been Shifted",
"20376":"Get Monitor Mode Flag [0 Mode = Mem Dump]",
"20378":"If Mode is Zero then Copy A2 to A1 \u0026 A3",
"20380":"Get A2-Reg, Low then High",
"20382":"Set A1-Reg, Low then High",
"20384":"Set A3-Reg, Low then High",
"20386":"Advance Indexed Adressing X-Index (-1~0)",
"20387":"Branch if Lows Done; Do Highs",
"20389":"Else, Do Next Mon Cmd Char; Always Taken",
"20391":"Clear X-Index; Prepare to Clear A2",
"20393":"Clear A2-Reg, Low",
"20395":"Clear A2-Reg, High",
"20397":"Get Next Char from Input Buffer",
"20400":"Advance Input Buffer Char Pointer",
"20401":"Is Char a Numeral \u003e= 0?",
"20403":"Is Char a Numeral \u003c 10?",
"20405":"BLT: Branch if Hex/Dec Digit",
"20407":"Is Char a Letter \u003e=(\"A\")? [Adds (C=1)]",
"20409":"Is Char a Letter \u003c=(\"z\") [A-Data-\u003eNZC]",
"20411":"BGE: Branch if Hex Digit",
"20413":"Return to Caller",
"20414":"Get High Address of All Mon Cmd Handlers",
"20416":"Push High-Order S/R Address",
"20417":"Get Low Address from S/R Address Table",
"20420":"Push Low-Order S/R Address",
"20421":"Get Old Mode",
"20423":"Clear Y-Index Register",
"20425":"Clear Monitor Mode Flag",
"20427":"Go To S/R via Return to Caller",
"20428":"F(\"Ctrl-C\") ; BASCONT ; Warm Start BASIC",
"20429":"F(\"Ctrl-Y\") ; USR     ; JMP to User Vector",
"20430":"F(\"Ctrl-E\") ; REGZ    ; Display Registers",
"20431":"F(\"T\")      ; TRACE   ; CMD now like USR *",
"20432":"F(\"V\")      ; VFY     ; Verify Memory",
"20433":"F(\"Ctrl-K\") ; INPRT   ; Set IN# Slot",
"20434":"F(\"S\")      ; STEPZ   ; CMD now like USR *",
"20435":"F(\"Ctrl-P\") ; OUTPRT  ; Set PR# Slot",
"20436":"F(\"Ctrl-B\") ; XBASIC  ; Cold Start BASIC",
"20437":"F(\"-\")      ; SETMODE ; Subtract",
"20438":"F(\"+\")      ; SETMODE ; Add",
"20439":"F(\"M\")      ; MOVE    ; Move Memory",
"20440":"F(\"\u003c\")      ; LT      ; MOVE/VFY Delimiter",
"20441":"F(\"N\")      ; SETNORM ; Set Normal Video",
"20442":"F(\"I\")      ; SETINV  ; Set Inverse Video",
"20443":"F(\"L\")      ; LIST    ; Disassemble 20 Instrs",
"20444":"F(\"W\")      ; WRITE   ; Write to Audio Tape",
"20445":"F(\"G\")      ; GO      ; Execute a Program",
"20446":"F(\"R\")      ; READ    ; Read from Audio Tape",
"20447":"F(\":\")      ; SETMODE ; Fill Memory",
"20448":"F(\".\")      ; SETMODE ; Address Range Delimiter",
"20449":"F(\"CR\")     ; CRMON   ; End Input",
"20450":"F(\" \")      ; BLANK   ; Space Character",
"20451":"\"Ctrl-C\" ; Warm Start BASIC",
"20452":"\"Ctrl-Y\" ; JMP to User Vector",
"20453":"\"Ctrl-E\" ; Display Registers",
"20454":"\"T\"      ; TRACE: Now an \u0027RTS\u0027; [TRACE_RTN]",
"20455":"\"V\"      ; Verify Memory",
"20456":"\"Ctrl-K\" ; Set IN# Slot",
"20457":"\"S\"      ; STEPZ: Now an \u0027RTS\u0027; [STEPZ_RTN]",
"20458":"\"Ctrl-P\" ; Set PR# Slot",
"20459":"\"Ctrl-B\" ; Cold Start BASIC",
"20460":"\"-\"      ; Subtract",
"20461":"\"+\"      ; Add",
"20462":"\"M\"      ; Move Memory",
"20463":"\"\u003c\"      ; MOVE/VFY Delimiter",
"20464":"\"N\"      ; Set Normal Video",
"20465":"\"I\"      ; Set Inverse Video",
"20466":"\"L\"      ; Disassemble 20 Instrs",
"20467":"\"W\"      ; Write to Audio Tape",
"20468":"\"G\"      ; Execute a Program",
"20469":"\"R\"      ; Read from Audio Tape",
"20470":"\":\"      ; Fill Memory",
"20471":"\".\"      ; Address Range Delimiter",
"20472":"\"CR\"     ; End Input",
"20473":"\" \"      ; Space Character (BLANK)",
"20474":"NMI Vector",
"20476":"RESET Vector",
"20478":"OLDRST Vector ($FF59) IS Wrong! \u003c\u003c BUG \u003e\u003e"},

"LongComments":{
"-2147483647":{
"Text":"==============================================================================\r\nDisassembly of the Apple II Plus Emulator APPLE2.ROM image file: \r\nRAM ($B000-$BFFF), I/O \u0026 Slot-RAM/ROM ($C000-$CFFF), \u0026 ROM Space ($D000-$FFFF)\r\n==============================================================================\r\nThanks to Andy McFadden for his 6502bench SourceGen Disassembler which greatly helped in the creation of this document.  And, for his pertinent disassemblies (made with it), which also helped.  And, for CiderPress, too!\r\n==============================================================================\r\nProject by James P. Davis                              Last updated 2020/04/21\r\n------------------------------------------------------------------------------\r\nThis APPLE2.ROM image file (3/27/1995) was obtained from AppleWin v.1.11.2.1.\r\n[It is identical to the APPLE2.ROM image (3/26/1995) from ApplePC v2.52 by David Ellsworth (based on Randy Spurlock\u0027s Apl2Emu)].  It has errors in it!  (Especially at the very end, using an Old Monitor Reset Vector.)  All errors detected will be Noted.\r\n==============================================================================\r\nMy analysis of this ROM is complete, but I may have made mistakes, so I will fix them as others, such as you, find them and let me know about them.  Fixes will be in future releases as/if we continue on.\r\n------------------------------------------------------------------------------\r\nThe Polynomial LOG \u0026 ATN Coeficiaents are Still a Mystery to me!\r\n==============================================================================\r\nNotes: I made this verbose for future newbies \u0026 amateur 6502 programmers.\r\n------------------------------------------------------------------------------\r\nAll symbols, labels, \u0026 comments, are adapted from works by Apple Computer Inc., David T Craig, William F. Luebbert, Jim Sather, Bob Sander-Cederlof, Michael Pohoreski, Andy McFadden, (\u0026 most likely) many more other persons,  and by me, the Editor of this document.  Actually, I\u0027ve changed a lot of them!\r\n------------------------------------------------------------------------------\r\nSome Applesoft comments are by David T Craig, originally; some are by Bob Sander-Cederlof; most of those have been edited by me; others are just by me (for my verbose analysis)!  Again, I\u0027ve changed a lot of them!\r\n==============================================================================\r\nSources:\r\n------------------------------------------------------------------------------\r\n1. \"Apple II+ Memory Equates for Assembly Programmers\" by me (Unpublished)\r\n2. Various \"DIS65\" \u0026 \"SYM65\" files \u0026 disassembly listings by Andy McFadden\r\n   (faddenSoft).\r\n3. Various AppleWin \"SYM\" files by Michael Pohoreski \u0026 Tom Charlesworth.\r\n4. \"Understanding the Apple II\" and \"Understanding the Apple IIe\" (both) by\r\n   Jim Sather.\r\n5. \"What\u0027s Where in the Apple\" by William F. Luebbert.\r\n6. \"S-C DocuMentor: Applesoft\" by Bob Sander-Cederlof.\r\n7. \"AppleSoft BASIC Source (DTCA2DOC-007)\" by David T Craig.\r\n8. \"AppleSoft\", Rev. 4/27/1984, Assembly Listing from diskette accompanying\r\n   \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\" (IIRC).\r\n9. \"Apple II Monitors Peeled\" (c) 1981 by Apple Computer Inc.\r\nA. Other Apple II ROMs {Known FTP Sources}:\r\n   = ftp://ftp.apple.asimov.net/pub/apple_II/emulators/rom_images/\r\n   = ftp://public.asimov.net/pub/apple_II/emulators/rom_images/\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nEquate Table:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"4096":{
"Text":"\r\n==============================================================================\r\nHardware Input/Output Address Space (IOADR)=($C000-$C0FF) \u0026 (CLRROM)=($CFFF)\r\n==============================================================================\r\nSLOT0      EQU $C000 ;I/O or Slot ROM Space (Only in ROM image), Empty!\r\n------------------------------------------------------------------------------\r\nIOADR      EQU $C000 ;Hardware I/O Addresses \u0026 Soft Switches:\r\n                     ;Range [(49152~49183)=($C000~$C01F)];\r\n                     ;#IOADR/256=$C0 is used to Set RAM I/O Vectors.\r\n==============================================================================\r\nKBD        EQU $C000 ;=($C00X); Keyboard Input Register: Gets set to a Key\u0027s \r\n                     ;High-ASCII Value when a Key is pressed (e.g., KBD \u003e 127 \r\n                     ;if any Key has been pressed since last cleared via \r\n                     ;KBDSTRB).\r\nKBDSTRB    EQU $C010 ;=($C01X); Clear Keyboard Strobe: Resets Keyboard Input \r\n                     ;Register\u0027s high bit (from 1 to 0) so that the next \r\n                     ;keypress can set KBD again.\r\nTAPEOUT    EQU $C020 ;=($C02X); Cassette Data Out: Digital to Analog Audio \r\n                     ;Output Toggle; Read Only!--Do NOT Write to these \r\n                     ;addresses [(49184~49199)= ($C020~$C02F)] (which are \r\n                     ;decoded {hard-wired} as the same single bit location); \r\n                     ;Toggles Audio Output  \r\n                     ;(creates a \u0027click\u0027 on Cassette-Tape recordings).\r\nSPKR       EQU $C030 ;=($C03X); Speaker Data Out: Digital to Analog Audio\r\n                     ;Output Toggle; Read Only!--Do NOT Write to these\r\n                     ;addresses [(49200~49215)=($C030~ $C03F)] (which are\r\n                     ;decoded {hard-wired} as the same single bitlocation); \r\n                     ;Toggles Audio Output  \r\n                     ;(Your Apple\u0027s speaker\u0027 clicks\u0027 once).\r\nSTROBE     EQU $C040 ; =($C04X); Outputs Strobe Pulse to Game I/O Connector; \r\n                     ;Any one of these 16 locations\r\n                     ;[(49216~49231)=($C040~$C04F)] has the same effect\r\n==============================================================================\r\nTXTCLR     EQU $C050 ;Sets Graphics Mode without Clearing Screen;\r\n                     ;Resets from Text Mode.\r\nTXTSET     EQU $C051 ;Sets Text Mode without Resetting Scrolling Window;\r\n                     ;Resets from Graphics Mode.\r\nMIXCLR     EQU $C052 ;Sets Full-Screen Graphics Mode;\r\n                     ;Resets from Mixed Graphics Mode\r\n                     ;(with 4 lines of text at the bottom of the screen).\r\nMIXSET     EQU $C053 ;Sets Mixed Text \u0026 Graphics Mode\r\n                     ;(with 4 lines of text at the bottom of the screen).\r\nLOWSCR     EQU $C054 ;Displays Page 1 without Clearing the Screen.\r\nHISCR      EQU $C055 ;Displays Page 2 without Clearing the Screen.\r\nLORES      EQU $C056 ;Resets Page from Hi-Res to Lo-Res/Text Mode.\r\nHIRES      EQU $C057 ;Resets Page from Lo-Res/Text to Hi-Res Mode.\r\n==============================================================================\r\nUncorrected Annunciator Labels [1st. of 3 Choices]\r\n[See: Tech Info Library Article No. 1062: Apple II Hardware:\r\n      Errata in Apple II Reference Manual (Part 2 of 2)]\r\n------------------------------------------------------------------------------\r\n;SETAN0    EQU $C058 ;[R/W] * Set AN0: Toggle OFF (0VDC): WRONG!\r\n;CLRAN0    EQU $C059 ;[R/W] Reset AN0: Toggle ON (+5VDC): WRONG!\r\n;SETAN1    EQU $C05A ;[R/W] * Set AN1: Toggle OFF (0VDC): WRONG!\r\n;CLRAN1    EQU $C05B ;[R/W] Reset AN1: Toggle ON (+5VDC): WRONG!\r\n;SETAN2    EQU $C05C ;[R/W] * Set AN2: Toggle OFF (0VDC): WRONG!\r\n;CLRAN2    EQU $C05D ;[R/W] Reset AN2: Toggle ON (+5VDC): WRONG!\r\n;SETAN3    EQU $C05E ;[R/W] * Set AN3: Toggle OFF (0VDC): WRONG!\r\n;CLRAN3    EQU $C05F ;[R/W] Reset AN3: Toggle ON (+5VDC): WRONG!\r\n==============================================================================\r\nCorrected Annunciator Labels [2nd. of 3 Choices]\r\n[See: Tech Info Library Article No. 1062: Apple II Hardware: \r\n      Errata in Apple II Reference Manual (Part 2 of 2)]\r\n------------------------------------------------------------------------------\r\n;CLRAN0    EQU $C058 ;[R/W] Reset AN0: Toggle OFF (0VDC)\r\n;SETAN0    EQU $C059 ;[R/W] * Set AN0: Toggle ON (+5VDC)\r\n;CLRAN1    EQU $C05A ;[R/W] Reset AN1: Toggle OFF (0VDC)\r\n;SETAN1    EQU $C05B ;[R/W] * Set AN1: Toggle ON (+5VDC)\r\n;CLRAN2    EQU $C05C ;[R/W] Reset AN2: Toggle OFF (0VDC)\r\n;SETAN2    EQU $C05D ;[R/W] * Set AN2: Toggle ON (+5VDC)\r\n;CLRAN3    EQU $C05E ;[R/W] Reset AN3: Toggle OFF (0VDC)\r\n;SETAN3    EQU $C05F ;[R/W] * Set AN3: Toggle ON (+5VDC)\r\n==============================================================================\r\nRenamed Corrected Annunciator Labels [3rd. of 3 Choices]\r\n[See: Tech Info Library Article No. 1062: Apple II Hardware: \r\n      Errata in Apple II Reference Manual (Part 2 of 2)]\r\n------------------------------------------------------------------------------\r\nAN0OFF     EQU $C058 ;[R/W] CLRAN0: Reset AN0: Toggle OFF (0VDC)\r\nAN0ON      EQU $C059 ;[R/W] SETAN0: * Set AN0: Toggle ON (+5VDC)\r\nAN1OFF     EQU $C05A ;[R/W] CLRAN1: Reset AN1: Toggle OFF (0VDC)\r\nAN1ON      EQU $C05B ;[R/W] SETAN1: * Set AN1: Toggle ON (+5VDC)\r\nAN2OFF     EQU $C05C ;[R/W] CLRAN2: Reset AN2: Toggle OFF (0VDC)\r\nAN2ON      EQU $C05D ;[R/W] SETAN2: * Set AN2: Toggle ON (+5VDC)\r\nAN3OFF     EQU $C05E ;[R/W] CLRAN3: Reset AN3: Toggle OFF (0VDC)\r\nAN3ON      EQU $C05F ;[R/W] SETAN3: * Set AN3: Toggle ON (+5VDC)\r\n==============================================================================\r\nTAPEIN     EQU $C060 ;=($C068); Cassette Data In:\r\n                     ;Digital State of Analog Audio Input Signal: \r\n                     ;HIGH/ON IF \u003e127, LOW/OFF IF \u003c128.\r\n==============================================================================\r\nPB0        EQU $C061 ;=($C069); Paddle 0 PushButton Switch; \r\n                     ;Digital Input 0; HIGH/ON IF \u003e127, LOW/OFF IF \u003c128.\r\nPB1        EQU $C062 ;=($C06A); Paddle 1 PushButton Switch; \r\n                     ;Digital Input 1; HIGH/ON IF \u003e127, LOW/OFF IF \u003c128.\r\nPB2        EQU $C063 ;=($C06B); Paddle 2 PushButton Switch; \r\n                     ;Digital Input 2; HIGH/ON IF \u003e127, LOW/OFF IF \u003c128.\r\n------------------------------------------------------------------------------\r\nPADDL0     EQU $C064 ;=($C06C); Paddle 0 Timer Digital Output State: \r\n                     ;Set \u003e127 until Timer expires; \r\n                     ;Used To Set Paddl#,X ($C064+X).\r\nPADDL1     EQU $C065 ;=($C06D); Paddle 1 Timer Digital Output State: \r\n                     ;Set \u003e127 until Timer expires.\r\nPADDL2     EQU $C066 ;=($C06E); Paddle 2 Timer Digital Output State: \r\n                     ;Set \u003e127 until Timer expires.\r\nPADDL3     EQU $C067 ;=($C06F); Paddle 3 Timer Digital Output STATE: \r\n                     ;Set \u003e127 until Timer expires.\r\n------------------------------------------------------------------------------\r\nPTRIG      EQU $C070 ;=($C07X); ALL Paddles Trigger; \r\n                     ;Restarts ALL Paddle Timers: Sets ALL \u003e127.\r\n==============================================================================\r\nIntegrated WOZ Machine (IWM) I/O Locations \u0026 Soft Switches\r\n------------------------------------------------------------------------------\r\nIWMPH0OFF  EQU $C080 ;Stepper Motor Control\r\nIWMPH0ON   EQU $C081 ;Stepper Motor Control\r\nIWMMOTORON EQU $C089 ;Starts Drive Motor Spinning\r\nIWMSELDRV1 EQU $C08A ;Selects Drive 1\r\nIWMQ6OFF   EQU $C08C ;Read\r\nIWMQ7OFF   EQU $C08E ;Write Protect Sense/Read\r\n==============================================================================\r\nCLRROM     EQU $CFFF ;Signals Peripheral Cards in ALL Slots \r\n                     ;to Disable their $C800-$CFFF Extension ROM.\r\n==============================================================================\r\n\r\nI wonder (by JPD):\r\n\r\nWhat if these Slot ROM Address Spaces (Slot-0 to Slot-7 below) were NOT Empty?\r\nLike the Disk II (5.25\" Floppy Disk Drive) Controller Card ROM image in Slot 6!  Could we put our own Peripheral Card ROM images in these spaces?  And, would they be used by emulators, or ignored by them?  I\u0027m sure that other software running on an emulator could use them.\r\n\r\nFor example: A Parallel Printer interface card ROM image in Slot 1?  Or, a Super Serial Card ROM image in Slot 2?  Or, both?  And, a 3.5\" Floppy Disk Drive Controller Card ROM image in Slot 5?  [Would an Integer BASIC Language or Slot 0 RAM/ROM Card image work?--Or, would Emulator Hardware I/O implemen-tations interfere with it?]\r\n\r\nAlso: Do Apple II Plus emulators (like the Agat Emulator or AppleWin) put ROM images corresponding to the user\u0027s configuation choices in these spaces while they are running?\r\n\r\nAnother idea: What if the Apple II RAM/ROM image was for the full 64K of Memory?--Filled with eveything you want your emulated Apple II to start with?  The image in the memory of your modern computer running your Apple II Emulator of choice would then just need to be manipulated.--Your emulator would be manipulating the bits and bytes in this Apple II RAM/ROM image in memory like a real Apple II 6502 microprocessor does with its RAM space (48K of Main RAM +16K of Aux RAM/ROM {SW/HW/FW}).--[Is this how emulators really work?]\r\n\r\n==============================================================================\r\nInput/Output Address Space (IOADR)=($C000-$C0FF)  [See also: APPLE2.ROM.sym65]\r\nOR--\u003e Slot 0 Address Space (SLOT0)=($C000-$C0FF)    [Only in APPLE2.ROM image]\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5632":{
"Text":"\r\n==============================================================================\r\nSlot 6 Address Space (SLOT6)=($C600-$C6FF)\r\n==============================================================================\r\nDisk II (5.25\" Floppy Disk Drive) Controller Card ROM (BOOT0 Code)\r\nReads the BOOT1 code from track 0, sector 0, and jumps to it.\r\n------------------------------------------------------------------------------\r\nThis code is a copy (or vice-versa) of the $B600-$B6FF Address Space.  It does not need to be analyzed twice, so it is densely packed there (above).\r\n------------------------------------------------------------------------------\r\n[Comments in this section were mostly by Andy McFadden (appended by me: JPD)]\r\n==============================================================================\r\n\r\nSLOT6        EQU    $C600          ;Slot 6 Address Space (SLOT6)=($C600-$C6FF)\r\n\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"4352":{
"Text":"\r\n==============================================================================\r\nSlot 1 Address Space (SLOT1)=($C100-$C1FF)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"4608":{
"Text":"\r\n==============================================================================\r\nSlot 2 Address Space (SLOT2)=($C200-$C2FF)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"4864":{
"Text":"\r\n==============================================================================\r\nSlot 3 Address Space (SLOT3)=($C300-$C3FF)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5120":{
"Text":"\r\n==============================================================================\r\nSlot 4 Address Space (SLOT4)=($C400-$C4FF)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5376":{
"Text":"\r\n==============================================================================\r\nSlot 5 Address Space (SLOT5)=($C500-$C5FF)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"8192":{
"Text":"\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n==============================================================================\r\nROM Space ($D000-$D7FF): ROM Socket $D0 on a real Apple II Plus.\r\n==============================================================================\r\nThe $D0 ROM was Programmmers Aid #1 ROM in Apple II (not in Apple II Plus)!\r\n------------------------------------------------------------------------------\r\nThe AGAT emulator APPLE2.ROM image (12.0 KB, 7/4/1996) starts here; it is identical to AppleWin\u0027s APPLE2.ROM image (20.0 KB, 3/27/1995) from here on.\r\n==============================================================================\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n\r\n\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n==============================================================================\r\nApplesoft: Floating Point BASIC for the Apple II\r\nCopyright (c) 1978 by Apple Computer, Inc.  All Rights Reserved.\r\nWritten by Microsoft, Inc. and Extended by R. Wigginton.\r\n==============================================================================\r\nPart A, $D000-$DD66: Input Parsing, Routine Addressing, For-Next Loops, etc.\r\nPart B, $DD67-$E79F: Formula Evaluation, Pointer Locating, \u0026 String Handling\r\nPart C, $E7A0-$F1D4: Floating Point Math Routines\r\nPart D, $F1D5-$F7FF: Graphics Display Routines, etc.\r\n==============================================================================\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n\r\n\r\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\r\n==============================================================================\r\nTo see: \"How Applesoft BASIC Programs Are Arranged In Memory\",\r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", pages 5 to 8\r\n------------------------------------------------------------------------------\r\nTo see: \"How Applesoft BASIC Program Lines Are Constructed\", \r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", page 15\r\n------------------------------------------------------------------------------\r\nTo see: \"How Applesoft BASIC Program Varables* Are Structured\"\r\n        *(Reals {Floating Point}, Integers, Strings, Functions, and Arrays),\r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", pages 21 to 24\r\n------------------------------------------------------------------------------\r\nTo see: \"How Applesoft BASIC Floating Point Math, Constants, \u0026 FAC Behave\",\r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", pages 52 to 54\r\n==============================================================================\r\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\r\n\r\n\r\n==============================================================================\r\n                       Applesoft Zero Page Usage Map:\r\n==============================================================================\r\n\r\n               Key: X = General usage\r\n                    . = Not used\r\n                    C = Set by cold start but not used\r\n                    H = Used by high resolution grraphics only\r\n                    G = Used by low resolution grraphics only\r\n                    T = Used by tape routines only\r\n                    D = Important DOS use\r\n                    $ = Used by STR$ routine only\r\n                    U = Set up for USR, not otherwise used\r\n                    8 = Used by some 80 column cards\r\n\r\n==============================================================================\r\n\r\n                        0 1 2 3 4 5 6 7 8 9 A B C D E F\r\n                        -------------------------------\r\n                    0X: C C C C C C . . . . U U U X X X\r\n                    1X: X X X X X X X . . . H H H H 8 8\r\n                    2X: X X X X X X H H X X X X G G X T\r\n                    3X: G . X X . X X X X X . . T T T T\r\n                    4X: D D D D D D D D D D . . . . X X\r\n                    5X: X X X X X X X X X X X X X X X X\r\n                    6X: X X X X X X X X X X X X X X X X\r\n                    7X: X X X X X X X X X X X X X X X X\r\n                    8X: X X X X X X X X X X X X X X . X\r\n                    9X: X X X X X X X X X X X X X X X X\r\n                    AX: X X X X X X X X X X X X X X X X\r\n                    BX: X X X X X X X X X X X X X X X X\r\n                    CX: X X X X X X X X X X X X X X . .\r\n                    DX: H H H H H H X . X . X X X X X X\r\n                    EX: H H H H H H H H H H H . . . . .\r\n                    FX: X X X X X X X X X H . . . . . $\r\n                        -------------------------------\r\n                        0 1 2 3 4 5 6 7 8 9 A B C D E F\r\n\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nPreamble about the Applesoft Floating Point Accumulators\r\n[FAC \u0026 ARG (6 Bytes each)]:\r\n------------------------------------------------------------------------------\r\nTo see: \"How Applesoft BASIC Floating Point Math, Constants, \u0026 FAC Behave\",\r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", pages 52 to 54\r\n------------------------------------------------------------------------------\r\nSignificand is the Most Significant Part of a Number; Mantissa is the fractional part of a Decimal Number, to the right of the decimal point:\r\n==============================================================================\r\nFAC      EQU  $9D  ;Primary Floating Point Accumulator    (6B)\r\n;FACX    EQU  $9D  ;1st FAC Exponent [Signed =(-128..+0..+127)]\r\n;FACT    EQU  $9E  ;1st FAC Mantissa, Top [Signed = (-128..+0..+127)]\r\n;FACH    EQU  $9F  ;1st FAC Mantissa, High    [Unsigned = (+0..+255)]\r\n;FACM    EQU  $A0  ;1st FAC Mantissa, Middle  [Unsigned = (+0..+255)]\r\n;FACL    EQU  $A1  ;1st FAC Mantissa, Low     [Unsigned = (+0..+255)]\r\nFACSIGN  EQU  $A2  ;1st FAC Unpacked Sign (msb) [Used by FP Math Package]\r\n;Packed format does not use FACSIGN; the Binary Mantissa msb holds the sign;\r\n;but, to print a minus sign when Printing FAC ($ED2EG), its msb must be set.\r\n------------------------------------------------------------------------------\r\nARG      EQU  $A5  ;Secondary Floating Point Accumulator  (6B)\r\n;ARGX    EQU  $A5  ;2nd FAC Exponent [Signed = (-128..+0..+127)]\r\n;ARGT    EQU  $A6  ;2nd FAC Mantissa, Top [Signed = (-128..+0..+127)]\r\n;ARGH    EQU  $A7  ;2nd FAC Mantissa, High    [Unsigned = (+0..+255)]\r\n;ARGM    EQU  $A8  ;2nd FAC Mantissa, Middle  [Unsigned = (+0..+255)]\r\n;ARGL    EQU  $A9  ;2nd FAC Mantissa, Low     [Unsigned = (+0..+255)]\r\nARGSIGN  EQU  $AA  ;2nd FAC Unpacked Sign (msb) [Used by FP Math Package]\r\n;Packed format does not use ARGSIGN; the Binary Mantissa msb holds the sign.\r\n==============================================================================\r\nARGEXT   EQU  $92  ;----- ARG Extra Precision Byte for FP Op\u0027s  (1B)\r\nTEMP1    EQU  $93  ;~$97: Packed FAC Temp Save Area \u0026 FP Math Register\r\nTEMP2    EQU  $98  ;~$9C: Packed FAC Temp Save Area \u0026 FP Math Register\r\nTEMP3    EQU  $8A  ;~$8E: Packed FAC Temp Save Area \u0026 FP Math Register\r\nFACEXT   EQU  $AC  ;----- FAC Extra Precision Byte for FP Op\u0027s  (1B)\r\nRNDSEED  EQU  $C9  ;~$CD: Packed FAC Floating Point Random Number Seed\r\n==============================================================================\r\nPacked FAC Numberic Constant Exanples:\r\n==============================================================================\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit: \r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n | Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific |\r\n | ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec |\r\n |========================|=====|================|===========|==============|\r\n |NRM_QTR  HEX 7F00000000 |(00) |$7F-$80=$FF= -1 |$.00000000 |+2.50000000E-1|\r\n |POS_QTR  HEX 7F80000000 |(00) |$7F-$80=$FF= -1 |$.80000000 |+2.50000000E-1|\r\n |NEG_QTR  HEX 7F80000000 |(FF) |$7F-$80=$FF= -1 |$.80000000 |-2.50000000E-1|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_HALF HEX 8000000000 |(00) |$80-$80=$00= +0 |$.00000000 |+5.00000000E-1|\r\n |POS_HALF HEX 8080000000 |(00) |$80-$80=$00= +0 |$.80000000 |+5.00000000E-1|\r\n |NEG_HALF HEX 8080000000 |(FF) |$80-$80=$00= +0 |$.80000000 |-5.00000000E-1|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_ONE  HEX 8100000000 |(00) |$81-$80=$01= +1 |$.00000000 |+1.00000000E+0|\r\n |POS_ONE  HEX 8180000000 |(00) |$81-$80=$01= +1 |$.80000000 |+1.00000000E+0|\r\n |NEG_ONE  HEX 8180000000 |(FF) |$81-$80=$01= +1 |$.80000000 |-1.00000000E+0|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_TEN  HEX 8420000000 |(00) |$84-$80=$04= +4 |$.20000000 |+1.00000000E+1|\r\n |POS_TEN  HEX 84A0000000 |(00) |$84-$80=$04= +4 |$.A0000000 |+1.00000000E+1|\r\n |NEG_TEN  HEX 84A0000000 |(FF) |$84-$80=$04= +4 |$.A0000000 |-1.00000000E+1|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_SQRH HEX 803504F334 |(00) |$80-$80=$00= +0 |$.3504F334 |+2.07106781E-1|\r\n |POS_SQRH HEX 80B504F334 |(00) |$80-$80=$00= +0 |$.B504F334 |+7.07106781E-1|\r\n |NEG_SQRH HEX 80B504F334 |(FF) |$80-$80=$00= +0 |$.B504F334 |-7.07106781E-1|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_SQR2 HEX 813504F334 |(00) |$81-$80=$01= +1 |$.3504F334 |+0.41421356E+0|\r\n |POS_SQR2 HEX 81B504F334 |(00) |$81-$80=$01= +1 |$.B504F334 |+1.41421356E+0|\r\n |NEG_SQR2 HEX 81B504F334 |(FF) |$81-$80=$01= +1 |$.B504F334 |-1.41421356E+0|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_LN2  HEX 80317217F8 |(00) |$80-$80=$00= +0 |$.317217F8 |+1.93147181E-1|\r\n |POS_LN2  HEX 80B17217F8 |(00) |$80-$80=$00= +0 |$.B17217F8 |+6.93147181E-1|\r\n |NEG_LN2  HEX 80B17217F8 |(FF) |$80-$80=$00= +0 |$.B17217F8 |-6.93147181E-1|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_LOGE HEX 8138AA3B29 |(00) |$81-$80=$01= +1 |$.38AA3B29 |+0.44269504E+0|\r\n |POS_LOGE HEX 81B8AA3B29 |(00) |$81-$80=$01= +1 |$.B8AA3B29 |+1.44269504E+0|\r\n |NEG_LOGE HEX 81B8AA3B29 |(FF) |$81-$80=$01= +1 |$.B8AA3B29 |-1.44269504E+0|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_PID2 HEX 81490FDAA2 |(00) |$81-$80=$01= +1 |$.490FDAA2 |+0.57079633E+0|\r\n |POS_PID2 HEX 81C90FDAA2 |(00) |$81-$80=$01= +1 |$.C90FDAA2 |+1.57079633E+0|\r\n |NEG_PID2 HEX 81C90FDAA2 |(FF) |$81-$80=$01= +1 |$.C90FDAA2 |-1.57079633E+0|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_PI   HEX 82490FDAA2 |(00) |$82-$80=$02= +2 |$.490FDAA2 |+1.14159265E+0|\r\n |POS_PI   HEX 82C90FDAA2 |(00) |$82-$80=$02= +2 |$.C90FDAA2 |+3.14159266E+0|\r\n |NEG_PI   HEX 82C90FDAA2 |(FF) |$82-$80=$02= +2 |$.C90FDAA2 |-3.14159266E+0|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_PIM2 HEX 83490FDAA2 |(00) |$83-$80=$03= +3 |$.490FDAA2 |+2.28318531E+0|\r\n |POS_PIM2 HEX 83C90FDAA2 |(00) |$83-$80=$03= +3 |$.C90FDAA2 |+6.28318531E+0|\r\n |NEG_PIM2 HEX 83C90FDAA2 |(FF) |$83-$80=$03= +3 |$.C90FDAA2 |-6.28318531E+0|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |BAD32768 HEX 9080000020 |(FF) |$90-$80=$10=+16 |$.80000020 |-3.27680005E+4|\r\n |POS32768 HEX 9080000000 |(00) |$90-$80=$10=+16 |$.80000000 |+3.27680000E+4|\r\n |NEG32768 HEX 9080000000 |(FF) |$90-$80=$10=+16 |$.80000000 |-3.27680000E+4|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_E8M1 HEX 9B3EBC1FFD |(00) |$9B-$80=$18=+24 |$.3EBC1FFD |+3.28911359E+7|\r\n |POS_E8M1 HEX 9BBEBC1FFD |(00) |$9B-$80=$18=+24 |$.BEBC1FFD |+9.99999999E+7|\r\n |NEG_E8M1 HEX 9BBEBC1FFD |\\FF) |$9B-$80=$18=+24 |$.BEBC1FFD |-9.99999999E+7|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_E9M1 HEX 9E6E6B27FD |(00) |$9E-$80=$1E=+30 |$.6E6B27FD |+4.63129087E+8|\r\n |POS_E9M1 HEX 9EEE6B27FD |(00) |$9E-$80=$1E=+30 |$.EE6B27FD |+9.99999999E+8|\r\n |NEG_E9M1 HEX 9EEE6B27FD |(FF) |$9E-$80=$1E=+30 |$.EE6B27FD |-9.99999999E+8|\r\n |------------------------|-----|----------------|-----------|--------------|\r\n |NRM_E9   HEX 9E6E6B2800 |(00) |$9E-$80=$1E=+30 |$.6E6B2800 |+4.63129088E+8|\r\n |POS_E9   HEX 9EEE6B2800 |(00) |$9E-$80=$1E=+30 |$.EE6B2800 |+1.00000000E+9|\r\n |NEG_E9   HEX 9EEE6B2800 |(FF) |$9E-$80=$1E=+30 |$.EE6B2800 |-1.00000000E+9|\r\n------------------------------------------------------------------------------\r\n* FACSIGN msb must be set ($80-$FF) to print a minus sign before a result #.\r\n==============================================================================\r\n          pi/2 = 1.570796327; pi = 3.141592654; 2*pi = 6.283185308\r\n         pi = 4*ATN(1)-(1E-9) = 3.14159265 \u003c\u003e 4*ATN(1) = 3.14159266\r\n==============================================================================\r\nPlugging NRM_CONS into \u0026 Printing FAC [*9D:XX XX XX XX XX XX \u003cCR\u003e *ED2EG]--\r\n[You can use the AppleWin Monitor (CALL -151) or Debugger (F7) to do this.]\r\n------------------------------------------------------------------------------\r\nSeems that there is a problem printing numbers when the mantissa is zero.\r\nSetting the Mantissa sign bit (adding $80000000) fixes all these problems:\r\n------------------------------------------------------------------------------\r\nPlugging in NRM_QTR  #\u0027s results in nothing being printed!\r\nPlugging in NRM_HALF #\u0027s results in nothing being printed!\r\nPlugging in NRM_ONE  #\u0027s results in a Blank Line being printed, not a 1!\r\nPlugging in NRM_TEN  #\u0027s results in a 2 being printed, not a 10!\r\nPlugging in NRM_SQRH #\u0027s results in (SQR(1/2))-(1/2) being printed!\r\nPlugging in NRM_SQR2 #\u0027s results in (SQR(2))-(1) being printed!\r\nPlugging in NRM_LN2  #\u0027s results in (LN(2))-(1/2) being printed!\r\nPlugging in NRM_LOGE #\u0027s results in (LOG(base 2)(e))-(1) being printed!\r\nPlugging in NRM_PID2 #\u0027s results in (PI/2)-(1) being printed!\r\nPlugging in NRM_PI   #\u0027s results in (PI)-(2) being printed!\r\nPlugging in NRM_PIM2 #\u0027s results in (PI*2)-(4) being printed!\r\nPlugging in BAD32768 #\u0027s results in a non-integer FP value being printed!\r\nPlugging in NRM_E8M1 #\u0027s results in a non-integer FP value being printed!\r\nPlugging in NRM_E9M1 #\u0027s results in a non-integer FP value being printed!\r\nPlugging in NRM_E9   #\u0027s results in a non-integer FP value being printed!\r\n------------------------------------------------------------------------------\r\nApparently, all NRM_Constant Mantissas have had 1/2 subtracted from them.\r\nThey are the actual (renamed) Normalized Contants used in Applesoft BASIC!\r\nIIRC, this was done to facilitate proper rounding of Floating Point numbers.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nApplesoft BASIC Tokens:                          [AKA: TKNMTBL; (Count = 107)]\r\n   [Keywords, Statements, and (Math, String, \u0026 other types of) Functions]\r\n==============================================================================\r\nConstants   EQU   $nn ;These are Constants, NOT Zero Page Equates\r\nTOK_*       EQU   $nn ;Originally: TOKEN.*\r\n==============================================================================\r\nTOK_END     EQU   $80 ;Token: \"END\" Program Control Statement\r\nTOK_FOR     EQU   $81 ;Token: \"FOR\" Program Control Statement\r\nTOK_NEXT    EQU   $82 ;Token: \"NEXT\" Program Control Statement\r\nTOK_DATA    EQU   $83 ;Token: \"DATA\" Data Assignment Statement\r\nTOK_INPUT   EQU   $84 ;Token: \"INPUT\" Input Statement\r\nTOK_DEL     EQU   $85 ;Token: \"DEL\" Prgrm-Lines Removal Statement\r\nTOK_DIM     EQU   $86 ;Token: \"DIM\" Assignment Statement\r\nTOK_READ    EQU   $87 ;Token: \"READ\" Data Input Statement\r\nTOK_GR      EQU   $88 ;Token: \"GR\" Graphics Display Statement\r\nTOK_TEXT    EQU   $89 ;Token: \"TEXT\" Text Display Statement\r\nTOK_PR      EQU   $8A ;Token: \"PR#\" Set Output Statement\r\nTOK_IN      EQU   $8B ;Token: \"IN#\" Set Input Statement\r\nTOK_CALL    EQU   $8C ;Token: \"CALL\" Program Control Statement\r\nTOK_PLOT    EQU   $8D ;Token: \"PLOT\" Graphics Drawing Statement\r\nTOK_HLIN    EQU   $8E ;Token: \"HLIN\" Graphics Drawing Statement\r\nTOK_VLIN    EQU   $8F ;Token: \"VLIN\" Graphics Drawing Statement\r\nTOK_HGR2    EQU   $90 ;Token: \"HGR2\" Graphics Display Statement\r\nTOK_HGR     EQU   $91 ;Token: \"HGR\" Graphics Display Statement\r\nTOK_HCOLOR  EQU   $92 ;Token: \"HCOLOR=\" Assignment Statement\r\nTOK_HPLOT   EQU   $93 ;Token: \"HPLOT\" Graphics Drawing Statement\r\nTOK_DRAW    EQU   $94 ;Token: \"DRAW\" Graphics Drawing Statement\r\nTOK_XDRAW   EQU   $95 ;Token: \"XDRAW\" Graphics Drawing Statement\r\nTOK_HTAB    EQU   $96 ;Token: \"HTAB\" Cursor Position Statement\r\nTOK_HOME    EQU   $97 ;Token: \"HOME\" Text Display Statement\r\nTOK_ROT     EQU   $98 ;Token: \"ROT=\" Assignment Statement\r\nTOK_SCALE   EQU   $99 ;Token: \"SCALE=\" Assignment Statement\r\nTOK_SHLOAD  EQU   $9A ;Token: \"SHLOAD\" Data Input Statement\r\nTOK_TRACE   EQU   $9B ;Token: \"TRACE\" Debugging ON Statement\r\nTOK_NOTRACE EQU   $9C ;Token: \"NOTRACE\" Debugging OFF Statement\r\nTOK_NORMAL  EQU   $9D ;Token: \"NORMAL\" Text Display Statement\r\nTOK_INVERSE EQU   $9E ;Token: \"INVERSE\" Text Display Statement\r\nTOK_FLASH   EQU   $9F ;Token: \"FLASH\" Text Display Statement\r\nTOK_COLOR   EQU   $A0 ;Token: \"COLOR=\" Assignment Statement\r\nTOK_POP     EQU   $A1 ;Token: \"POP\" Program Control Statement\r\nTOK_VTAB    EQU   $A2 ;Token: \"VTAB\" Cursor Position Statement\r\nTOK_HIMEM   EQU   $A3 ;Token: \"HIMEM:\" Assignment Statement\r\nTOK_LOMEM   EQU   $A4 ;Token: \"LOMEM:\" Assignment Statement\r\nTOK_ONERR   EQU   $A5 ;Token: \"ONERR\" Program Control Statement\r\nTOK_RESUME  EQU   $A6 ;Token: \"RESUME\" Program Control Statement\r\nTOK_RECALL  EQU   $A7 ;Token: \"RECALL\" Arrays from Tape Statement\r\nTOK_STORE   EQU   $A8 ;Token: \"STORE\" Arrays to Tape Statement\r\nTOK_SPEED   EQU   $A9 ;Token: \"SPEED=\" Assignment Statement\r\nTOK_LET     EQU   $AA ;Token: \"LET\" Assignment Statement\r\nTOK_GOTO    EQU   $AB ;Token: \"GOTO\" Program Control Statement\r\nTOK_RUN     EQU   $AC ;Token: \"RUN\" Program Control Statement\r\nTOK_IF      EQU   $AD ;Token: \"IF\" Conditional Statement\r\nTOK_RESTORE EQU   $AE ;Token: \"RESTORE\" Data Reset Statement\r\nTOK_AMPER   EQU   $AF ;Token: \"\u0026\" (Ampersand) User-Cmd. Statement\r\nTOK_GOSUB   EQU   $B0 ;Token: \"GOSUB\" Program Control Statement\r\nTOK_RETURN  EQU   $B1 ;Token: \"RETURN\" Program Control Statement\r\nTOK_REM     EQU   $B2 ;Token: \"REM\" Prgrm-Documentation Statement\r\nTOK_STOP    EQU   $B3 ;Token: \"STOP\" Program Control Statement\r\nTOK_ON      EQU   $B4 ;Token: \"ON\" Program Control Statement\r\nTOK_WAIT    EQU   $B5 ;Token: \"WAIT\" Program Control Statement\r\nTOK_LOAD    EQU   $B6 ;Token: \"LOAD\" Programs from Tape Statement\r\nTOK_SAVE    EQU   $B7 ;Token: \"SAVE\" Programs to Tape Statement\r\nTOK_DEF     EQU   $B8 ;Token: \"DEF\" Function Assignment Statement\r\nTOK_POKE    EQU   $B9 ;Token: \"POKE\" Set Memory Address Function\r\nTOK_PRINT   EQU   $BA ;Token: \"PRINT\" Output Statement\r\nTOK_CONT    EQU   $BB ;Token: \"CONT\" Statement\r\nTOK_LIST    EQU   $BC ;Token: \"LIST\" Pgm-Lines Display Statement\r\nTOK_CLEAR   EQU   $BD ;Token: \"CLEAR\" Reset Everything Statement\r\nTOK_GET     EQU   $BE ;Token: \"GET\" Input Statement\r\nTOK_NEW     EQU   $BF ;Token: \"NEW\" Program Creation Statement\r\nTOK_TAB     EQU   $C0 ;Token: \"TAB(\" Cursor Position Statement\r\nTOK_TO      EQU   $C1 ;Token: \"TO\" Program Control Statement\r\nTOK_FN      EQU   $C2 ;Token: \"FN\" Function Assignment Statement\r\nTOK_SPC     EQU   $C3 ;Token: \"SPC(\" Cursor Position Statement\r\nTOK_THEN    EQU   $C4 ;Token: \"THEN\" Conditional Statement\r\nTOK_AT      EQU   $C5 ;Token: \"AT\" Graphics Drawing Statement\r\nTOK_NOT     EQU   $C6 ;Token: \"NOT\" Conditional Statement\r\nTOK_STEP    EQU   $C7 ;Token: \"STEP\" Conditional Statement\r\nTOK_PLUS    EQU   $C8 ;Token: \"+\" (Plus) Math Function\r\nTOK_MINUS   EQU   $C9 ;Token: \"-\" (Minus) Math Function\r\nTOK_MULT    EQU   $CA ;Token: \"*\" (Multiply) Math Function\r\nTOK_DIV     EQU   $CB ;Token: \"/\" (Division) Math Function\r\nTOK_EXPOP   EQU   $CC ;Token: \"^\" (Exponent) Math Function\r\nTOK_AND     EQU   $CD ;Token: \"AND\" Conditional Statement\r\nTOK_OR      EQU   $CE ;Token: \"OR\" Conditional Statement\r\nTOK_GREATER EQU   $CF ;Token: \"\u003e\" (Greater Than) Cond. Statement\r\nTOK_EQUAL   EQU   $D0 ;Token: \"=\" (Equal To) Cond. Statement\r\nTOK_LESSER  EQU   $D1 ;Token: \"\u003c\" (Less Than) Cond. Statement\r\nTOK_SGN     EQU   $D2 ;Token: \"SGN\" Math Function\r\nTOK_INT     EQU   $D3 ;Token: \"INT\" Math Function\r\nTOK_ABS     EQU   $D4 ;Token: \"ABS\" Math Function\r\nTOK_USR     EQU   $D5 ;Token: \"USR\" User-Command Statement\r\nTOK_FRE     EQU   $D6 ;Token: \"FRE\" Free Memory Statement\r\nTOK_SCRN    EQU   $D7 ;Token: \"SCRN(\" LoRes (X,Y) Color Statement\r\nTOK_PDL     EQU   $D8 ;Token: \"PDL\" Input Statement\r\nTOK_POS     EQU   $D9 ;Token: \"POS\" Get Cursor Position Statement\r\nTOK_SQR     EQU   $DA ;Token: \"SQR\" Math Function\r\nTOK_RND     EQU   $DB ;Token: \"RND\" Math Function\r\nTOK_LOG     EQU   $DC ;Token: \"LOG\" Math Function\r\nTOK_EXP     EQU   $DD ;Token: \"EXP\" Math Function\r\nTOK_COS     EQU   $DE ;Token: \"COS\" Math Function\r\nTOK_SIN     EQU   $DF ;Token: \"SIN\" Math Function\r\nTOK_TAN     EQU   $E0 ;Token: \"TAN\" Math Function\r\nTOK_ATN     EQU   $E1 ;Token: \"ATN\" Math Function\r\nTOK_PEEK    EQU   $E2 ;Token: \"PEEK\" Read Memory Address Function\r\nTOK_LEN     EQU   $E3 ;Token: \"LEN\" String Length Function\r\nTOK_STR     EQU   $E4 ;Token: \"STR$\" String Function\r\nTOK_VAL     EQU   $E5 ;Token: \"VAL\" String Conversion Function\r\nTOK_ASC     EQU   $E6 ;Token: \"ASC\" String Conversion Function\r\nTOK_CHR     EQU   $E7 ;Token: \"CHR$\" String Function\r\nTOK_LEFT    EQU   $E8 ;Token: \"LEFT$\" String Function\r\nTOK_RIGHT   EQU   $E9 ;Token: \"RIGHT$\" String Function\r\nTOK_MID     EQU   $EA ;Token: \"MID$\" String Function\r\n==============================================================================\r\n\r\n\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n==============================================================================\r\nApplesoft - Part A, $D000-$DD66: \r\nInput Parsing, Routine Addressing, For-Next Loops, etc.\r\n==============================================================================\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n\r\n\r\n==============================================================================\r\nApplesoft Token Address Table: ==============================================================================\r\n\r\nTKADTBL      EQU    $D000           ;[Entries are ADDRESS-1]\r\n\r\n[The unused TA_* Labels I added are Global and Exported, \u0026 for future use.]\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12288":{
"Text":"\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n==============================================================================\r\nROM Space ($E000-$E7FF): ROM Socket $E0 on a real Apple II Plus.\r\n==============================================================================\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n\r\n\r\n==============================================================================\r\nAPPLESOFT (BASIC) ENTRY POINTS:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16384":{
"Text":"\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n==============================================================================\r\nROM Space ($F000-$F7FF): ROM Socket $F0 on a real Apple II Plus.\r\n==============================================================================\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18432":{
"Text":"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n==============================================================================\r\nApplesoft - End of all Parts\r\n==============================================================================\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n\r\n\u003c---[$F8 Page Boundary]\r\n\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n==============================================================================\r\nROM Space ($F800-$FFFF): ROM Socket $F8 on a real Apple II Plus. \r\n==============================================================================\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n\r\n==============================================================================\r\nORIGIN  EQU $F800 ;Old Monitor ROM or New Autostart Monitor ROM Start Address.\r\n                  ;Or, Language Card Additional ROM/RAM: \r\n                  ;When Language Card {ROM/RAM} is Deselected, {RAM/ROM} on\r\n                  ;Card is Active, {respectively}.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nNew Monitor ROM (Modified AutoStart Image):\r\n==============================================================================\r\nApple II Monitor II by Steve Wozniak.  Modified Nov 1978 by John A\r\nCopyright 1978 by Apple Computer, Inc.  All Rights Reserved. \r\n==============================================================================\r\n\r\n==============================================================================\r\nMonitor Low Resolution Graphics Plotting Routines:\r\n==============================================================================\r\n\r\n----------------------------------- ;Plot a Point on Lo-Res Screen:\r\n                                    ;[Enter with (A)=Row; (Y)=Column]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18786":{
"Text":"==============================================================================\r\nMiniassembler/Disassembler Instruction Display Tables\r\n==============================================================================\r\n\r\n============================= | ==============================================\r\n      FMT1 Index Bytes:       | Format Index Byte: XXXXXXY0 Instructions\r\n========================v====-+-===v=====================^====================\r\n[*] Use: Left Nibble if Y=1   | If Y=1 then Left Half Byte   |    68 Bytes/2 |\r\n        Right Nibble if Y=0   | If Y=0 then Right Half Byte  | +  68 Bytes/2 |\r\n   [For: 14 Print Formats]    | [(X)=(Index into Table)]     | = 136 Nibbles |\r\n------------------------------------------------------------------------------\r\n[*] These are opposite of what the Old Monitor listing shows in A2 Ref Manual!\r\n==============================================================================\r\n                                  FMT1 NOTE\r\n==============================================================================\r\nUsed to get an Index into the next table to get FORMAT \u0026 LENGTH frm an OpCode;\r\nNoticeable Patterns: Alternating groups of 4 Defined Bytes (4 DFB lines);\r\nNibble Comments are adapted from OpCodes(*) \u0026 the following table\u0027s Comments;\r\nThe Nibble (sequence number) for an Even Operation Code (Instruction) is:\r\n    Nibble=(OpCode/2)+1-(2*Y): where Y is Bit 1 of the OpCode = (0 or 1);\r\n    OpCode=(Nibble-1+(2*Y))*2: \" \" \" \" (Ditto) \" \" \" \";  \u003c-[The way back!];\r\nThe Nibble (sequence number) for an Odd OpCode is limited to the last group of eight nibbles [(X)=(64~67)]; Undefined Operations: ??? [All are still NOP\u0027s];\r\n(*) See a \"6502 Hex to Instruction Conversion Chart\" [\u0026 maybe: \"UnDocumented 6502 OpCodes\" by Nick Westgate (for Undefined Operations: ???)]\r\n==============================================================================\r\n\r\n----------------------------- | ----------------------------------------------\r\n                              |   Nibble  Op  Address Mode | Bytes | Examples\r\n----------------------------- | ----------------------------\\-----/-----------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18854":{
"Text":"                                    ;      ^ $(Odd)D\r\n                                    ;$87: *** Absolute,Y     | 3 | $NNNN,Y\r\n                                    ;      ^ $(Odd)9\r\n------------------------------------------------------------------------------\r\n\r\n============================= | ==============================================\r\n    FMT2 Index Bytes (*):     | Print Format Index Byte $ZZXXXY01 Instructions\r\n============================= | ==============================================\r\n  [(X)=(Index into Table)]    |      Address Mode | Bytes | Notes \u0026 Examples\r\n----------------------------- | -------------------\\-----/--------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20478":{
"Text":"==============================================================================\r\nWHAT THE FOLLOWING SHOULD \u0026 SHOULD NOT BE:\r\n------------------------------------------------------------------------------\r\n             DW     IRQ             ;IRQ Vector    ($FA40) IS Right;\r\n             DW     OLDRST          ;OLDRST Vector ($FF59) IS Wrong! \u003c\u003c BUG \u003e\u003e\r\n------------------------------------------------------------------------------\r\n       \u003c\u003c\u003c BUG can be fixed in (Apple II Plus) Emulator ROM images! \u003e\u003e\u003e\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5888":{
"Text":"\r\n==============================================================================\r\nSlot 7 Address Space (SLOT7)=($C700-$C7FF)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"6144":{
"Text":"\r\n==============================================================================\r\nAll Peripheral Card Slots\u0027 Shared $C800-$CFFF Extension RAM/ROM Memory Space\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9061":{
"Text":"\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n==============================================================================\r\nStart of Applesoft BASIC ROM Image (Part A) Executable Code    [End of Tables]\r\n==============================================================================\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n\r\n\r\n==============================================================================\r\nGet FOR/NEXT Pointer from STACK                               \u003c\u003c\u003c Buggy! \u003e\u003e\u003e\r\nCalled by FOR and NEXT to scan the STACK for a Frame with the Same Variable:\r\n==============================================================================\r\n\r\n(FORPTR) = Address of Variable if FOR or NEXT\r\n         = $xxFF when Called from POPRTN  \u003c\u003c\u003c BUG: should be $FFxx \u003e\u003e\u003e\r\n           \u003c\u003c\u003c BUG can be fixed in (Apple II Plus) Emulator ROM images! \u003e\u003e\u003e\r\n\r\nReturns: .NE. If Variable is Not Found,\r\n         ^^^^ (Not Equal to Zero: P-Reg Z-Flag=0) \r\n         (X) = Stack Pointer after scanning all Frames\r\n\r\n         .EQ. If Variable is Found,\r\n         ^^^^ (Equal to Zero: P-Reg Z-Flag=1)\r\n         (X) = Stack Pointer of Frame Found\r\n\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9107":{
"Text":"==============================================================================\r\nMove Memory Block Upward\r\n==============================================================================\r\nOn Entry: [(A,{X|Y})={Low,High}] = (HIGHDS) = Highest Destination Address +1\r\n _______________|_______________    (LOWTR) =  Lowest Source Address\r\n {Depends on Caller/Entry-Point}   (HIGHTR) = Highest Source Address +1\r\n==============================================================================\r\n\r\nFirst, get setup to move upward LOWTR through HIGHTR-1 to just below HIGHDS:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9115":{
"Text":"----------------------------------- ;Compute Number of Bytes to be Moved\r\n                                    ; (from LOWTR through HIGHTR-1)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9114":{
"Text":"Move Memory Block Upward, 2nd Entry Point (Bypasses MVBLKUP1 Stuff)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9174":{
"Text":"==============================================================================\r\nAssure sufficient Stack space to do FOR, GOSUB, or Expression Evaluation\r\n==============================================================================\r\nUpon Entry, the Accumulator (A-Reg) should contain the number of Address Pointers and/or half the number of bytes required to be put on the STACK\r\n------------------------------------------------------------------------------\r\nEntered with A-Reg = (9, 3, or 1) for (FOR, GOSUB, or FRMEVL), respectivly.\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"8800":{
"Text":"\r\n==============================================================================\r\nError Messages\r\n==============================================================================\r\n\r\n[The unused Labels I added are Global and Exported, \u0026 for future use.--JPD]\r\n\r\n==============================================================================\r\n(The code uses error message constants that are defined by subtracting the start of the table from the address of the error.  Currently, there is no way to do that in SourceGen, so the constants are project symbols instead.)\r\n==============================================================================\r\n\r\nERR_MSGS     EQU    $D260           ;Applesoft Error Messages Table\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"8400":{
"Text":"\r\n==============================================================================\r\nApplesoft Token Names Branch Address Table:                 ($190 = 400 Bytes)\r\n==============================================================================\r\n\r\n[The unused TN_* Labels I added are Global and Exported, \u0026 for future use.]\r\n\r\n==============================================================================\r\n\r\nTKNMTBL      EQU    $D0D0           ;Dextral Character Inverted (DCI) Names\r\n                                    ;Same Addres as TN_END (next)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"8370":{
"Text":"\r\n==============================================================================\r\nMath Operator Branch Address Table\r\n==============================================================================\r\n\r\n[The unused MO_* Labels I added are Global and Exported, \u0026 for future use.]\r\n\r\n==============================================================================\r\nMath Operator Precedence Codes (MO-PC):\r\n==============================================================================\r\nLabel   MO-PC   Description\r\n-----   -----   --------------------------------------------------------------\r\nP_OR    = $46   Logical \"OR\" Operator (is lowest precedence)\r\nP_AND   = $50   Logical \"AND\" Operator (is next higher precedence, etc...)\r\nP_REL   = $64   Relational (\"\u003e\"), (\"=\"), \u0026 (\"\u003c\") Operators\r\nP_ADD   = $79   Binary Addition (\"+\") and Subtraction (\"-\") Operators\r\nP_MUL   = $7B   Multiplication (\"*\") and Division (\"/\") Operators\r\nP_PWR   = $7D   Exponentiation (\"^\") [Power] Operator\r\nP_NEQ   = $7F   Unary Negative (\"-\") and Comparison (\"=\") Operators\r\n==============================================================================\r\nEach entry consists of: a one-byte Precedence Code \u003c--(its Token constant), \r\n           followed by: a two-byte Function/Operator Address (minus one)\r\n==============================================================================\r\n\r\nMATHTBL      EQU    $D0B2           ;Math Operator Branch Address Table\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"8320":{
"Text":"\r\n==============================================================================\r\nThere are no direct pointers for $C0~C7:\r\n==============================================================================\r\nxxxx  ?? ??      TA_TAB      DW     TAB-1      ;$C0...192...TAB(\r\nxxxx  ?? ??      TA_TO       DW     TO-1       ;$C1...193...TO\r\nxxxx  ?? ??      TA_FN       DW     FN-1       ;$C2...194...FN\r\nxxxx  ?? ??      TA_SPC      DW     SPC-1      ;$C3...195...SPC(\r\nxxxx  ?? ??      TA_THEN     DW     THEN-1     ;$C4...196...THEN\r\nxxxx  ?? ??      TA_AT       DW     AT-1       ;$C5...197...AT\r\nxxxx  ?? ??      TA_NOT      DW     NOT-1      ;$C6...198...NOT\r\nxxxx  ?? ??      TA_STEP     DW     STEP-1     ;$C7...199...STEP\r\n==============================================================================\r\nMath Operator addresses are in the Branch Address Table (MATHTBL) below.\r\nToken constants $C8~$D1 are used in it as Math Operator Precedence Codes.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nUnary Functions Branch Address Table: \r\n==============================================================================\r\n\r\nUNFNC       EQU    $D080          ;Same Addres as TN_END (next)\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5763":{
"Text":"------------------------------------------------------------------------------\r\nRead the Sector Address Data\r\nFour fields, in 4+4 encoding: Volume, Track, Sector, Cecksum\r\n------------------------------------------------------------------------------\r\n\r\nFound Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5638":{
"Text":"\r\n==============================================================================\r\nGenerate a decoder table for 6+2 encoded data.\r\n\r\nThis stores the values $00-$3F in a table on page 3.  The byte values that will be decoded are non-consecutive, so the decoder entries occupy various locations from $36C to $3D5.  Nearby bytes are left unchanged.\r\n\r\nWe want 64 values that have the high bit set and don\u0027t have two consecutive 0 bits.  This is required by the disk hardware.  There are 70 possible values, so we also mandate that there are two adjacent 1 bits, excluding bit 7.  (Note that $D5 and $AA, used to identify sector headers, do not meet these criteria, which means they never appear in the encoded data.)\r\n\r\nIn the code below, a ASL+BIT+BCS test checks for adjacent 1 bits: if no two are adjacent, the BIT test will be zero.  If the high bit is set, ASL will set the carry.\r\n\r\nWhen we ORA the original and shifted values together, if there were three \r\nadjacent 0 bits, there will still be at least two adjacent 0 bits.  We EOR to invert the bits, and then look for two adjacent 1 bits.  We do this by just shifting right until a 1 bit shifts into the carry, and if the A-Reg is nonzero we know there were at least two 1 bits.  We need to ignore the bits on the ends: the nonzero MSB (high bit) was handled earlier, and the LSB (low bit) can false-positive because ASL always shifts a 0 in (making it look like a 0 in the low bit is adjacent to another 0), so we just mask those off with the AND.\r\n\r\nFor example, we want to decode $A6 to $07.  Y=$07 when X=$26...\r\n\r\n  TXA --\u003e 0010 0110\r\n  ASL --\u003e 0100 1100 C=0 (high bit is clear)\r\n  BIT --\u003e           Z=0 (only possible with adjacent bits)\r\n  ORA --\u003e 0110 1110     (adjacent 0 bits become visible)\r\n  EOR --\u003e 1001 0001     (turn them into 1 bits)\r\n  AND --\u003e 0001 0000     (ignore the hi/lo)\r\n  LSR --\u003e 0000 1000     (repeat until A=0 C=1)\r\n==============================================================================\r\n\r\n------------------------------------------------------------------------------\r\nMake Decoder/Conversion Table\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5652":{
"Text":"\r\n------------------------------------------------------------------------------\r\nCheck for Double Zeroes\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5657":{
"Text":"------------------------------------------------------------------------------\r\nLoops while Z-Flag=0 (or while resultant A-Reg\u003c\u003e0), or [logically equivalent]\r\nLoops until Z-Flag=1 (or until resultant A-Reg=0).    \r\n------------------------------------------------------------------------------\r\nShouldn\u0027t this branch be based on the Carry flag, too?  Yes \u0026 No! ... \r\nBCS starts the loop, so is effectively tested next, after BNE.  The loop is done (exited) when BNE drops through or BCS branches out of (or over) it.\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5665":{
"Text":"\r\n------------------------------------------------------------------------------\r\nPrepare the Hardware\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5691":{
"Text":"\r\n------------------------------------------------------------------------------\r\nBlind-Seek to Track Zero\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5724":{
"Text":"\r\n------------------------------------------------------------------------------\r\nSector Read routine.\r\n\r\nRead bytes until we find an address header (D5 AA 96) or \r\ndata header (D5 AA AD), depending on which mode we\u0027re in.\r\n\r\nThis will also be called by the BOOT1 code read from the floppy disk.\r\n\r\nOn entry:\r\n  X: slot * 16\r\n  $26-27: data pointer\r\n  $3d: desired sector\r\n  $41: desired track\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5798":{
"Text":"\r\n------------------------------------------------------------------------------\r\nRead the 6+2 encoded sector data.\r\n\r\nValues range from $96 - $FF.  They must have the high bit set, and must not have three consecutive zeroes.\r\n\r\nThe data bytes are written to disk with a rolling XOR to compute a checksum, so we read them back the same way.  We keep this in the A-Reg for the duration.  The actual value is always in the range [$00 to $3F=(%00111111)] (six-bits).\r\n\r\nOn entry:\r\n  (A-Reg)=($00)\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5845":{
"Text":"\r\n------------------------------------------------------------------------------\r\nDecode the 6+2 encoding.  The high 6 bits of each byte are in place, now we just need to shift the low 2 bits of each in.\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5867":{
"Text":"------------------------------------------------------------------------------\r\nAdvance the data pointer and sector number, and check to see if the sector number matches the first byte of BOOT1.  If it does, we\u0027re done.  If not, go read the next sector.\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5714":{
"Text":"                                    ;A-Reg is 0 when MON_WAIT Returns\r\n                                    ;So we\u0027re looking for Track=0 Sector=0",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5765":{
"Text":"Address Header Loop:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5800":{
"Text":"\r\n------------------------------------------------------------------------------\r\nRead Twos Loop:                     ;Read 86 Bytes of Data into $0300-$0355\r\n                                    ;Each byte has 3 sets of 2 bits, encoded\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5818":{
"Text":"\r\n------------------------------------------------------------------------------\r\nRead Sixes Loop:                    ;Read 256 Bytes of Data into $800-$8FF\r\n                                    ;Each byte has the high 6 bits, encoded\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5835":{
"Text":"\r\n------------------------------------------------------------------------------\r\nRead Checksum Loop:                 ;Read the Checksum Byte\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5810":{
"Text":"[($2D6)=($356-$80)=(CNVTBL-128)]    ;1st Entry is at [($2D6+$96)=($36C)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5828":{
"Text":"[($2D6)=($356-$80)=(CNVTBL-128)]    ;1st Entry is at [($2D6+$96)=($36C)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5843":{
"Text":"[($2D6)=($356-$80)=(CNVTBL-128)]    ;1st Entry is at [($2D6+$96)=($36c)]\r\n                                    ;Does Checksum Byte match A-Reg Byte?\r\n                                    ;NO, BNE: Try to find an Undamaged Sector\r\n                                    ;YES, BNE does not happen: Drop Through\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5849":{
"Text":"Decode 6+2 Encoding Loop:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"5880":{
"Text":"------------------------------------------------------------------------------\r\nBoot-Strapping of the BOOT code is done; Now execute the BOOT code\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1536":{
"Text":"\r\n==============================================================================\r\nThe following Address Space ($B600-$B6FF) is a copy (or vice-versa) of the\r\nSlot 6 Address Space (SLOT6)=($C600-$C6FF).            [See below to read it.]\r\n------------------------------------------------------------------------------\r\nThis code does not need to analyzed twice, so it is densely packed here.\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"0":{
"Text":"\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n==============================================================================\r\nRAM [ROM Image file] Space ($B000-$BFFF): This is RAM on a real Apple II Plus.\r\n==============================================================================\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n\r\n==============================================================================\r\nEmpty Address Space (MTSPC1)=($B000-$B5FF)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"1792":{
"Text":"\r\n==============================================================================\r\nEmpty Address Space (MTSPC2)=($B700-$BFFF)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"8238":{
"Text":"The HOME command goes directly to the Autostart F8 Monitor HOME routine:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"8290":{
"Text":"The RETURN command and the POP command (above), both go to the POPRTN handler:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"8286":{
"Text":"The Ampersand (\"\u0026\") command jumps directly to the Page 3 Ampersand Vector:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"8258":{
"Text":"The POP command and the RETURN command (below), both go to the POPRTN handler:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9801":{
"Text":"==============================================================================\r\n\"NEW\" Statement: Immediate and Deferred; No parameters; Deletes current\r\n                 program and all variables.  [Initializes for a NEW Program!]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9834":{
"Text":"                                    ;This could have been DFB $2C, a fake BIT \r\n                                    ;OpCode to skip the next line, but this\r\n                                    ;way also prevents next branch from being\r\n                                    ;taken\r\n\r\n==============================================================================\r\n\"CLEAR\" Statement: Immediate and Deferred; No parameters; Zeroes all\r\n                   variables, arrays and strings; Resets pointers and stacks\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10313":{
"Text":"==============================================================================\r\n\"RESTORE\" Statement: Immediate and Deferred; No Parameters or Options;\r\n                     Resets the Data Pointer back to the beginning of all Data\r\n==============================================================================\r\n                                                       [(A,Y)={Low,High}]=[*]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16220":{
"Text":"==============================================================================\r\nOdd Polynomial Subroutine\r\n\r\n  F(x) = x * P(x^2)\r\n\r\n  Where: x is Value in FAC\r\n         [(A,Y)={Low,High}] Points at Coefficient Table\r\n         1st Byte of Coefficient Table is Index: (Polynomial Coeficients)-1\r\n         Coefficients follow, Highest Power 1st\r\n\r\n  P(x^2) Series Computed using Normal Polynomial Subroutine\r\n\r\n==============================================================================\r\nComputes ax+bx^3+cx^5+... where SERPTR (A,Y) points to Coeficients ...c,b,a.\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10603":{
"Text":"==============================================================================\r\n\"POP\" \u0026 \"RETURN\" Statements: Immediate and Deferred; No Parameters or Options\r\n                             (Both commands come here to this handler)\r\n==============================================================================\r\nPOP removes return address from top of stack only; RETURN removes return address from top of stack \u0026 uses it to go to statement following last GOSUB\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9879":{
"Text":"==============================================================================\r\nReset TXTPTR to TXTTAB-1, Start of Program\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9754":{
"Text":"==============================================================================\r\nSearch for a Specific Line\r\n==============================================================================\r\nOn Entry: Search the Program for the Line whose Number is in LINNUM.\r\nOn  Exit: Carry is Set If Found, or Clear If Not Found, \u0026\r\n          LOWTR points to Line If Found, or to Next Line If Not Found.\r\n==============================================================================\r\nLINNUM = Line # to Find:\r\n           If Not Found: Carry = 0; LOWTR Points at Next Line\r\n               If Found: Carry = 1; LOWTR Points at Line Specified\r\n==============================================================================\r\n\r\nSearch for Line # (from Start of Program):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9893":{
"Text":"==============================================================================\r\n\"LIST\" Statement: Immediate and Deferred; Parms: [LineNum1] [[-|,] LineNum2];\r\n                  Lists the current Applesoft BASIC program or any part of it\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9975":{
"Text":"==============================================================================\r\nLIST ONE LINE\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9905":{
"Text":"----------------------------------- ;Start at Line 0",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10028":{
"Text":"==============================================================================\r\nGet Character from Table; Pointer is (FAC)\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10036":{
"Text":"==============================================================================\r\nIs it a Token?\r\n------------------------------------------------------------------------------\r\nThere are 107 Applesoft BASIC Tokens ranging in value from 128 to 234 ($80 to $EA).  Hexadecimally these Token values are negative numbers with their highest bit set.  Subtracing 127 ($7F) from those values gives them ordinal values from 1 to 107 ($01 to $6B).  Hexadecimally these ordinal values are positive numbers with their highest bit clear.  Token Names in the Token Name Table vary in length, but they are Dextral Character Inverted (DCI), meaning that their characters are all low ASCII except for the last character in each Token Name, which is high ASCII.  This routine uses these facts to scan through the Token Name Table to find the location of a Token Name based on its Token value converted to its ordinal value.   Also, to help with this task, it uses the GETCHAR subroutine just above.  The FAC is used to hold the location.\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9989":{
"Text":"                                    ;If Past Column 33, Start a New Line:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10007":{
"Text":"----------------------------------- ;End of Line (A-Reg=0)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10020":{
"Text":"                                    ;Branch if Not End of Program\r\n----------------------------------- ;End of Program, Put Cursor on a New Line",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19624":{
"Text":"==============================================================================\r\nMon Wait Subroutine: [This is a Simple Algorithm for a Quadratic Equation!]\r\n==============================================================================\r\nWait Time is from Call (JSR MON_WAIT) to End of Return to Caller (End of RTS);\r\nWait Time in Microseconds at the Non-Accelerated Speed of an Apple II Plus is:\r\n  [Time]=[Delay (5*(Acc*Acc)+27*Acc+26)/2 Cycles]*[1.023 Microseconds/Cycle]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Delay (26+27*Acc+5*(Acc*Acc))/2 Cycles\r\n                                    ;v--[Cycles/Operation]\r\n                                    ;6: For \"JSR MON_WAIT\" to get here!",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10052":{
"Text":"------------------------------------------------------------------------------\r\nSkip through Token Names until Count-Down-Index depletes itself, thus loacating the Token Name needed:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10086":{
"Text":"==============================================================================\r\n\"FOR\" Statement: Immediate and Deferred; Parameters:\r\n                 FOR real avar = aexpr1 TO aexpr2 [STEP aexpr3];\r\n                 See also: \"TO Phrase\", \"STEP Phrase\", \u0026 \"NEXT Statement\"\r\n==============================================================================\r\nFOR Pushes 18 bytes onto the STACK:\r\n------------------------------------------------------------------------------\r\n  2 - TXTPTR\r\n  2 - Line Number\r\n  5 - Initial (Current) FOR Variable Value\r\n  1 - Step Sign\r\n  5 - Step Value\r\n  2 - Address of FOR Variable in VARTAB\r\n  1 - FOR Token ($81)\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16933":{
"Text":"==============================================================================\r\n\"PLOT\" Statement: Immediate \u0026 Deferred; Parameters: PLOT Aexpr1, Aexpr2\r\n==============================================================================\r\nPlots a Point of current COLOR at [(X,Y)={Aexpr1,Aexpr2}] on the Lo-Res Screen\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17005":{
"Text":"==============================================================================\r\n\"TRACE\" Statement: Immediate \u0026 Deferred; No Parameters; Enables DeBug Mode\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17007":{
"Text":"==============================================================================\r\n\"NOTRACE\" Statement: Immediate \u0026 Deferred; No Parameters; Disables DeBug Mode\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17011":{
"Text":"==============================================================================\r\n\"NORMAL\" Statement: Immediate \u0026 Deferred; No Parameters\r\n==============================================================================\r\nSets Normal Video Input/Output Mode: White Letters on Black Background\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9308":{
"Text":"------------------------------------------------------------------------------\r\nNumbered Line Handler (Input is a new Program Line)\r\n------------------------------------------------------------------------------\r\nTo see: \"How Applesoft BASIC Programs Are Arranged In Memory\",\r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", pages 5 to 8\r\n------------------------------------------------------------------------------\r\nTo see: \"How Applesoft BASIC Program Lines Are Constructed\", \r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", page 15\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9397":{
"Text":"------------------------------------------------------------------------------Insert a New Line into the Program                      [*]=[(A,Y)={Low,High}]\r\n------------------------------------------------------------------------------\r\nTo see: \"How Applesoft BASIC Programs Are Arranged In Memory\",\r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", pages 5 to 8\r\n------------------------------------------------------------------------------\r\nTo see: \"How Applesoft BASIC Program Lines Are Constructed\", \r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", page 15\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9383":{
"Text":"------------------------------------------------------------------------------\r\nMove Block Down: Move Higher Program Lines Down, Over Deleted \u0026 Prior Lines\r\n------------------------------------------------------------------------------\r\n                                    ;Do it NOW: Move ALL Bytes \u0026 Pages Down",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9458":{
"Text":"==============================================================================\r\nClear All Variables \u0026 Re-Establish All Forward Links    [*]=[(A,Y)={Low,High}]\r\n==============================================================================\r\nForward Links are the Next-Line Address-Pointers at the start of each Program-\r\nLine that point to the NEXT Program-Line; Prgm-Lines are Numbered \u0026 Tokenized!\r\n==============================================================================\r\nFIXLINKS is aldo called when a Line Number alone is typed (e.g., ]0\u003cReturn\u003e)\r\n==============================================================================",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10350":{
"Text":"------------------------------------------------------------------------------\r\n\"ISCTRLC LDA KBD\" got CTRLCH \u0026 \"GETLOWKEY JSR INCHR\" made it CTRLCL, so should pass both \"STOP BCS END2\" \u0026 \"END2 BNE BAS_RTS06\" tests below \u0026 STOP a program!\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\n\"STOP\" Statement: Immediate and Deferred; No Parameters or Options;\r\n                  Causes a program to cease execution (with an Error Message)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10328":{
"Text":"==============================================================================\r\nCtrl-C KeyPress: Immediate Only; No Parameters or Options; Causes a program\r\n                 to cease execution (with an Error Message) immediately\r\n                 after the statement that is currently being executed\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10339":{
"Text":"\u003c\u003c\u003c This is NOT A BUG!  It has a purpose.  It should NOT be: \"BIT $C010\" as\r\n    per Bob Sander-Cederlof\u0027s \"S-C DocuMentor: Applesoft\" (see ** below).  \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\nEntry Point to continue processing INPUT Statement when the input is a Ctrl-C:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9448":{
"Text":"                                    ;Reseting Variables Ups EOP (LOMEM=FRESPC)\r\n----------------------------------- ;Copy New-Line-Image into Program:\r\n                                    ;LOWTR is Pointer to the New-Line-Area",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9516":{
"Text":"\r\n==============================================================================\r\nRead a Line and Strip Off Sign Bits to make Characters Low ASCII\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9555":{
"Text":"==============================================================================\r\nRead a Charater and Strip Off its Sign Bit to make it Low ASCII\r\n==============================================================================\r\n\r\n------------------------------------------------------------------------------\r\n*** Why should this be, \"INCHR BIT $C010\", instead of \"INCHR JSR RDKEY\"? ***\r\n The following looks pretty straight forward to me.  Anyone could call this:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9561":{
"Text":"==============================================================================\r\nParse and Tokenize the Input Line?  Or, AUTORUN the Applesoft Program?\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9580":{
"Text":"------------------------------------------------------------------------------\r\nParse and Tokenize the Input Line\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9616":{
"Text":"------------------------------------------------------------------------------\r\nSearch Token Name Table for match, starting with current Char from Input Line\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9675":{
"Text":"------------------------------------------------------------------------------\r\nStore Character or Token in Output Line\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9705":{
"Text":"------------------------------------------------------------------------------\r\nHandle Literals, Characters between Quotes, or Remarks, by copying the Characters up to the Closing Quote or to the End of Line Character\r\n------------------------------------------------------------------------------\r\nThis is routine\u0027s Drop-Down-Into Entry Point (for Reminders: ENDCHR = 0)\r\nand its Loop-Back Reentry Point (for processing Literals: copying characters):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9721":{
"Text":"------------------------------------------------------------------------------\r\nAdvance Pointer to Next Token Name\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9744":{
"Text":"\r\n------------------------------------------------------------------------------\r\nEnd of Line  (In case we\u0027re in Direct Mode)\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9829":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9859":{
"Text":"==============================================================================\r\nInitialize Stack Pointer: Reset STACK to start at $01F8\r\n==============================================================================",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9187":{
"Text":"==============================================================================\r\nAssure sufficient Arrays-to-Strings Free-Space\r\n[(A,Y)={Low,High}] = Address to which Array Space needs to grow\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9232":{
"Text":"==============================================================================\r\nError Handler (Parts preceding Warm Restart): \r\n==============================================================================\r\n\r\n==============================================================================\r\nError Handler (Part 0): Insufficient Free-Space, Do Memory Full Error\r\n==============================================================================\r\n\r\n----------------------------------- ;Error Entry Point; Also User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9234":{
"Text":"\r\n==============================================================================\r\n\"ERROR\" Function: Error Handler (Part 1)\r\n==============================================================================\r\nPrint Error Message based on X-Reg\r\n----------------------------------------------------------------------------\r\n(X)=Offset In Error Message Table\r\n(ERRFLG) \u003e 128 If ON ERR is turned ON\r\n(CURLINH) = (CURLIN+1) = $FF If in Direct Mode\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9197":{
"Text":"                                    ;Else, Deficient Free-Spc, Collect Garbage\r\n------------------------------------------------------------------------------\r\nSave [(A,Y)={Low,High}], TEMP1, \u0026 TEMP2 to STACK (12 Bytes)\r\n[See also (below): \"Preamble about the Applesoft Floating Point Accumulators\"]\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9210":{
"Text":"------------------------------------------------------------------------------\r\nRestore TEMP2, TEMP1, \u0026 [(A,Y)={Low,High}] from STACK (12 Bytes)\r\n[See also (below): \"Preamble about the Applesoft Floating Point Accumulators\"]\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9207":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9221":{
"Text":"----------------------------------- ;[Next is similar to REASON (above)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9177":{
"Text":"------------------------------------------------------------------------------\r\nDo the Math: \u003e\u003e-----------\u003e ;(Acc) * 2 + 54 \u003e= 256      ;To set the carry flag\r\n                          \u003e ;(Acc) * 2      \u003e= 256 - 54 ;- Overhead bytes/page\r\n       Conclusion: \u003c---\u003c\u003c \u003e ;(Acc) * 2      \u003e= 202      ;= Maximum STACK bytes\r\n   ($64)\u003e=(Acc)\u003e=($65)    \u003e ;(Acc)          \u003e= 202 / 2  ;/ 2-bytes/Adr.Pointer\r\n        CC  |  CS         \u003e ;(Acc)          \u003e= 101      ;To set the carry flag\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9265":{
"Text":"==============================================================================\r\nError Handler (Final Part): Print Error Line Number then Do Warm Restart\r\n==============================================================================",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9276":{
"Text":"\r\n==============================================================================\r\nWarm RESTART Entry Point      (Monitor commands: Ctrl-C, 0G, 3D0G, or E003G)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9241":{
"Text":"==============================================================================\r\nError Handler (Part 3): ON ERR is turned ON, so Print an Error Message\r\n==============================================================================",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16680":{
"Text":"==============================================================================\r\nGENERIC.END \u0026 COLD.START                              [*]=[(A,Y)={Low,High}]\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16651":{
"Text":"------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit:\r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific\r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATNC HEX 76B383BDD3 |(FF) |$76-$80=$F6=-10 |$.B383BDD3 |-6.84793912E-4\r\n(!) POS_ATNC HEX 763383BDD3 |(00) |$76-$80=$F6=-10 |$.3383BDD3 |+1.96512662E-4\r\n(!) NEG_ATNC HEX 763383BDD3 |(FF) |$76-$80=$F6=-10 |$.3383BDD3 |-1.96512662E-4\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATNB HEX 791EF4A6F5 |(00) |$79-$80=$F9= -7 |$.1EF4A6F5 |+9.44692156E-4\r\n(!) POS_ATNB HEX 799EF4A6F5 |(00) |$79-$80=$F9= -7 |$.9EF4A6F5 |+4.85094216E-3\r\n(!) NEG_ATNB HEX 799EF4A6F5 |(FF) |$79-$80=$F9= -7 |$.9EF4A6F5 |-4.85094216E-3\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATNA HEX 7B83FCB010 |(FF) |$7B-$80=$FB= -5 |$.83FCB010 |-1.61117018E-6\r\n(!) POS_ATNA HEX 7B03FCB010 |(00) |$7B-$80=$FB= -5 |$.03FCB010 |+4.86701843E-4\r\n(!) NEG_ATNA HEX 7B03FCB010 |(FF) |$7B-$80=$FB= -5 |$.03FCB010 |-4.86701843E-4\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATN9 HEX 7C0C1F67CA |(00) |$7C-$80=$FC= -4 |$.0C1F67CA |+2.95963805E-3\r\n(!) POS_ATN9 HEX 7C8C1F67CA |(00) |$7C-$80=$FC= -4 |$.8C1F67CA |+3.42096380E-2\r\n(!) NEG_ATN9 HEX 7C8C1F67CA |(FF) |$7C-$80=$FC= -4 |$.8C1F67CA |-3.42096380E-2\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATN8 HEX 7CDE53CBC1 |(FF) |$7C-$80=$FC= -4 |$.DE53CBC1 |-5.42791328E-2\r\n(!) POS_ATN8 HEX 7C5E53CBC1 |(00) |$7C-$80=$FC= -4 |$.5E53CBC1 |+2.30291328E-2\r\n(!) NEG_ATN8 HEX 7C5E53CBC1 |(FF) |$7C-$80=$FC= -4 |$.5E53CBC1 |-2.30291328E-2\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATN7 HEX 7D1464704C |(00) |$7D-$80=$FD= -3 |$.1464704C |+9.95719654E-3\r\n(!) POS_ATN7 HEX 7D9464704C |(00) |$7D-$80=$FD= -3 |$.9464704C |+7.24571965E-2\r\n(!) NEG_ATN7 HEX 7D9464704C |(FF) |$7D-$80=$FD= -3 |$.9464704C |-7.24571965E-2\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATN6 HEX 7DB7EA517A |(FF) |$7D-$80=$FD= -3 |$.B7EA517A |-8.98023954E-2\r\n(!) POS_ATN6 HEX 7D37EA517A |(00) |$7D-$80=$FD= -3 |$.37EA517A |+2.73023954E-2\r\n(!) NEG_ATN6 HEX 7D37EA517A |(FF) |$7D-$80=$FD= -3 |$.37EA517A |-2.73023954E-2\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATN5 HEX 7D6330887E |(00) |$7D-$80=$FD= -3 |$.6330887E |+4.84324134E-2\r\n(!) POS_ATN5 HEX 7DE330887E |(00) |$7D-$80=$FD= -3 |$.E330887E |+1.10932413E-1\r\n(!) NEG_ATN5 HEX 7DE330887E |(FF) |$7D-$80=$FD= -3 |$.E330887E |-1.10932413E-1\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATN4 HEX 7E9244993A |(FF) |$7E-$80=$FE= -2 |$.9244993A |-1.42839808E-1\r\n(!) POS_ATN4 HEX 7E1244993A |(00) |$7E-$80=$FE= -2 |$.1244993A |+1.78398077E-2\r\n(!) NEG_ATN4 HEX 7E1244993A |(FF) |$7E-$80=$FE= -2 |$.1244993A |-1.78398077E-2\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATN3 HEX 7E4CCC91C7 |(00) |$7E-$80=$FE= -2 |$.4CCC91C7 |+7.49991205E-2\r\n(!) POS_ATN3 HEX 7ECCCC91C7 |(00) |$7E-$80=$FE= -2 |$.CCCC91C7 |+1.99999120E-1\r\n(!) NEG_ATN3 HEX 7ECCCC91C7 |(FF) |$7E-$80=$FE= -2 |$.CCCC91C7 |-1.99999120E-1\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATN2 HEX 7FAAAAAA13 |(FF) |$7F-$80=$FF= -1 |$.AAAAAA13 |-3.33333316E-1\r\n(!) POS_ATN2 HEX 7F2AAAAA13 |(00) |$7F-$80=$FF= -1 |$.2AAAAA13 |+8.33333157E-2\r\n(!) NEG_ATN2 HEX 7F2AAAAA13 |(FF) |$7F-$80=$FF= -1 |$.2AAAAA13 |-8.33333157E-2\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ATN1 HEX 8100000000 |(00) |$81-$80=$01= +1 |$.00000000 |+1.00000000E+0\r\n(!) POS_ATN1 HEX 8180000000 |(00) |$81-$80=$01= +1 |$.80000000 |+1.00000000E+0\r\n(!) NEG_ATN1 HEX 8180000000 |(FF) |$81-$80=$01= +1 |$.80000000 |-1.00000000E+0\r\n------------------------------------------------------------------------------\r\n\u003c\u003c\u003c Plugging NRM_ATN1 into \u0026 Printing FAC ($ED2EG) results in BLANK LINE!\r\n--Seems that when the mantissa is zero there\u0027s a problem printing numbers. \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\n* FACSIGN msb must be set ($80-$FF) to print a minus sign before a result #.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nGENERIC CHRGET [See it here!]\r\n==============================================================================\r\nGeneric copy of CHRGET/CHRGOT subroutine, which is copied into $00B1...$00C8 during initialization\r\n==============================================================================\r\nCornelis Bongers described several improvements to CHRGET in Micro Magazine or Call-A.P.P.L.E.  (I don\u0027t remember which or exactly when) -- BS-C\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16675":{
"Text":"==============================================================================\r\nRandome Number Seed: Initial value for random number, also copied in along with CHRGET, but erroneously: \u003c\u003c\u003c BUG: The last byte is not copied \u003e\u003e\u003e\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16590":{
"Text":"==============================================================================\r\nPolynomial ATN Coeficients      (Packed FAC Constants adjusted for accuracy)\r\n==============================================================================\r\n   A Modified Gregory Series is used here.  (Gregory converges too slowly!)\r\n------------------------------------------------------------------------------\r\nGregory\u0027s Series (published first by Leibniz) is one of the series which, when summed to infinity, yields a value of pi [pi=4*ATN(1)-(1E-9)=3.141592654...]:\r\n  pi=4*ATN(1)=4*[1-(1/3)+(1/5)-(1/7)+(1/9)-...+((-1)^(n-1))/(2n-1){+/-}...]\r\n------------------------------------------------------------------------------\r\npi/4=ATN(1)=4*[1-(1/3)+(1/5)-(1/7)+(1/9)-...+((-1)^(n-1))/(2n-1){+/-}...]/4\r\n    =4*[(1/4)-(1/12)+(1/20)-(1/28)+(1/36)-...+((-1)^(n-1))/(8n-4){+/-}...]\r\n------------------------------------------------------------------------------\r\npi/8=ATN(1)/2=4*[1-(1/3)+(1/5)-(1/7)+(1/9)-...+((-1)^(n-1))/(2n-1){+/-}...]/8\r\n    =4*[(1/8)-(1/24)+(1/40)-(1/56)+(1/72)-...+((-1)^(n-1))/(16n-8){+/-}...]\r\n==============================================================================\r\nQ1: Do these\r\n    Polynomial ATN Coeficients [POLYATN (Alternating ATN Series)] (below)\r\n    have simple formulas like the\r\n    Pi Coefficients [POLY_SIN (Alternating SIN Series)] (above) have?\r\nQ2: What is the Modification to the Gregory Series used here?\r\nQ3: -- A distributed divide by 4 or by 8, more or less, or something else?\r\nQ4: Do these numbers represent the fractions in the alternating series?\r\nQ5: How are these coeficients adjusted for accuracy?\r\n------------------------------------------------------------------------------\r\nI am looking for a pattern (mathematical equation for each coeficient) here;\r\nThis is all I have deduced so far: vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv -- JPD\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9284":{
"Text":"----------------------------------- ;CHRGET: Get Next Character/Token ZP-S/R",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9296":{
"Text":"                                    ;Also, if NO Input (\u003cReturn\u003e key pressed)\r\n----------------------------------- ;Else, Process the Line Input Directly:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16532":{
"Text":"\r\n------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit:\r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific\r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_PID2 HEX 81490FDAA2 |(00) |$81-$80=$01= +1 |$.490FDAA2 |+0.57079633E+0\r\n(!) POS_PID2 HEX 81C90FDAA2 |(00) |$81-$80=$01= +1 |$.C90FDAA2 |+1.57079633E+0\r\n(!) NEG_PID2 HEX 81C90FDAA2 |(FF) |$81-$80=$01= +1 |$.C90FDAA2 |-1.57079633E+0\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_PI   HEX 82490FDAA2 |(00) |$82-$80=$02= +2 |$.490FDAA2 |+1.14159265E+0\r\n(!) POS_PI   HEX 82C90FDAA2 |(00) |$82-$80=$02= +2 |$.C90FDAA2 |+3.14159266E+0\r\n(!) NEG_PI   HEX 82C90FDAA2 |(FF) |$82-$80=$02= +2 |$.C90FDAA2 |-3.14159266E+0\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_PIM2 HEX 83490FDAA2 |(00) |$83-$80=$03= +3 |$.490FDAA2 |+2.28318531E+0\r\n(!) POS_PIM2 HEX 83C90FDAA2 |(00) |$83-$80=$03= +3 |$.C90FDAA2 |+6.28318531E+0\r\n(!) NEG_PIM2 HEX 83C90FDAA2 |(FF) |$83-$80=$03= +3 |$.C90FDAA2 |-6.28318531E+0\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_QTR  HEX 7F00000000 |(00) |$7F-$80=$FF= -1 |$.00000000 |+2.50000000E-1\r\n(!) POS_QTR  HEX 7F80000000 |(00) |$7F-$80=$FF= -1 |$.80000000 |+2.50000000E-1\r\n(!) NEG_QTR  HEX 7F80000000 |(FF) |$7F-$80=$FF= -1 |$.80000000 |-2.50000000E-1\r\n------------------------------------------------------------------------------\r\n\u003c\u003c\u003c Plugging NRM_QTR into \u0026 Printing FAC ($ED2EG) results in nothing printed!\r\n--Seems that when the mantissa is zero there\u0027s a problem printing numbers. \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\nAlternating Sin Series:\r\n------------------------------------------------------------------------------\r\n(2*pi)^11/11! = ((2*(3.141592654))^11/(11*10*9*8*7*6*5*4*3*2)) |+1.50946426E+1\r\n(?) NRM_PI2B HEX 84E61A2D1B |(FF) |$84-$80=$04= +4 |$.E61A2D1B |-1.43813907E+1\r\n(!) POS_PI2B HEX 84661A2D1B |(00) |$84-$80=$04= +4 |$.661A2D1B |+6.38139068E+0\r\n(!) NEG_PI2B HEX 84661A2D1B |(FF) |$84-$80=$04= +4 |$.661A2D1B |-6.38139068E+0\r\n----------------------------|-----|----------------|-----------|--------------\r\n(2*pi)^9/9!   = ((2*(3.141592654))^9/(9*8*7*6*5*4*3*2)) = .... |+4.20586940E+1\r\n(?) NRM_PI29 HEX 862807FBF8 |(00) |$86-$80=$06= +6 |$.2807FBF8 |+1.00077971E+1\r\n(!) POS_PI29 HEX 86A807FBF8 |(00) |$86-$80=$06= +6 |$.A807FBF8 |+4.20077971E+1\r\n(!) NEG_PI29 HEX 86A807FBF8 |(FF) |$86-$80=$06= +6 |$.A807FBF8 |-4.20077971E+1\r\n----------------------------|-----|----------------|-----------|--------------\r\n(2*pi)^7/7!   = ((2*(3.141592654))^7/(7*6*5*4*3*2)) = ........ |+7.67058598E+1\r\n(?) NRM_PI27 HEX 8799688901 |(FF) |$87-$80=$07= +7 |$.99688901 |-7.67041703E+1\r\n(!) POS_PI27 HEX 8719688901 |(00) |$87-$80=$07= +7 |$.19688901 |+1.27041702E+1\r\n(!) NEG_PI27 HEX 8719688901 |(FF) |$87-$80=$07= +7 |$.19688901 |-1.27041702E+1\r\n----------------------------|-----|----------------|-----------|--------------\r\n(2*pi)^5/5!   = ((2*(3.141592654))^5/(5*4*3*2)) = ............ |+8.16052493E+1\r\n(?) NRM_PI25 HEX 872335DFE1 |(00) |$87-$80=$07= +7 |$.2335DFE1 |+1.76052237E+1\r\n(!) POS_PI25 HEX 87A335DFE1 |(00) |$87-$80=$07= +7 |$.A335DFE1 |+8.16052237E+1\r\n(!) NEG_PI25 HEX 87A335DFE1 |(FF) |$87-$80=$07= +7 |$.A335DFE1 |-8.16052237E+1\r\n----------------------------|-----|----------------|-----------|--------------\r\n(2*pi)^3/3!   = ((2*(3.141592654))^3/(3*2)) = ................ |+4.13417023E+1\r\n(?) NRM_PI23 HEX 86A55DE728 |(FF) |$86-$80=$06= +6 |$.A55DE728 |-4.13417021E+1\r\n(!) POS_PI23 HEX 86255DE728 |(00) |$86-$80=$06= +6 |$.255DE728 |+9.34170211E+0\r\n(!) NEG_PI23 HEX 86255DE728 |(FF) |$86-$80=$06= +6 |$.255DE728 |-9.34170211E+0\r\n----------------------------|-----|----------------|-----------|--------------\r\n(2*pi)        = (2*(3.141592654)) = .......................... |+6.28318531E+0\r\n(?) NRM_PI21 HEX 83490FDAA2 |(00) |$83-$80=$03= +3 |$.490FDAA2 |+2.28318531E+0\r\n(!) POS_PI21 HEX 83C90FDAA2 |(00) |$83-$80=$03= +3 |$.C90FDAA2 |+6.28318531E+0\r\n(!) NEG_PI21 HEX 83C90FDAA2 |(FF) |$83-$80=$03= +3 |$.C90FDAA2 |-6.28318531E+0\r\n------------------------------------------------------------------------------\r\n* FACSIGN msb must be set ($80-$FF) to print a minus sign before a result #.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nHIDDEN EASTER EGG                                          by James P. Davis\r\n==============================================================================\r\nSupposedly, this proves that Applesoft is a Bill Gates / Microsoft product:\r\n------------------------------------------------------------------------------\r\nEaster Egg = \"MICROSOFT!\" Backward\r\nXOR each byte with $87 to convert the character codes to ASCII\r\n------------------------------------------------------------------------------\r\n       [$A6 D3 C1 C8 D4 C8 D5 C4 CE CA] XOR $87 = ASCII: \"!TFOSORCIM\";\r\n       [$CA CE C4 D5 C8 D4 C8 C1 D3 A6] XOR $87 = ASCII: \"MICROSOFT!\":\r\n------------------------------------------------------------------------------\r\n  $A6 D3 C1 C8 D4 C8 D5 C4 CE CA reversed is $CA CE C4 D5 C8 D4 C8 C1 D3 A6\r\n  ============================== \u003c----+----\u003e ==============================\r\n   $A6 XOR $87 = $21 = 33 = \"!\"  \\\\\\\\\\|/////  $CA XOR $87 = $4D = 77 = \"M\"\r\n   $D3 XOR $87 = $54 = 84 = \"T\"   \\\\\\\\|////   $CE XOR $87 = $49 = 73 = \"I\"\r\n   $C1 XOR $87 = $46 = 70 = \"F\"    \\\\\\|///    $C4 XOR $87 = $43 = 67 = \"C\"\r\n   $C8 XOR $87 = $4F = 79 = \"O\"     \\\\|//     $D5 XOR $87 = $52 = 82 = \"R\"\r\n   $D4 XOR $87 = $53 = 83 = \"S\"   A  \\|/  |   $C8 XOR $87 = $4F = 79 = \"O\"\r\n   $C8 XOR $87 = $4F = 79 = \"O\"   |  /|\\  V   $D4 XOR $87 = $53 = 83 = \"S\"\r\n   $D5 XOR $87 = $52 = 82 = \"R\"     //|\\\\     $C8 XOR $87 = $4F = 79 = \"O\"\r\n   $C4 XOR $87 = $43 = 67 = \"C\"    ///|\\\\\\    $C1 XOR $87 = $46 = 70 = \"F\"\r\n   $CE XOR $87 = $49 = 73 = \"I\"   ////|\\\\\\\\   $D3 XOR $87 = $54 = 84 = \"T\"\r\n   $CA XOR $87 = $4D = 77 = \"M\"  /////|\\\\\\\\\\  $A6 XOR $87 = $21 = 33 = \"!\"\r\n------------------------------------------------------------------------------\r\nSee: \"Bill Gates\u0027 Personal Easter Eggs in 8 Bit BASIC\"\r\n      \u003chttps://www.pagetable.com/?p=43\u003e\r\n==============================================================================\r\n               \u003c\u003c\u003c THE NEXT TEN BYTES ARE NEVER REFERENCED \u003e\u003e\u003e\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c You can change them in (Apple II Plus) Emulator ROM images! \u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16542":{
"Text":"==============================================================================\r\n\"ATN\" Arctangent Function: [ARCTAN(FAC)]\r\n==============================================================================\r\n   A Modified Gregory Series is used here.  (Gregory converges too slowly!)\r\n------------------------------------------------------------------------------\r\nGregory\u0027s Series (published first by Leibniz) is one of the series which, when summed to infinity, yields a value of pi [pi=4*ATN(1)-(1E-9)=3.141592654...]:\r\n  pi=4*ATN(1)=4*[1-(1/3)+(1/5)-(1/7)+(1/9)-...+((-1)^(n-1))/(2n-1){+/-}...]\r\n------------------------------------------------------------------------------\r\npi/4=ATN(1)=4*[1-(1/3)+(1/5)-(1/7)+(1/9)-...+((-1)^(n-1))/(2n-1){+/-}...]/4\r\n    =4*[(1/4)-(1/12)+(1/20)-(1/28)+(1/36)-...+((-1)^(n-1))/(8n-4){+/-}...]\r\n------------------------------------------------------------------------------\r\npi/8=ATN(1)/2=4*[1-(1/3)+(1/5)-(1/7)+(1/9)-...+((-1)^(n-1))/(2n-1){+/-}...]/8\r\n    =4*[(1/8)-(1/24)+(1/40)-(1/56)+(1/72)-...+((-1)^(n-1))/(16n-8){+/-}...]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16486":{
"Text":"==============================================================================\r\nPi Coefficients                   (Packed FAC Constants adjusted for accuracy)\r\n==============================================================================\r\nPi Constant \u0026 Formulas:\r\n------------------------------------------------------------------------------\r\n  pi = ............... = 3.141592654  |   2*pi = ............ = 6.283185308\r\n  pi = 4*ATN(1)-(1E-9) = 3.14159265   |   2*(4*ATN(1)-(1E-9)) = 6.28318530\r\n  \u003c\u003e  [4*ATN(1) = .... = 3.14159266]  |  [2*(4*ATN(1)) = .... = 6.28318532]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10352":{
"Text":"\r\n==============================================================================\r\n\"END\" Statement: Immediate and Deferred; No Parameters or Options;\r\n                 Causes a program to cease execution (w/o an Error Message)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10390":{
"Text":"==============================================================================\r\n\"CONT\" Statement: Immediate and Deferred; No Parameters or Options;\r\n                  Causes a program to resume execution at the next instruction\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10416":{
"Text":"==============================================================================\r\n\"SAVE\" Command Statement: Immediate and Deferred; No Parameters or Options;\r\n                          Writes Program onto a Cassette Tape (Audio Output)\r\n==============================================================================\r\n                                    ;Compute Program Length:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10441":{
"Text":"==============================================================================\r\n\"LOAD\" Command Statement: Immediate and Deferred; No Parameters or Options;\r\n                          Reads a Program from a Cassette Tape (Audio Input)\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10480":{
"Text":"------------------------------------------------------------------------------\r\nPrepare to Read/Write a 3-Byte Header from/to a Cassette Tape (Audio I/O)\r\n------------------------------------------------------------------------------\r\n                                    ;Point A1/A2 at LINNUM/TEMPPT ZP-Pointers:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10497":{
"Text":"------------------------------------------------------------------------------\r\nPrepare to Read/Write a Program from/to a Cassette Tape (Audio I/O)\r\n------------------------------------------------------------------------------\r\n                                    ;Copy SOP/EOP Pointers into A1/A2:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10514":{
"Text":"==============================================================================\r\n\"RUN\" Command Statement: Immediate and Deferred; Optional Parameter: [LineNum]\r\n==============================================================================\r\nClears all variables, pointers, and stacks, then runs the program from its start, or from the line number given, or returns control to the user if there is no program in memory.\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10529":{
"Text":"==============================================================================\r\n\"GOSUB\" Statement: Immediate and Deferred; Parameter: LineNum;\r\n                   Goes to a Subroutine at the line number given\r\n==============================================================================\r\nLeaves 7 bytes on Stack:\r\n       2 -- Return Address (NEWSTT)\r\n       2 -- TXTPTR\r\n       2 -- Line #\r\n       1 -- Gosub Token ($B0)\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10558":{
"Text":"==============================================================================\r\n\"GOTO\" Statement: Immediate and Deferred; Parameter: LineNum; Goes to the line\r\n                  number given; Also used by RUN \u0026 GOSUB Statements\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10609":{
"Text":"\r\n==============================================================================\r\n      \u003c\u003c\u003c BUG: Should be FORPTR+1 ($86); Should be $FFXX, Not $XXFF \u003e\u003e\u003e\r\n               \u003c\u003c\u003c SEE \"ALL ABOUT APPLESOFT\", PAGES 100-101 \u003e\u003e\u003e\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c You can change it in (Apple II Plus) Emulator ROM images! \u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\r\n==============================================================================\r\nPOP \u0026 RETURN Statements - BUG Serendipity Analysis:\r\n==============================================================================\r\nCornelis Bongers would never have discovered this bug if his subroutine was\r\nprogrammed correctly; like this below: |  NOT as he did it; like this below:\r\n+--------------------------------------+-------------------------------------+\r\n|  100 FOR I = 1 TO 100                |  100 FOR I = 1 TO 100               |\r\n|  110 IF A(I) = K THEN I = 100        |  110 IF A(I) = K THEN RETURN        |\r\n|  120 NEXT I : I = K : REM ALWAYS SO  |  120 NEXT I                         |\r\n|  130 RETURN : REM NATURE OF PROGRAM  |  130 RETURN                         |\r\n+--------------------------------------+-------------------------------------+\r\n A FOR/NEXT loop needs to finish properly to not leave garbage behind. -- JPD\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10645":{
"Text":"==============================================================================\r\n\"DATA\" Statement: Skips to next COLON or EOL; Deferred Only; Parameters: \r\n       DATA [literal|string|real|integer] [{, [literal|string|real|integer]}]\r\n==============================================================================\r\nDATA Statements create a list of elements to be used by READ Statements\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10625":{
"Text":"----------------------------------- ;Relay Error Entry Point; User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10628":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10648":{
"Text":"------------------------------------------------------------------------------\r\nAdvance Next Char/Token Pointer by Adding Offset to Next \":\" or EOL to it:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10659":{
"Text":"==============================================================================\r\nScan ahead \u0026 Get offset in Y-Reg to next \":\" or EOL\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10693":{
"Text":"==============================================================================\r\nPull Three Bytes Off of the Stack (Discards first two \u0026 Returns third): \r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10697":{
"Text":"==============================================================================\r\n\"IF\" Statement: Immediate and Deferred; Parameters:\r\n                IF expression  THEN  instruction  [{: instruction}]\r\n                IF expression  THEN  [GOTO]  linenumber\r\n                IF expression [THEN]  GOTO   linenumber\r\n==============================================================================\r\nIf expression evaluates to False (conditions = 0), instructions following THEN are ignored \u0026 program execution continues from the next numbered line; If expression evaluates to True (conditions \u003c\u003e 0), instructions following THEN are executed.\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10716":{
"Text":"==============================================================================\r\n\"REM\" (or False IF) Statement: Immediate and Deferred; Parameters: {Char|\"}\r\n==============================================================================\r\nAllows text of any sort to be inserted into a program as a Reminder; \r\nStatement-Separators (\":\") are ignored in Reminder statements; \r\nReminder statements are teminated only by a Return (CR/Null=EOL) character!\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10732":{
"Text":"==============================================================================\r\n\"ONGOTO\" or \"ONGOSUB\" Statements: Deferred Only; Applesoft \"CASE\" Statements\r\n                      Parameters: ON aexpr GOTO  linenum {[, linenum]}\r\n                              or: ON aexpr GOSUB linenum {[, linenum]}\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10764":{
"Text":"==============================================================================\r\nConvert ASC Number to HEX Number in LINNUM:\r\n==============================================================================\r\nEnter with: Carry Set to just reset LINNUM to $0000;\r\n            Carry Clear to Convert ASCII Digits to BIN/HEX Number in LINNUM;\r\n            \u0026 First Digit of ASCII Number in A-Reg \u0026 TXTPTR pointing to next\r\n            (e.g., CHR just GOT by CHRGET).\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10784":{
"Text":"==============================================================================\r\nI could not reproduce the problem said to exist here, so I deduced why!--JPD:\r\n==============================================================================\r\nThis branches when LINNUM+1 (Line Number, High) gets up to $19.  It never goes past $19, so it can never reach $AB [which would cause catastrophe (below)]; hense, this is not \"\u003c\u003c\u003c DANGEROUS CODE \u003e\u003e\u003e\" as said in the past!  Except, ...\r\n------------------------------------------------------------------------------\r\nSupposedly, if (A)=$AB on the line above, ONGOTOK will compare equal and cause a catastrophic jump to [some location that does not make sense was given here] (for GOTO), or to other locations for other calls to LINGET.  You can see this if you first put BRK in [the location that does not make sense], then type GOTO 43776.  Any value in the range: 43776~44031 ($AB00~$ABFF) will cause the problem.  [Logically, this seems correct, but it doesn\u0027t happen!  ON (1) GOSUB/GOTO 43776 works fine as long as line 43776 exists in the program.]\r\n------------------------------------------------------------------------------\r\n... It will happen if you accidentally type a line number (in your list of line numbers) that is in the Range times 10: (437760~440310)=($6AE00~$6B7F6)] which are illegal line numbers \u003e 63999.  [Who does that?  Shakey Fingers!]\r\n------------------------------------------------------------------------------\r\nNEW\r\n5  REM  ONGO.TEST\r\n10 TT = 1: ON 1 GOSUB 43750  : REM BELOW RANGE\r\n20 TT = 2: ON 1 GOTO  43760  : REM BELOW RANGE\r\n30 TT = 3: ON 1 GOSUB 44040  : REM ABOVE RANGE\r\n40 TT = 4: ON 1 GOTO  44050  : REM ABOVE RANGE\r\n50 TT = 5: ON 1 GOSUB 44000  : REM INSIDE RANGE\r\n60 TT = 6: ON 1 GOTO  44010  : REM INSIDE RANGE\r\n63 TT = 7: ON 1 GOSUB 440600 : REM ILLEGAL LINE NO. INSIDE 10*RANGE\r\n66 TT = 8: ON 1 GOTO  440700 : REM ILLEGAL LINE NO. INSIDE 10*RANGE\r\n70 PRINT \"PASSED ALL TESTS\"\r\n99 STOP\r\n43750 PRINT \"(\";TT;\") 1ST TEST ON GOSUB\" : GET A$: RETURN\r\n43760 PRINT \"(\";TT;\") 1ST TEST ON GOTO\"  : GET A$: GOTO 30\r\n44000 PRINT \"(\";TT;\") 3RD TEST ON GOSUB\" : GET A$: RETURN\r\n44010 PRINT \"(\";TT;\") 3RD TEST ON GOTO\"  : GET A$: GOTO 63\r\n44040 PRINT \"(\";TT;\") 2ND TEST ON GOSUB\" : GET A$: RETURN\r\n44050 PRINT \"(\";TT;\") 2ND TEST ON GOTO\"  : GET A$: GOTO 50\r\n44060 PRINT \"(\";TT;\") 4TH TEST ON GOSUB\" : GET A$: RETURN\r\n44070 PRINT \"(\";TT;\") 4TH TEST ON GOTO\"  : GET A$: GOTO 70\r\n==============================================================================\r\n                                    ;Multiply by Ten:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10822":{
"Text":"==============================================================================\r\n\"LET\" Statement: Immediate \u0026 Deferred;\r\n      Parameters: [LET] avar[subscript] = aexp; [LET] svar[subscript] = sexp\r\n==============================================================================\r\nThe Variable Name (on the left) is assigned the Value of the Number or String Expression (on the right); the LET is optional.\r\n==============================================================================\r\n                                    ;Do Var = Exp, Store Address In FORPTR:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10851":{
"Text":"------------------------------------------------------------------------------\r\nLET Integer Variable = Expression   (Parameters: [LET] avar[subscript] = aexp)\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10871":{
"Text":"------------------------------------------------------------------------------\r\nLET Real Variable = Expression      (Parameters: [LET] avar[subscript] = aexp)\r\n------------------------------------------------------------------------------\r\n                                    ;Store Packed FAC Real/FP Value in Var:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10875":{
"Text":"------------------------------------------------------------------------------\r\nInstall String:                     ;Descriptor Adrs is in TMPVPTR (FAC+3,4)\r\n                                    ;Is String Data already in Storage Area?\r\n----------------------------------- ;Test String Data Address, High:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10874":{
"Text":"------------------------------------------------------------------------------LET String Variable = Expression    (Parameters: [LET] svar[subscript] = sexp)\r\n------------------------------------------------------------------------------\r\nStructure of a String Pointer Variable:\r\n     Byte 0: Variable Name, Character 1 (positive)\r\n          1: Variable Name, Character 2 (negative)\r\n          2: String Length        ]\u003c\r\n          3: String Address, Low  ]\u003c--\u003c\u003c String Descriptor\r\n          4: String Address, High ]\u003c\r\n          5: Not Used\r\n          6: Not Used\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10913":{
"Text":"----------------------------------- ;The String Descriptor is a Variable\r\n                                    ;But, String Data is not in String Area\r\nMake New Descriptor                 ;(String Data may be inside the Program)\r\n----------------------------------- ;So, Make New String Descriptor:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10959":{
"Text":"------------------------------------------------------------------------------\r\nPrint String\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10965":{
"Text":"==============================================================================\r\n\"PRINT\" Statement: Immediate \u0026 Deferred; Alias: \"?\" \u003c- lists as PRINT;\r\nParameters: PRINT|? [{expression} [{,|; [{expression}] }] ] [,|;]\r\n            PRINT|? \u003c- a LF+CR is printed last unless followed by \",\"|\";\"\r\n            PRINT|? {expression;} \u003c- \";\" concatenates next [{expression}]\r\n            PRINT|? {;} \u003c- followed by list of \";\" is same as PRINT alone\r\n            PRINT|? {,} \u003c- followed by list of \",\" tabs 1 field per comma\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11011":{
"Text":"------------------------------------------------------------------------------\r\nTAB to Next Comma Column:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11003":{
"Text":"------------------------------------------------------------------------------\r\nPrint a Carriage \u003cReturn\u003e Character:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11030":{
"Text":"\r\n------------------------------------------------------------------------------\r\nEvaluate Formula \u0026 Format of TAB(X) or SPC(X) Function:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11055":{
"Text":"------------------------------------------------------------------------------\r\nPrint Next Character:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11061":{
"Text":"------------------------------------------------------------------------------\r\nPrint a Space:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11066":{
"Text":"                                    ;Always Taken\r\n\r\n==============================================================================\r\nPrint String at [(A,Y)={Low,High}]; String Must End with a Zero or a Quote:\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11069":{
"Text":"==============================================================================\r\nPrint String at TMPVPTR (FAC+3,4)\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11100":{
"Text":"\r\n==============================================================================\r\nPrint Character in A-Reg\r\n==============================================================================\r\nNote: POKE 243,32 [$20 in $F3 (FLASHBIT)] will convert output to lower case.\r\n      This can be cancelled by: POKE 243,0 ($00), NORMAL ($00), INVERSE ($00);\r\n      or FLASH ($40), POKE 243,64.\r\n==============================================================================",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11121":{
"Text":"==============================================================================\r\nInput Conversion Error: Illegal character in numeric field\r\n==============================================================================\r\n                                    ;Must resolve INPUT, READ, \u0026 GET",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17030":{
"Text":"==============================================================================\r\n\"HIMEM:\" Statement: Immediate \u0026 Deferred; Parameter: HIMEM: Aexpr1\r\n==============================================================================\r\nSets Highest Memory Address Available to a BASIC Program, including Variables,\r\nto Protect Memory above IT for Data, Graphics, or Machine Language Routines;\r\nAutomatically Set during Cold Start to Maximum RAM Memory Address in System;\r\nReset by RESET CTRL-B RETURN, which also Erases Any Stored Program; Not Reset\r\nby CLEAR, RUN, NEW, DEL, Changing or Adding a Program Line, or RESET alone;\r\nResets String Variable Pointers to Zero Difference, which is effectively the\r\nsame as Clearing String Variables!\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17015":{
"Text":"==============================================================================\r\n\"INVERSE\" Statement: Immediate \u0026 Deferred; No Parameters\r\n==============================================================================\r\nSets Inverse Video Input/Output Mode: Black Letters on White Background\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17024":{
"Text":"==============================================================================\r\n\"FLASH\" Statement: Immediate \u0026 Deferred; No Parameters\r\n==============================================================================\r\nSets Flashing Video Input/Output Mode: Alternating Normal (White Letters on Black Background) with Inverse (Black Letters on White Background) Modes [about two times per second] \r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17008":{
"Text":"                                    ;Trace OFF/ON Flag (\u003c128/\u003e127)~(bit-7)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17006":{
"Text":"                                    ;Trace OFF/ON Flag (\u003c128/\u003e127)~(bit-7)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17013":{
"Text":"                                    ;(Normal=$FF, Flash=$7F, Inverse=$3F)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17026":{
"Text":"                                    ;(Normal=$FF, Flash=$7F, Inverse=$3F)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17028":{
"Text":"                                    ;(Flash=$40, Lowercase=$20, Else=$00)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11131":{
"Text":"------------------------------------------------------------------------------\r\n                                    ;Tell where DATA is, rather than READ:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11135":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11142":{
"Text":"==============================================================================\r\nInput Error:\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11143":{
"Text":"------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11168":{
"Text":"==============================================================================\r\n\"GET\" Statement: Deferred Only; Parameter: GET var (one Applesoft variable)\r\n==============================================================================\r\nFetches one character from the keyboard w/o showing it on the screen \u0026 w/o requiring that the RETURN key be pressed.  (Best if var is a string variable.)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11186":{
"Text":"==============================================================================\r\n\"INPUT\" Statement: Deferred Only; Parameters: INPUT [string ;] var [{, var}];\r\n                   Reads a line of input from the current input device.\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11228":{
"Text":"==============================================================================\r\nThis subroutine is only used once by the Process Input List subroutine:\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11234":{
"Text":"==============================================================================\r\n\"READ\" Statement: Immediate \u0026 Deferred; Parameters: READ var [{,var}]; \r\n                  Reads values from DATA statements in the body of the program\r\n==============================================================================\r\n                                    ;[(X,Y)={Low,High}]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11241":{
"Text":"==============================================================================\r\nProcess Input List (for INPUT only; Not for GET nor READ):\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11243":{
"Text":"\r\n==============================================================================\r\nProcess Input List (for INPUT, GET, or READ):\r\n==============================================================================\r\nUpon Entry: (A) = Input Type = [INPUT=($00), GET=($40), READ=($98)]\r\n            [(X,Y)={Low,High}] = Input String Address\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11249":{
"Text":"\r\n==============================================================================\r\nProcess Input Item:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11295":{
"Text":"----------------------------------- ;Check the Type of Input (continued):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11307":{
"Text":"----------------------------------- ;Input Start",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11327":{
"Text":"----------------------------------- ;Set Terminatrs: Zero, Quote, Colon, Comma",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11363":{
"Text":"----------------------------------- ;Numeric Input?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11369":{
"Text":"----------------------------------- ;READ/DATA Input",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11378":{
"Text":"----------------------------------- ;Input More?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11417":{
"Text":"----------------------------------- ;READ/DATA Input?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11424":{
"Text":"----------------------------------- ;Doing a READ; Find the Data:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11462":{
"Text":"----------------------------------- ;No more INPUT requested",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11513":{
"Text":"==============================================================================\r\n\"NEXT\" Statement: Immediate and Deferred; Parameters: NEXT [avar [{,avar}]];\r\n                  Required Fourth Part of FOR/TO/STEP/NEXT Loop Statements;\r\n                  See also: \"FOR Statement\", \"TO Phrase\", \u0026 \"STEP Phrase\"\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11623":{
"Text":"----------------------------------- ;(Does Not Return!)\r\n\r\n\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n==============================================================================\r\nApplesoft - Part B, $DD67-$E79F:\r\nFormula Evaluation, Pointer Locating, \u0026 String Handling\r\n==============================================================================\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n\r\n\r\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\r\n==============================================================================\r\nTo see: \"How Applesoft BASIC Program Varables* Are Structured\"\r\n        *(Reals {Floating Point}, Integers, Strings, Functions, and Arrays),\r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", pages 21 to 24\r\n==============================================================================\r\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\r\n\r\n\r\n==============================================================================\r\nEvaluate \u0026 Assure Expression is Numeric\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11626":{
"Text":"\r\n==============================================================================\r\nAssure (FAC) Type is Numeric (VALTYP=$00)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11628":{
"Text":"==============================================================================\r\nAssure (FAC) Type is String (VALTYP=$FF)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11643":{
"Text":"==============================================================================\r\nExpression Format Evaluator\r\n==============================================================================\r\nEvaluate the Expression at TXTPTR; Leave the Result in the FAC\r\n(This subroutine works for both String \u0026 Numeric Expressions) \r\n==============================================================================\r\n\r\nMain Formula Evaluation Routine: On entry TXTPTR points to 1st chr of Formula:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11629":{
"Text":"\r\n==============================================================================\r\nDetermine (FAC) Type: Numeric (VALTYP=$00) or String (VALTYP=$FF)?\r\n             Returns: Numeric (Carry)=(0)  or String (Carry)=(1)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11654":{
"Text":"------------------------------------------------------------------------------\r\nPrepare to Check for Relational Operators (\u003c,=,\u003e)\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11669":{
"Text":"------------------------------------------------------------------------------\r\nCheck for Relational Operators (\u003c,=,\u003e)\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11672":{
"Text":"------------------------------------------------------------------------------\r\nCheck for Relational Operators (\u003c,=,\u003e) Loop\r\n------------------------------------------------------------------------------\r\nTokens: |  Hexadecinal | \"\u003e\" is $CF | \"=\" is $D0 | \"\u003c\" is $D1 |\r\n        |      Decinal | \"\u003e\" is 207 | \"=\" is 208 | \"\u003c\" is 209 |\r\n        | Zero-Ordinal | \"\u003e\" is   0 | \"=\" is   1 | \"\u003c\" is   2 |\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11700":{
"Text":"------------------------------------------------------------------------------\r\nIs it a Relational Operator (\u003c,=,\u003e)?\r\n------------------------------------------------------------------------------\r\n                                    ;Now (A)=[(0|1|2) for (\"\u003e\"|\"=\"|\"\u003c\")]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11717":{
"Text":"------------------------------------------------------------------------------\r\nIt is NOT a Relational Operator (\u003c,=,\u003e); Nor is it a Concatenation of Strings!\r\n------------------------------------------------------------------------------\r\n                                    ;Now (A)=(1|2|3|4): Last VALTYP was a Num\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11748":{
"Text":"------------------------------------------------------------------------------\r\nFound one or more Relational Operators (\u003c,=,\u003e); Evaluate Math Equation:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11773":{
"Text":"------------------------------------------------------------------------------\r\nStack this Operation and call FRMEVL for another one               (Recursive)\r\n------------------------------------------------------------------------------\r\n                                    ;Now (Y)=[(0|3|6|9) for (\"+\"|\"-\"|\"*\"|\"/\")]\r\n                                    ;Push Rest of OP:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11725":{
"Text":"------------------------------------------------------------------------------\r\nCheck Form \u0026 Precedence Test\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11789":{
"Text":"------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11792":{
"Text":"==============================================================================\r\nStack (FAC): Set INDEX for Return \u0026 Push FAC (Values \u0026 Sign Bytes [2 kinds])\r\n==============================================================================\r\n|     Three entry points:      |     None return across a page boundary:     |\r\n|     -------------------      |     -----------------------------------     |\r\n|     PSHFAC, from FRMEVL      |     Above at $DE05; Returns to $DE08        |\r\n|     PSHFACX, from STEP       |     Above at $D7C6; Returns to $D7C9        |\r\n|     PUSHFAC, from FOR        |     Above at $D7AC; Returns to $D7AF        |\r\n==============================================================================\r\n\r\n------------------------------------------------------------------------------\r\nFRMEVL Entry Point, to Push FAC (Values \u0026 Sign Byte [MSB]):\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18936":{
"Text":"----------------------------------- ;(E)-Format Instructions (8)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18920":{
"Text":"----------------------------------- ;(C)-Format Instructions (8)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19000":{
"Text":"----------------------------------- ;(E)-Format Instructions (8)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18912":{
"Text":"----------------------------------- ;(B)-Format Instructions (8)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18984":{
"Text":"----------------------------------- ;(C)-Format Instructions (8)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18928":{
"Text":"----------------------------------- ;(D)-Format Instructions (8)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18976":{
"Text":"----------------------------------- ;(B)-Format Instructions (8)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18992":{
"Text":"----------------------------------- ;(D)-Format Instructions (8)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18609":{
"Text":"                                    ; 0=1 Byte, 1=2 Byte, 2=3 Byte)\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n *** [The following section is different in the Apple IIE Autostart ROM] ***\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18868":{
"Text":"----------------------------- | ----------------------------------------------\r\n(*) Bytes will be Saved for   | Only those Noted: *1=One Op; *2=Two Ops\r\n    Address Field Formatting -\u003e Mask Gets 2-Bit LENGTH: FMT2,X AND #%00000011\r\n[See also (above): FMT1 NOTE] | (OpCodeBytes-1: 0=1 Byte, 1=2 Byte, 2=3 Byte)\r\n============================= | ==============================================\r\n\r\n============================= | ==============================================\r\n    Address Printout          | Apple II Reference Manual Listings:\r\n    CHAR1 Bytes: \",),#($\"     | New Monitor \u003c\u003e Old Monitor: ASC \",),#($\"\r\n============================= | ==============================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18874":{
"Text":"\r\n============================= | ==============================================\r\n    Address Printout          | Apple II Reference Manual Listings:\r\n    CHAR2 Bytes: \"Y0X$$0\"     | New Monitor = Old Monitor: \"Y\",0,\"X$$\",0\r\n============================= | ==============================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18880":{
"Text":"\r\n============================= | ==============================================\r\n     Mnemonic Forms:          | MNEML \u0026 MNEMR Instruction Formats\r\n      (A) XXXXX000            |\r\n      (B) XXXYY100            | [(X)=(Index into Table)]\r\n      (C) 1XXX1010            |\r\n      (D) XXXYYY10            |\r\n      (E) XXXYYY01            |\r\n============================= | ==============================================\r\n     Mnemonic Left Bytes      | MNEML Instruction Formats (64)\r\n============================= | ==============================================\r\n\r\n------------------------------------------------------------------------------\r\nThese are the 1st Packed Bytes of the Mnemonics: There are 3 Packed Chars per\r\n2 Byte Mnemonic [5 Bits/Char: (%CHAR1,CHA ~ %R2,CHAR3#) \u0026 a Trailing Bit];\r\nEach Mnemonic Character is a 5 Bit Number + High ASCII \"?\" [=(5 Bit #)+($BF)]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;(A)-Format Instructions (32)\r\n                                    ; |  vvv---------[MNEML+MNEMR]--------\r\n                                    ; |   v    CHAR1     CHAR2     CHAR3\r\n                                    ;--- ---  --------  --------  --------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18944":{
"Text":"\r\n\u003c---[Page Boundary]\r\n\r\n============================= | ==============================================\r\n    Mnemonic Right Bytes      | MNEMR Instruction Formats (64)\r\n============================= | ==============================================\r\n\r\n------------------------------------------------------------------------------\r\nThese are the 2nd Packed Bytes of the Mnemonics: There are 3 Packed Chars per\r\n2 Byte Mnemonic [5 Bits/Char: (%CHAR1,CHA ~ %R2,CHAR3#) \u0026 a Trailing Bit];\r\nEach Mnemonic Character is a 5 Bit Number + High ASCII \"?\" [=(5 Bit #)+($BF)]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;(A)-Format Instructions (32)\r\n                                    ; |  vvv---------[MNEML+MNEMR]--------\r\n                                    ; |   v    CHAR1     CHAR2     CHAR3\r\n                                    ;--- ---  --------  --------  --------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19008":{
"Text":"==============================================================================\r\nEnd of Miniassembler/Disassembler Instruction Display Tables\r\n==============================================================================\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nStart of Section (FA40-FA61): Moved Here from FA86-FAA4 in Old Monitor ROM\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n==============================================================================\r\nIRQ/BRK Handler:\r\n==============================================================================\r\nIn this ROM Image, IRQ NEVER HAPPENS!...because OLDRST Vector ($FF59) is used:\r\n------------------------------------------------------------------------------\r\nWhat Should \u0026 Should Not Be:            \u003c-[From end of this ROM Image listing]\r\n------------------------------------------------------------------------------\r\nFFFE: 40 FA  DW     IRQ             ;IRQ Vector    ($FA40) IS Right; \r\nFFFE: 59 FF  DW     OLDRST          ;OLDRST Vector ($FF59) IS Wrong! \u003c\u003c BUG \u003e\u003e\r\n------------------------------------------------------------------------------\r\n       \u003c\u003c\u003c BUG can be fixed in (Apple II Plus) Emulator ROM images! \u003e\u003e\u003e\r\n==============================================================================\r\n\r\n----------------------------------- ;IRQ Handler\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19042":{
"Text":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nEnd of Section (FA40-FA61): Moved Here from FA86-FAA4 in Old Monitor ROM\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nStart of Section (FA62-FAD6): New in Autostart [New Monitor] ROM\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n==============================================================================\r\nAutostart [New Monitor] \"RESET\"; \u003c\u003e [(\"OLDRST\")=(Old Monitor \"RESET\")]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18527":{
"Text":"------------------------------------------------------------------------------\r\nNEXTCOLOR is Not in the New Monitor listing; NXTCOL is the Label here in the\r\nOld Monitor listing, but it is used elsewhere in this listing; (See below)\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Next Color: Increment Plotting Color by 3\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18545":{
"Text":"==============================================================================\r\nMiniassembler/Disassembler Instruction Display Subroutines\r\n==============================================================================\r\nFor an explanation about how this works (sort of), see:\r\nA 6502 Disassembler from Apple, Dr. Dobbs Journal, 09/76; \r\nFTP://Public.Asimov.Net/Pub/Apple_II/Documentation/Programming/6502Assembly/6502%20Disassembler%20-%201976.PDF\r\n==============================================================================\r\n\r\n----------------------------------- ;Get 4-bit Color at Column,Row Coord\u0027s:\r\n                                    ;[Enter with (A)=Row; (Y)=Column]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18553":{
"Text":"                                    ;Get Right or Left Half-Byte on Carry; \r\n                                    ;AKA: Low or High Nibble, Respectively:\r\n                                    ;[SCRN2--Used by Mini-/Dis-Assembler]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19225":{
"Text":"\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nEnd of Section (FAFD-FB18): New in Autostart [New Monitor] ROM\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n==============================================================================\r\n6502 Registers (Letter-Names)\r\n==============================================================================\r\n\r\nRTBL Must ORG $FB19 for New Monitor to remain equal to Old Mmonitor ROM\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20428":{
"Text":"==============================================================================\r\nCharacter Table: Used to Decode Keyboard Input (23 Monitor Commands)\r\n==============================================================================\r\n\r\n             DFB    $NN = \u003c-----\u003e = ;F({[High ASCII of \"Char\"] XOR $B0}+$89)\r\n             ==========             ;=========================================\r\n             \\V/    \\V/             ;  Mon.Cmds  Subroutines  Actions\r\n             ---    ---             ;  --------   --------   -----------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20451":{
"Text":"\r\n==============================================================================\r\nSubroutine Address Table: Used by TOSUB to Push onto Stack for RTS;\r\nIndex Program Counter (PC) with Table Item for Subroutine Entry;\r\nAddresses: (Subroutine)-1; (MSB)=(#$FE); (LSB)=(Table Entry)+1\r\n==============================================================================\r\n\r\n             LSB    Subroutines     ;Mon.Cmds   Actions \r\n             ---    -----------     ;--------   ---------------- \r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20474":{
"Text":"\r\n==============================================================================\r\n6502 Interrupt Vector Table\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20458":{
"Text":"------------------------------------------------------------------------------\r\n\u003c\u003c\u003c BUG! -- Should Be: DFB $C3, Not DFB $C4; for STEPZ-1 ($FEC4-1 = $FEC3) \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\nTurns out that this is not really a BUG.  The way it is coded now, the Apple\r\nII Plus Autostart STEP (S) Command is the same as the USER (Ctrl-Y) Command *\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19968":{
"Text":"==============================================================================\r\nEnd of Display Screen Scroll Window Output Routines\r\n==============================================================================\r\n\r\n\u003c---[Page Boundary]\r\n\r\n==============================================================================\r\nMonitor Command Handlers: $FE is the High/Page Address of All Monitor Command Handlers Referenced via the Monitor Command Subroutine Address Table (@ $FFE3)\r\n==============================================================================\r\n\r\n==============================================================================\r\nMore Memory Dump Routines:\r\n==============================================================================\r\n\r\n==============================================================================\r\nMonitor (\u0026 Miniassembler) \"Blank\" Command Handlers:\r\n==============================================================================\r\n\r\n----------------------------------- ;Handle Carriage Return as a Blank:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20224":{
"Text":"\u003c---[Page Boundary]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20162":{
"Text":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nStart of Section (FEC2-FEC9): New in Autostart [New Monitor] ROM\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n==============================================================================\r\nMonitor Trace \"T\" Command Handler: *AdrsT                      [NOT USED NOW!]\r\n==============================================================================\r\n\r\n----------------------------------- ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20164":{
"Text":"\r\n==============================================================================\r\nMonitor Step \"S\" Command Handler: *AdrsS                       [NOT USED NOW!]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20170":{
"Text":"\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nEnd of Section (FEC2-FEC9): New in Autostart [New Monitor] ROM\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n==============================================================================\r\nMonitor User (\"Ctrl-Y\") Command Handler: *\u003cCtrl-Y\u003e\r\n==============================================================================\r\n\r\n----------------------------------- ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20455":{
"Text":"------------------------------------------------------------------------------\r\nSTEP \u0026 TRACE are now like USR (via CHRTBL): The way it is coded now, the Apple\r\nII Plus Autostart TRACE (T) Command is the same as the USER (Ctrl-Y) Command *\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18562":{
"Text":"==============================================================================\r\nDisassembler Instruction Display Subroutine: Prints Program Counter, followed by a Blank; Gets an OpCode; Then Generates FORMAT \u0026 LENGTH Bytes: \r\n==============================================================================\r\n\r\n----------------------------------- ;Display Instruction Line Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18611":{
"Text":"\r\n==============================================================================\r\nForm an Index into the Mnemonic Table from an OpCode: (A)=[(OpCode)--\u003e(Index)]\r\n==============================================================================\r\n    OpCode -\u003e Index   for OpCd-Form; Example OpCodes \u0026 Exceptions\r\n-- -------- --------- --- ---------- -----------------------------------------\r\n1) 1XXX1010-\u003e00101XXX  ~  %1###1010; $8A,$9A,$AA,$BA,$CA,$DA,$EA,$FA.\r\n2) XXXYYY01-\u003e00111XXX  ~  %######01; Not $#3~$#4; $#1,$#5,$#9,$#D.\r\n3) XXXYYY10-\u003e00110XXX  ~  %######10; Not $#0~$#1; $#2,$#6,$#A,$#E.\r\n4) XXXYY100-\u003e00100XXX  ~  %#####100; Not $#0~$#3; $#4,$#C.\r\n5) XXXXX000-\u003e000XXXXX  ~  %#####000; Not $#1~$#7; $#0,$#8.\r\n-- -------- --------- --- ---------- -----------------------------------------\r\n   ^^^^^^^^ Bits: X\u0027s, 0\u0027s, \u0026 1\u0027s are Shifted Right; Y\u0027s are Discarded. \r\n            #\u0027s are Bits: 0 or 1; or Hexadecimal Numbers: 0~9,A~F\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18637":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18622":{
"Text":"                                    ;NO, Masked Byte\u0027s for OpCode\u003c\u003e(%1###1010)\r\n                                    ;                  ^[2~5 in Chart above]^\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19055":{
"Text":"------------------------------------------------------------------------------\r\nWARNING: Annunciator Terminology is/was Counter Intuitive!\r\nThese New Mnemocics/Labels are NOT!\r\n------------------------------------------------------------------------------\r\n                                    ;Initialize Annunciator Outputs:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19067":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19159":{
"Text":"------------------------------------------------------------------------------\r\n\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nEnd of Section (FA62-FAD6): New in Autostart [New Monitor] ROM\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n==============================================================================\r\nDisplay User Register Contents with Labels\r\n==============================================================================\r\nACC          EQU    $45           ;A-Reg Safe (Accumulator) [Destroys A5H!]\r\nXREG         EQU    $46           ;X-Reg Safe (Index Register X)\r\nYREG         EQU    $47           ;Y-Reg Safe (Index Register Y)\r\nSTATUS       EQU    $48           ;P-Reg Safe (Status Register)\r\nSPNT         EQU    $49           ;S-Reg Safe (Stack Pointer)\r\n==============================================================================\r\n\r\nREGDSP Must ORG $FAD7 for New Monitor to remain equal to Old Mmonitor ROM\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19113":{
"Text":"                                    ;centered on top line of Screen\r\n\r\n------------------------------------------------------------------------------\r\nSet Page 3 Vectors:\r\n------------------------------------------------------------------------------\r\n Set New BRK Vector (BRKV) to OLDBRK ($FA59);\r\n Set Soft Entry Vector (SOFTEV) to Cold Start BASIC Vector ($E000);\r\n Set Powered-Up Flag (PWREDUP) to $45 = (SOFTEV+1) EOR #$A5.\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19201":{
"Text":"\u003c---[Page Boundary] (in the middle of the DWord above)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19217":{
"Text":"\r\n==============================================================================\r\nCursor Keys Translation Table\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19110":{
"Text":"==============================================================================\r\nPower-Up Reset\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19197":{
"Text":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nStart of Section (FAFD-FB18): New in Autostart [New Monitor] ROM\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n==============================================================================\r\nPower-Up Reset Data\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19124":{
"Text":"\r\n------------------------------------------------------------------------------\r\nFind Disk Drive Controller Slot\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19157":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19202":{
"Text":"                                    ;^(PWREDUP)=(SOFTEV+1)EOR(#$A5)\r\n\r\n==============================================================================\r\nDisk Drive Controller ID-Bytes; For Slot (7 To 0) Scan [SLOOP/NXTBYT above]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19209":{
"Text":"                                    ;ler, which would not be good!\r\n\r\n==============================================================================\r\nTitle to be displayed, centered on top line of Screen\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19296":{
"Text":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nStart of Section (FB60-FBC0): New in Autostart [New Monitor] ROM\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n==============================================================================\r\nDisplay TITLE (\"Apple ][\") centered on top line of Screen\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19180":{
"Text":"                                    ;^(X)=[($FB=251={-5})~($FF=255={-1})]\r\n                                    ;^[RTBL-251]=[MNEMR+30]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19170":{
"Text":"                                    ;[A3-Reg ($40-$41)]=[(ACC)=($0045)]**",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19230":{
"Text":"==============================================================================\r\nRead Paddle (X-Reg), Return Time-Count in (Y-Reg)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19247":{
"Text":"==============================================================================\r\nInitialize Video Screen for Text Mode\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12542":{
"Text":"==============================================================================\r\nThe Number -32768                            [(Deficient) Packed FAC Constant]\r\n==============================================================================\r\n\u003c\u003c\u003c Meant to be -32768, which would be $9080000000, but it\u0027s 1 Byte short, so it picks up $20 from next instruction, making it $9080000020, -32768.00049 \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12546":{
"Text":"==============================================================================\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit:\r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific \r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec \r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) BAD32768 HEX 9080000020 |(FF) |$90-$80=$10=+16 |$.80000020 |-3.27680005E+4\r\n(!) POS32768 HEX 9080000000 |(00) |$90-$80=$10=+16 |$.80000000 |+3.27680000E+4\r\n(!) NEG32768 HEX 9080000000 |(FF) |$90-$80=$10=+16 |$.80000000 |-3.27680000E+4\r\n------------------------------------------------------------------------------\r\nHexadecimal point moves +16 bits (4 nibbles) \u0026      $8000.0020 = 32768.00049\r\n    Decimal point moves 4 digits to the right:      $8000.0000 = 32768.00000\r\n------------------------------------------------------------------------------\r\nPlugging it into \u0026 Printing FAC ($ED2EG) results in +32768, not -32768, unless\r\n* FACSIGN msb is also set ($80-$FF), which causes printing of the minus sign!\r\n==============================================================================\r\n\r\n\u003c\u003c\u003c ====================================================================== \u003e\u003e\u003e\r\n\u003c\u003c\u003c BUG in Constant NEG32768:                                              \u003e\u003e\u003e\r\n\u003c\u003c\u003c ====================================================================== \u003e\u003e\u003e\r\n\u003c\u003c\u003c  Another mistake(?) here in Billy-Boy\u0027s (Microsoft?/Applesoft!) BASIC  \u003e\u003e\u003e\r\n\u003c\u003c\u003c ---------------------------------------------------------------------- \u003e\u003e\u003e\r\n\u003c\u003c\u003c          BUG: 10 A=-32768.00049 : A%=A : REM This is accepted          \u003e\u003e\u003e\r\n\u003c\u003c\u003c               20 PRINT A,A% : REM But this shows that:                 \u003e\u003e\u003e\r\n\u003c\u003c\u003c               30 REM A=-32768.0005 (OK), A%=32767 [No Error?]          \u003e\u003e\u003e\r\n\u003c\u003c\u003c               40 REM WRONG! WRONG! WRONG!         [See above]          \u003e\u003e\u003e\r\n\u003c\u003c\u003c ---------------------------------------------------------------------- \u003e\u003e\u003e\r\n\u003c\u003c\u003c     You cannot change this in (Apple II Plus) Emulator ROM images!     \u003e\u003e\u003e\r\n\u003c\u003c\u003c ====================================================================== \u003e\u003e\u003e\r\n\r\n\r\n==============================================================================\r\nEvaluate Numeric Formula at TXTPTR\r\nConverting Result to Integer (0 \u003c= X \u003c= 32767) in TMPVPTR (FAC+3,4)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19393":{
"Text":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nEnd of Section (FB60-FBC0): New in Autostart [New Monitor] ROM\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n==============================================================================\r\nCalculate Text Base Address (BASH,BASL) for Left End of Screen Line Number\r\n(Not Window Line Number) in A-Reg [# Range: (0~23)=($00~$17)=(%00000~%10111)]\r\n==============================================================================\r\n BASCALC [to set Text Line Base Address (BASH,BASL)] is almost identical to \r\nGBASCALC [to set Graphics Base Address (GBASH,GBASL)]\r\n---------------------------vv-------------------------vv----------vv----vv----\r\nF847: 48 4A 29 03 09 04 85 27 68 29 18 90 02 69 7F 85 26 0A 0A 05 26 85 26 60\r\nFBC1: 48 4A 29 03 09 04 85 29 68 29 18 90 02 69 7F 85 28 0A 0A 05 28 85 28 60\r\n------------------------------------------------------------------------------\r\nNote: Indexed Addressing of the Base Address ZP Pointers would allow S/R\u0027s \r\nto be combined into one S/R with one or two different Entry Points to preset \r\nwhich task is being processed (e.g., GBASL,X \u0026 GBASH,X \u0026 X=0 or X=2)\r\n------------------------------------------------------------------------------\r\n    GBASL    EQU     $26            ;Graphics Base Address, Low\r\n    GBASH    EQU     $27            ;Graphics Base Address, High\r\n    BASL     EQU     $28            ;Text Base Address, Low\r\n    BASH     EQU     $29            ;Text Base Address, High\r\n==============================================================================\r\n\r\nBASCALC Must ORG $FBC1 for New Monitor to remain equal to Old Mmonitor ROM\r\n\r\n----------------------------------- ;Set Line Base Address (BASH,BASL):\r\n                                    ;^[RAM Address of Text Line Specified]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12883":{
"Text":"----------------------------------- ;Dimension {Check/Look-Up/Search} Loop:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14611":{
"Text":"==============================================================================\r\nThe Number One (1)                                       (Packed FAC Constant)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14616":{
"Text":"\r\n------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit:\r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific \r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec \r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ONE  HEX 8100000000 |(00) |$81-$80=$01= +1 |$.00000000 |+1.00000000E+0\r\n(!) POS_ONE  HEX 8180000000 |(00) |$81-$80=$01= +1 |$.80000000 |+1.00000000E+0\r\n(!) NEG_ONE  HEX 8180000000 |(FF) |$81-$80=$01= +1 |$.80000000 |-1.00000000E+0\r\n------------------------------------------------------------------------------\r\n\u003c\u003c\u003c Plugging CON_ONE into \u0026 Printing FAC ($ED2EG) results in BLANK LINE, not 1\r\n--Seems that when the mantissa is zero there\u0027s a problem printing numbers! \u003e\u003e\u003e\r\n------------------------------------------------------------------------------  * FACSIGN msb must be set ($80-$FF) to print a minus sign before a result #.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nPolynomial Log Coefficients       (Packed FAC Constants adjusted for accuracy)\r\n==============================================================================\r\nLogarithm Formulas:\r\n------------------------------------------------------------------------------\r\n     Log (base b) N = ln(N) / ln(b)\r\n     Log (base 2) N = ln(N) / ln(2)\r\n==============================================================================\r\nHow do these \"*X^N+\" Poly Logs work?  We\u0027re not talking about baby frogs here!\r\n------------------------------------------------------------------------------\r\nAccording to Michael Pohoreski (AppleWin Debugger Developer), \"Applesoft uses Horner\u0027s Rule [a polynomial evaluation method] when it calculates a partial Taylor Series.  See: \u003chttps://en.wikipedia.org/wiki/horner\u0027s_method\u003e\"\r\n------------------------------------------------------------------------------\r\nAccording to Kent Dicky, \"A useful approximation to many functions over limited ranges is something like: f(x) = A*x + B*x^2 + C*x^3 + D*x^4, etc. where \u0027x\u0027 is the input number, and A,B,C,D are constants that depend on the function being evaluated.  [Which seems to fit here.]  For example, the Taylor series: sin(x) = [x=(x^1)/(1!)] - (x^3)/(3!) + (x^5)/(5!) - (x^7)/(7!) + ....\"\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14637":{
"Text":"\r\n   [Packed FAC Constants or Not?  These do NOT print the numbers expected!]\r\n------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit: \r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific \r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec \r\n----------------------------|-----|----------------|-----------|--------------\r\nNRM_PLOG_7   HEX 7F5E56CB79 |(00) |$7F-$80=$FF= -1 |$.5E56CB79 |+1.84255942E-1\r\nPOS_PLOG_7   HEX 7FDE56CB79 |(00) |$7F-$80=$FF= -1 |$.DE56CB79 |+4.34255942E-1\r\nNEG_PLOG_7   HEX 7FDE56CB79 |(FF) |$7F-$80=$FF= -1 |$.DE56CB79 |-4.34255942E-1\r\n----------------------------|-----|----------------|-----------|--------------\r\nNRM_PLOG_5   HEX 80139B0B64 |(00) |$80-$80=$00= +0 |$.139B0B64 |+7.65845413E-2\r\nPOS_PLOG_5   HEX 80939B0B64 |(00) |$80-$80=$00= +0 |$.939B0B64 |+5.76584541E-1\r\nNEG_PLOG_5   HEX 80939B0B64 |(FF) |$80-$80=$00= +0 |$.939B0B64 |-5.76584541E-1\r\n----------------------------|-----|----------------|-----------|--------------\r\nNRM_PLOG_3   HEX 8076389316 |(00) |$80-$80=$00= +0 |$.76389316 |+4.61800759E-1\r\nPOS_PLOG_3   HEX 80F6389316 |(00) |$80-$80=$00= +0 |$.F6389316 |+9.61800759E-1\r\nNEG_PLOG_3   HEX 80F6389316 |(FF) |$80-$80=$00= +0 |$.F6389316 |-9.61800759E-1\r\n----------------------------|-----|----------------|-----------|--------------\r\nNRM_PLOG_1   HEX 8238AA3B20 |(00) |$82-$80=$02= +2 |$.38AA3B20 |+8.85390073E-1\r\nPOS_PLOG_1   HEX 82B8AA3B20 |(00) |$82-$80=$02= +2 |$.B8AA3B20 |+2.88539007E+0\r\nNEG_PLOG_1   HEX 82B8AA3B20 |(FF) |$82-$80=$02= +2 |$.B8AA3B20 |-2.88539007E+0\r\n------------------------------------------------------------------------------\r\n* FACSIGN msb must be set ($80-$FF) to print a minus sign before a result #.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nMiscellaneous Coefficients                              (Packed FAC Constants)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14657":{
"Text":"------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit: \r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific \r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec \r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_SQRH HEX 803504F334 |(00) |$80-$80=$00= +0 |$.3504F334 |+2.07106781E-1\r\n(!) POS_SQRH HEX 80B504F334 |(00) |$80-$80=$00= +0 |$.B504F334 |+7.07106781E-1\r\n(!) NEG_SQRH HEX 80B504F334 |(FF) |$80-$80=$00= +0 |$.B504F334 |-7.07106781E-1\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_SQR2 HEX 813504F334 |(00) |$81-$80=$01= +1 |$.3504F334 |+0.41421356E+0\r\n(!) POS_SQR2 HEX 81B504F334 |(00) |$81-$80=$01= +1 |$.B504F334 |+1.41421356E+0\r\n(!) NEG_SQR2 HEX 81B504F334 |(FF) |$81-$80=$01= +1 |$.B504F334 |-1.41421356E+0\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_HALF HEX 8000000000 |(00) |$80-$80=$00= +0 |$.00000000 |+5.00000000E-1\r\n(!) POS_HALF HEX 8080000000 |(00) |$80-$80=$00= +0 |$.80000000 |+5.00000000E-1\r\n(!) NEG_HALF HEX 8080000000 |(FF) |$80-$80=$00= +0 |$.80000000 |-5.00000000E-1\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_LN2  HEX 80317217F8 |(00) |$80-$80=$00= +0 |$.317217F8 |+1.93147181E-1\r\n(!) POS_LN2  HEX 80B17217F8 |(00) |$80-$80=$00= +0 |$.B17217F8 |+6.93147181E-1\r\n(!) NEG_LN2  HEX 80B17217F8 |(FF) |$80-$80=$00= +0 |$.B17217F8 |-6.93147181E-1\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\n\"LOG\" Function: Immediate \u0026 Deffered; Parameter: LOG (Aexpr);\r\n      Returns the Natural Logarithm (ln) of a Positive Number (Aexpr)\r\n      [(e=2.71828183...) is Euler\u0027s Constant, the Base for Natural Logarithms]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14819":{
"Text":"==============================================================================\r\nUnpack Floating Point Number at [(A,Y)={Low,High}] \r\ninto ARG (Secondary Floating Point Accumulator)\r\n==============================================================================\r\n[Wouldn\u0027t a general purpose copier S/R (using pointers \u0026 loops) be better?\r\n --Especially for all the Applesoft S/R\u0027s that move things like this one?]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Unpack FP# at [(A,Y)={Lo,Hi}] into ARG:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14886":{
"Text":"==============================================================================\r\n\u003c\u003c\u003c  Another mistake(?) here in Billy-Boy\u0027s (Microsoft?/Applesoft!) BASIC  \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\nAbout code above: \u003c\u003c\u003c Crazy to jump way back there!  Same identical code is\r\nbelow! Instead of BNE ADDEXPS3 \u0026 JMP ZFACSGN, only need BEQ ADDEXPS4 *     \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\nEA21: D0 03     BNE  ADDEXPS3 ;\u003c* Instead of this, replace w/ following line,\u003e\r\nEA21: F0 02     BEQ  ADDEXPS4 ;Branch if Result is Zero           \u003c* Do this!\u003e\r\nEA23: 4C 52 E8  JMP  ZFACSGN  ;Result is Zero          \u003c* \u0026 Remove this line!\u003e\r\n------------------------------------------------------------------------------\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c * You can change it in (Apple II Plus) Emulator ROM images!  \u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14891":{
"Text":"==============================================================================\r\nOUT OF RANGE; Called from EXP Function\r\n==============================================================================\r\nIf (FAC) is Positive, Give OVERFLOW Error\r\nIf (FAC) Is Negative, Set FAC=0, POP one Return, and RTS\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14862":{
"Text":"==============================================================================\r\nAdd Exponents of ARG and FAC (called by FMULT and FDIV)\r\n==============================================================================\r\nAlso check for overflow, and set result sign\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11015":{
"Text":"------------------------------------------------------------------------------\r\n\u003c\u003c\u003c BUG: It Should be 32; It\u0027s a BUG if the Window Width is less than 33!  \u003e\u003e\u003e\r\n\u003c\u003c\u003c So, it should be based on Window Width (WNDWDTH=$21) less 16 columns.  \u003e\u003e\u003e\r\n\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c\u003c You can change it in (Apple II Plus) Emulator ROM images! \u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12569":{
"Text":"                                    ;Rtns: (A)=(-1|0|1)\u003c--(A,Y)=[(\u003e|=|\u003c) FAC]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12556":{
"Text":"==============================================================================\r\nConvert FAC to an integer; Must be -32767 \u003c= FAC \u003c= 32767\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12552":{
"Text":"==============================================================================\r\nConvert FAC to Integer; Must be positive and less than 32768\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15282":{
"Text":"==============================================================================\r\nCompare FAC with Packed Number at [(A,Y)={Low,High}]; \r\nReturn (A)=(-1|0|1) as [(A,Y)={Low,High}] is (\u003e|=|\u003c) FAC, respectively\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15346":{
"Text":"==============================================================================\r\nQuick Greatest Integer Function: Convert Real in FAC to just its Integer Part!\r\n==============================================================================\r\nConverts FP Value in FAC to an Integer Value in FAC Mantissa (FAC+1,2,3,4), by Shifting Right with FAC Sign Extension until all Fractional Bits are outed.\r\n------------------------------------------------------------------------------\r\nAssumes FAC \u003c (2^31 = $8000,0000): FAC Binary Mantissa\u0027s Most Significant Bit (msb) is Sign Bit, leaving 31 Value Bits, hense FAC\u0027s Upper Limit is (2^31).\r\n------------------------------------------------------------------------------\r\nThe Initial Exponent (of 2^31) for 32 Bits is [($20)+($80)]=($A0), so the FAC Exponent (FACX) must be less than ($A0).  Hense, if (FACX\u003e=$A0) there are NO Fractional Bits to Shift Right, but if (FACX\u003c$A0) there are, \u0026 (FACX-$A0) determines how many there are [as a Single Byte Negative Number; e.g., if (FACX=$99), (FACX-$A0)=($F9)=(-7), there are Seven Bits to Shift Right].\r\n==============================================================================\r\nTo see: \"How Applesoft BASIC Floating Point Math, Constants, \u0026 FAC Behave\",\r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", pages 52 to 54\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12571":{
"Text":"------------------------------------------------------------------------------\r\nGo to Quick Greatest Integer Function:\r\nConverts FP Value in FAC to Integer Value in FAC Mantissa.\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14130":{
"Text":"----------------------------------- ;No BUG here!  Strings start at HIMEM-1 \u0026\r\n                                    ;build downward!  HIMEM=$BFFF IS the Byte\r\n                                    ;above the 1st String, NOT KBD=$C000!\r\n----------------------------------- ;Setup 6502 Registers \u0026 Evaluate String:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15977":{
"Text":"\r\n------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit:\r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific \r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec \r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_HALF HEX 8000000000 |(00) |$80-$80=$00= +0 |$.00000000 |+5.00000000E-1\r\n(!) POS_HALF HEX 8080000000 |(00) |$80-$80=$00= +0 |$.80000000 |+5.00000000E-1\r\n(!) NEG_HALF HEX 8080000000 |(FF) |$80-$80=$00= +0 |$.80000000 |-5.00000000E-1\r\n------------------------------------------------------------------------------\r\n\u003c\u003c\u003c Plugging NRM_HALF into \u0026 Printing FAC ($ED2EG) results in nothing printed!\r\n--Seems that when the mantissa is zero there\u0027s a problem printing numbers. \u003e\u003e\u003e\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nPowers of 10: (Decimal/Hexadecimal Constants) \u003c\u003c\u003c[NOT Packed FAC Constants]\u003e\u003e\u003e\r\n==============================================================================\r\n       From 1E+8 down to 1, as 32-bit integers, with alternating signs:\r\n           %(s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n        Hexadecimal Constant        |   Decimal  | ^Exp |   Qword   |  Word\r\n------------------------------------|------------|------|-----------|---------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15972":{
"Text":"==============================================================================\r\nThe Number One Half (1/2)                                (Packed FAC Constant)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16013":{
"Text":"------------------------------------------------------------------------------\r\nDECTBLEND    EQU    *             ;$EE8D\r\n==============================================================================\r\n\r\n==============================================================================\r\n\"SQR\" Square Root Function: Immediate \u0026 Deferred; Parameter: SQR (Aexpr); Returns Positive Square Root of a Number (Aexpr); This uses exponentiation SQR(x) = x^.5, rather than a Newton-Raphson iteration, but this special implementation is faster than the normal one. \r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15626":{
"Text":"==============================================================================\r\nReally BIG Numbers                                      (Packed FAC Constants)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15641":{
"Text":"------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit: \r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific \r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec \r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_E8M1 HEX 9B3EBC1FFD |(00) |$9B-$80=$18=+24 |$.3EBC1FFD |+3.28911359E+7\r\n(!) POS_E8M1 HEX 9BBEBC1FFD |(00) |$9B-$80=$18=+24 |$.BEBC1FFD |+9.99999999E+7\r\n(!) NEG_E8M1 HEX 9BBEBC1FFD |(FF) |$9B-$80=$18=+24 |$.BEBC1FFD |-9.99999999E+7\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_E9M1 HEX 9E6E6B27FD |(00) |$9E-$80=$1E=+30 |$.6E6B27FD |+4.63129087E+8\r\n(!) POS_E9M1 HEX 9EEE6B27FD |(00) |$9E-$80=$1E=+30 |$.EE6B27FD |+9.99999999E+8\r\n(!) NEG_E9M1 HEX 9EEE6B27FD |(FF) |$9E-$80=$1E=+30 |$.EE6B27FD |-9.99999999E+8\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_E9   HEX 9E6E6B2800 |(00) |$9E-$80=$1E=+30 |$.6E6B2800 |+4.63129088E+8\r\n(!) POS_E9   HEX 9EEE6B2800 |(00) |$9E-$80=$1E=+30 |$.EE6B2800 |+1.00000000E+9\r\n(!) NEG_E9   HEX 9EEE6B2800 |(FF) |$9E-$80=$1E=+30 |$.EE6B2800 |-1.00000000E+9\r\n------------------------------------------------------------------------------\r\n* FACSIGN msb must be set ($80-$FF) to print a minus sign before a result #.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nPrint Line Number\r\n==============================================================================\r\n\r\n----------------------------------- ;Print \" IN \u003cLINE #\u003e\":\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16091":{
"Text":"==============================================================================\r\nLOG (base 2) of (e):(The Base for Natural Logarithms)    (Packed FAC Constant)\r\n==============================================================================\r\nThe Base for Natural Logarithms (e) [Euler\u0027s] Constant \u0026 Formula:\r\n------------------------------------------------------------------------------\r\n          e = 2.718281828\r\n     Exp(1) = 2.71828183\r\n==============================================================================\r\nLogarithm Base Conversion Formulas \u0026 Constants:\r\n------------------------------------------------------------------------------\r\nLog (base b) N = ln(N) / ln(b)  |   ln(2) = 0.693147181\r\nLog (base 2) N = ln(N) / ln(2)  |           ^--(Using AppleWin \u0026 Applesoft)\r\n------------------------------------------------------------------------------\r\nln(10) = 2.30258509             |  Log(2) = 0.30102999566398119521373889472449\r\n         ^---(Using A/W \u0026 A/S)  |           ^--(Using Calculator in Windows 7)\r\n------------------------------------------------------------------------------\r\n    Log(2) = [(ln(2))/(ln(10))] = [(0.693147181)/(2.30258509)] = (0.301029996)\r\n                                  ^-------(Using AppleWin \u0026 Applesoft)-------^\r\n==============================================================================\r\nThe Values Indicated here (CON_LOG_E) \u0026 below (POLY_EXP, POLY_EXP_L2, \u0026 POLY_ONE), are NOT EXACT since the Coefficients are Adjusted for Accuracy:\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16096":{
"Text":"\r\n Proof: LOG(base 2)(e) = [(ln(e))/(ln(2))] = [(1)/(0.693147181)] = 1.44269504\r\n------------------------------------------------------------------------------\r\n\r\n------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit:\r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific\r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_LOGE HEX 8138AA3B29 |(00) |$81-$80=$01= +1 |$.38AA3B29 |+0.44269504E+0\r\n(!) POS_LOGE HEX 81B8AA3B29 |(00) |$81-$80=$01= +1 |$.B8AA3B29 |+1.44269504E+0\r\n(!) NEG_LOGE HEX 81B8AA3B29 |(FF) |$81-$80=$01= +1 |$.B8AA3B29 |-1.44269504E+0\r\n------------------------------------------------------------------------------\r\n* FACSIGN msb must be set ($80-$FF) to print a minus sign before a result #.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nPolynomial Coeficients            (Packed FAC Constants adjusted for accuracy)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16137":{
"Text":"------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit:\r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific\r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_L2_7 HEX 7134583E56 |(00) |$71-$80=$F1=-15 |$.34583E56 |+6.23997465E-6\r\n(!) POS_L2_7 HEX 71B4583E56 |(00) |$71-$80=$F1=-15 |$.B4583E56 |+2.14987637E-5\r\n(!) NEG_L2_7 HEX 71B4583E56 |(FF) |$71-$80=$F1=-15 |$.B4583E56 |-2.14987637E-5\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_L2_6 HEX 74167EB31B |(00) |$74-$80=$F4=-12 |$.167EB31B |+2.14528279E-5\r\n(!) POS_L2_6 HEX 74967EB31B |(00) |$74-$80=$F4=-12 |$.967EB31B |+1.43523140E-4\r\n(!) NEG_L2_6 HEX 74967EB31B |(FF) |$74-$80=$F4=-12 |$.967EB31B |-1.43523140E-4\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_L2_5 HEX 772FEEE385 |(00) |$77-$80=$F7= -9 |$.2FEEE385 |+3.65700983E-4\r\n(!) POS_L2_5 HEX 77AFEEE385 |(00) |$77-$80=$F7= -9 |$.AFEEE385 |+1.34556348E-3\r\n(!) NEG_L2_5 HEX 77AFEEE385 |(FF) |$77-$80=$F7= -9 |$.AFEEE385 |-1.34556348E-3\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_L2_4 HEX 7A1D841C2A |(00) |$7A-$80=$FA= -6 |$.1D841C2A |+1.80151701E-3\r\n(!) POS_L2_4 HEX 7A9D841C2A |(00) |$7A-$80=$FA= -6 |$.9D841C2A |+9.61401701E-3\r\n(!) NEG_L2_4 HEX 7A9D841C2A |(FF) |$7A-$80=$FA= -6 |$.9D841C2A |-9.61401701E-3\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_L2_3 HEX 7C6359580A |(00) |$7C-$80=$FC= -4 |$.6359580A |+2.42551269E-2\r\n(!) POS_L2_3 HEX 7CE359580A |(00) |$7C-$80=$FC= -4 |$.E359580A |+5.55051269E-2\r\n(!) NEG_L2_3 HEX 7CE359580A |(FF) |$7C-$80=$FC= -4 |$.E359580A |-5.55051269E-2\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_L2_2 HEX 7E75FDE7C6 |(00) |$7E-$80=$FE= -2 |$.75FDE7C6 |+1.15226385E-1\r\n(!) POS_L2_2 HEX 7EF5FDE7C6 |(00) |$7E-$80=$FE= -2 |$.F5FDE7C6 |+2.40226385E-1\r\n(!) NEG_L2_2 HEX 7EF5FDE7C6 |(FF) |$7E-$80=$FE= -2 |$.F5FDE7C6 |-2.40226385E-1\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_L2_1 HEX 8031721810 |(00) |$80-$80=$00= +0 |$.31721810 |+1.93147186E-1\r\n(!) POS_L2_1 HEX 80B1721810 |(00) |$80-$80=$00= +0 |$.B1721810 |+6.93147186E-1\r\n(!) NEG_L2_1 HEX 80B1721810 |(FF) |$80-$80=$00= +0 |$.B1721810 |-6.93147186E-1\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_LN2  HEX 80317217F8 |(00) |$80-$80=$00= +0 |$.317217F8 |+1.93147181E-1\r\n(!) POS_LN2  HEX 80B17217F8 |(00) |$80-$80=$00= +0 |$.B17217F8 |+6.93147181E-1\r\n(!) NEG_LN2  HEX 80B17217F8 |(FF) |$80-$80=$00= +0 |$.B17217F8 |-6.93147181E-1\r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_ONE  HEX 8100000000 |(00) |$81-$80=$01= +1 |$.00000000 |+1.00000000E+0\r\n(!) POS_ONE  HEX 8180000000 |(00) |$81-$80=$01= +1 |$.80000000 |+1.00000000E+0\r\n(!) NEG_ONE  HEX 8180000000 |(FF) |$81-$80=$01= +1 |$.80000000 |-1.00000000E+0\r\n------------------------------------------------------------------------------\r\n\u003c\u003c\u003c Plugging NRM_ONE into \u0026 Printing FAC ($ED2EG) results in BLANK LINE!\r\n--Seems that when the mantissa is zero there\u0027s a problem printing numbers. \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\n* FACSIGN msb must be set ($80-$FF) to print a minus sign before a result #.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\n\"EXP\" Exponent Function: Immediate \u0026 Deferred; Parameter: EXP (Aexpr); \r\n      Raises (e), Euler\u0027s Constant, the Base for Natural Logarithms, \r\n      (to 6 Places, e=2.718282) to the POWER (Aexpr) Specified\r\n==============================================================================\r\n                    Computes FAC = e^FAC = 2^[FAC*Log2(e)]\r\n==============================================================================\r\nThis is NOT the Exponentiation (\"^\") [Power] Operator!  [But, if (A) is zero upon entry there, this routine is branched to immediately]\r\n==============================================================================\r\n                       \"Convert to Power of Two Problem\" \r\n------------------------------------------------------------------------------\r\n\r\n                                    ;Setup to compute e^FAC = 2^[FAC*Log2(e)]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16294":{
"Text":"==============================================================================\r\nRND Floating-Point Numbers                              (Packed FAC Constants)\r\n==============================================================================\r\n     \u003c\u003c\u003c The missing fifth bytes here account for a known bug in RND \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16302":{
"Text":"------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit:\r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific \r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec \r\n----------------------------|-----|----------------|-----------|--------------\r\n  CON_RND1  HEX  9835447A   |(00) |$98-$80=$18=+24 |$.35447A68 |+3.49093841e+6\r\n                            |     | Taken as a 32-bit Integer:  -1,741,339,526\r\n----------------------------|-----|----------------|-----------|--------------\r\n  CON_RND2  HEX  6828B146   |(00) |$68-$80=$E8=-24 |$.28B14620 |+9.47445545e-9\r\n                            |     | Taken as a 32-bit Integer:  +1,747,497,286\r\n------------------------------------------------------------------------------\r\nSince these are missing one byte each for a FP value,          \\\r\nI am using the next byte in sequence for the final byte of each \"$.mantissa\"!\r\n------------------------------------------------------------------------------\r\n* FACSIGN msb must be set ($80-$FF) to print a minus sign before a result #.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\n\"RND\" Random Number Function: Immediate \u0026 Deferred; Parameter: RND (Aexpr); Returns a Random Real Number between Zero \u0026 One: RND(Aexpr)=[(0)=\u003c(RND#)\u003c(1)]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17614":{
"Text":"                                    ;| 0 = %00 : Up    | 1 = %01 : Down |\r\n                                    ;| 2 = %10 : Right | 3 = %11 : Left |\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12444":{
"Text":"==============================================================================\r\nMake New Variable\r\n==============================================================================\r\nTo make a New Simple Variable, move Arrays up 7 bytes to make room for a New Simple Variable, then enter 7 bytes of New Variable Data into the hole:\r\n==============================================================================\r\n                                    ;Set to Move Array Table 7 bytes higher:\r\n------------------------------------------------------------------------------\r\n                                    ;Set (LOWTR) = Lowest Source Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14928":{
"Text":"==============================================================================\r\nThe Number Ten (10) [or Two (2)!?]                       (Packed FAC Constant)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14933":{
"Text":"------------------------------------------------------------------------------\r\nPlugging into \u0026 Printing FAC ($ED2EG)\r\n------------------------------------------------------------------------------\r\nFAC Signed Exponents have had $80 added \u0026 binary Mantissa msb is sign bit: \r\n          %(1.s)xxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx,xxxx \u003c--(32 bits)\r\n------------------------------------------------------------------------------\r\n     Plug into \u0026 Print FAC  |FAC- |    Exponent    |$.Mantissa |sn Scientific \r\n     ($ED2EG)*   vvvvvvvvvv |SIGN | Hex        Dec |           | Notation Dec \r\n----------------------------|-----|----------------|-----------|--------------\r\n(?) NRM_TEN  HEX 8420000000 |(00) |$84-$80=$04= +4 |$.20000000 |+1.00000000E+1\r\n(!) POS_TEN  HEX 84A0000000 |(00) |$84-$80=$04= +4 |$.A0000000 |+1.00000000E+1\r\n(!) NEG_TEN  HEX 84A0000000 |(FF) |$84-$80=$04= +4 |$.A0000000 |-1.00000000E+1\r\n------------------------------------------------------------------------------\r\n\u003c\u003c\u003c Plugging NRM_TEN into \u0026 Printing FAC ($ED2EG) results in a 2, not a 10 \u003e\u003e\u003e\r\n    Plugging 84A000000000 into \u0026 Printing FAC ($ED2EG) results in +10.\r\n    Plugging 84A0000000FF into \u0026 Printing FAC ($ED2EG) results in -10.\r\n------------------------------------------------------------------------------\r\n* FACSIGN msb must be set ($80-$FF) to print a minus sign before a result #.\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nDivide ABS(FAC) by Ten (10):\r\n==============================================================================\r\nUsing FAC \u0026 ARG Exponents (FACX \u0026 ARGX): Subtracting Powers Divides Values; \r\nSubtracting 1 Power Divides a Value by its Power Base (e.g., Binary = Base 2);\r\nHense, the formula used here: [x/10]=[x/(2*5) = x/(2*(4+1)) = x/(2*((2*2)+1))]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14905":{
"Text":"==============================================================================\r\nMultiply FAC by Ten (10):\r\n==============================================================================\r\nUsing FAC \u0026 ARG Exponents (FACX \u0026 ARGX): Adding Powers Multiplies Values; \r\nAdding 1 Power Multiplies a Value by its Power Base (e.g., Binary = Base 2);\r\nHense, the formula used here: [10x = (2*(5x)) = (2*((4x)+x)) = (2*((2*2x)+x))]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17668":{
"Text":"==============================================================================\r\nMove Down One Pixel (1 Dot): If already at Bottom, go to Top\r\n==============================================================================\r\n----------------------------------- ;Note: X-Coordinate = X-Position = Column\r\n                                    ;      Y-Coordinate = Y-Position = Row\r\n----------------------------------- ;Remember:   Row      GBASH     GBASL\r\n                                    ;          ABCDEFGH  PPPFGHCD  EABAB000\r\n----------------------------------- ;Compute Base Adrs for HR Line Below; Put\r\nMVDOWN   [No Drop-In]               ;Result in (GBAS) w/ 192-Line Wrap Around:\r\n----------------------------------- ;-----------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18429":{
"Text":"==============================================================================\r\nSomeone\u0027s initials?  K?  R?  W?  Richard Weiland?\r\n==============================================================================\r\nIIRC, I read, or heard somewhere, long ago, that this was a plea inserted by one of the authors because he had cancer, meaning: \"Kill Ric Weiland!\" \r\n\r\nRIP: Richard W. \"Ric\" Weiland (April 21, 1953 - June 24, 2006)\r\n\r\nBut, it is not in any of these . . .\r\n\r\nReferences: \r\n\r\nApplesoft BASIC \u003chttps://en.wikipedia.org/wiki/Applesoft_BASIC\u003e\r\nRic Weiland \u003chttps://en.wikipedia.org/wiki/Ric_Weiland\u003e    \u003c--[Most likely!]\r\nSteve Wozniak \u003chttps://en.wikipedia.org/wiki/Steve_Wozniak\u003e\r\nRandy Wigginton \u003chttps://en.wikipedia.org/wiki/Randy_Wigginton\u003e\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17842":{
"Text":"\r\n==============================================================================\r\nGraphics On-the-Fly Color Bit Mask Table                    (Binary Constants)\r\n==============================================================================\r\nRemember Bits in Hi-Res Byte are Backwards Order:    Byte N   Byte N+1\r\n                                                   S7654321   SEDCBA98\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19417":{
"Text":"==============================================================================\r\nSound Bell                   [(*) BELLA \u0026 BELLB are Undocumented Entry Points]\r\n==============================================================================\r\n\r\n----------------------------------- ;Assure Sound Bell Character:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9316":{
"Text":"Effectively wiping out any routines you may have installed between PRGEND and\r\nVARTAB (after using LOMEM: to move VARTAB up, to make space for the routines)!\r\n------------------------------------------------------------------------------\r\nvvvvvv  Alternative Entry Point?  Just an idea!  Not actually used:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9329":{
"Text":"----------------------------------- ;Yes; Delete Old-Line (LOWTR is Pointer)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9351":{
"Text":"----------------------------------- ;Result is New Program End (EOP)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9369":{
"Text":"----------------------------------- ;Result is Index to Move Partial Page",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9363":{
"Text":"----------------------------------- ;Result is Index to Move Whole Memry Pages",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17129":{
"Text":"==============================================================================\r\nError Handler (Part 2): Routine to Handle errors if ONERR GOTO is Active\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14240":{
"Text":"\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n==============================================================================\r\nApplesoft - Part C, $E7A0-$F1D4: Floating Point Math Routines\r\n==============================================================================\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n\r\n\r\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\r\n==============================================================================\r\nTo see: \"How Applesoft BASIC Program Varables* Are Structured\"\r\n        *(Reals {Floating Point}, Integers, Strings, Functions, and Arrays),\r\n   see: \"Call-A.P.P.L.E. In Depth #1: All About Applesoft\", pages 21 to 24\r\n==============================================================================\r\nYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY\r\n\r\n\r\n==============================================================================\r\nAdd 0.5 to FAC                      ;FAC+[(1/2):(Packed FAC Constant)] -\u003e FAC:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16853":{
"Text":"\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n==============================================================================\r\nApplesoft - Part D, $F1D5-$F7FF: Graphics Display Routines, etc.\r\n==============================================================================\r\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n\r\n\r\n==============================================================================\r\n\"CALL\" Statement: Immediate \u0026 Deferred; Parameter: CALL Aexpr;\r\n==============================================================================\r\nCauses execution of a machine language subroutine at the memeory location whose decimal address is specified (Aexpr)\r\n------------------------------------------------------------------------------\r\nEffectively: Performs a JSR to the specified address; Called routines can return with RTS; \u0026 Applesoft will continue with the next statement\r\n------------------------------------------------------------------------------\r\nNote: Applesoft\u0027s CALL does not set up registers like Integer BASIC\u0027s does;\r\nOn a CALL: Y = CALL Adrs, Low; A = CALL Adrs, High; \u0026 X = FAC Adrs ($9D)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9410":{
"Text":"                                    ;That Resets String-Storage (FRETOP=HIMEM)\r\n----------------------------------- ;Prepare to move memory block up [*]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9402":{
"Text":"----------------------------------- ;Yes, so make room to insert New-Line [*]:\r\nClean String Area, first (Strings are stored from MEMSIZ downward to FRETOP):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9414":{
"Text":"                                    ;Carry is already Clear",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9430":{
"Text":"----------------------------------- ;Put Line-Number into New-Line-Image [*]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16080":{
"Text":"\r\n==============================================================================\r\n\"NEGOP\" [Greater-Than (\"\u003e\") Operator] Function: Negates Value in FACSIGN\r\n==============================================================================\r\n\r\n==============================================================================\r\nComparison for (GREATER-THAN)-\u003e-(LESS-THAN) [Rel Ops (\"\u003e\") Unary Minus entry]:\r\n==============================================================================\r\nFrom MATHTBL: MO_UMNS_GTLT  DFB P_NEQ    ;$CF...207...\u003e...Unary Minus (\"-\")\r\n              TA_UMNS_GTLT  DW  NEGOP-1  ;(GREATER-THAN)-\u003e-(LESS-THAN) Op Adrs\r\n==============================================================================\r\n\r\n             EQU    *               ;(Math Operator Table Branch Address +1)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11928":{
"Text":"==============================================================================\r\n\"EQUOP\" [EQUAL-TO (\"=\") Operator] Function\r\n==============================================================================\r\n\r\n==============================================================================\r\nComparison for Equality (EQUAL-TO) [Rel Ops (\"=\") Unary Not entry]:\r\n==============================================================================\r\nFrom MATHTBL: MO_UNOT_EQUL  DFB  P_NEQ    ;$D0...208...=...Unary NOT\r\n              TA_UNOT_EQUL  DW   EQUOP-1  ;(EQUAL-TO) Operator Address\r\n------------------------------------------------------------------------------\r\nAlso used to evaluate NOT function: \r\nThis routine is called only by NOT through the preceding branch to EQUL.\r\n==============================================================================\r\n\r\n             EQU    *               ;(Math Operator Table Branch Address +1)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12133":{
"Text":"\r\n==============================================================================\r\n\"RELOPS\" [Less-Than (\"\u003c\") Operator] Function:\r\n==============================================================================\r\nCommon Routine for \u003c, =, \u003e Comparisons\r\n==============================================================================\r\nComparison for (LESS-THAN)-\u003c-(GREATER-THAN) [Rel Ops (\"\u003c\") Unary Plus entry]:\r\n==============================================================================\r\nFrom MATHTBL: MO_UPLS_LTGT  DFB P_REL    ;$D1...209...\u003c...Unary Plus (\"+\")\r\n              TA_UPLS_LTGT  DW RELOPS-1  ;(LESS-THAN)-\u003c-(GREATER-THAN) Op Adrs\r\n==============================================================================\r\n\r\n             EQU    *               ;(Math Operator Table Branch Address +1)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9461":{
"Text":"                                    ;Point to Start-of-Program [*]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9476":{
"Text":"                                    ;YES, Reset End-of-Program to (LOMEM) [*]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9487":{
"Text":"----------------------------------- ;Setup Forward Links:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9510":{
"Text":"                                    ;Advance Line Address Ptr to Next Line:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19724":{
"Text":"==============================================================================\r\nEnd Of Internal Cassette Tape Write (Output) \u0026 Read (Input) Routines\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nKeyboard Character Input, Line Building, \u0026 Input Display Routines\r\n==============================================================================\r\nKeyboard Input \u0026 Screen Output, Division Of Labor:\r\n------------------------------------------------------------------------------\r\nRoutines supporting Keyboard Input are designed to echo Keyboard Input to User Output (through COUT) to the Display Screen Scroll Window at the Current Cursor Position, \u0026 store the Characters Entered into the Keyboard Input Buffer ($0200~$02FF) for the convenience of the Calling Program, which may Position the Cursor anywhere (on Screen), before Calling the Keyboard Input Routines; on Entry of a Carriage Return from the Keyboard, the Keyboard Input Routines will Return back to the Calling Program, with the Character Count (plus one) in X-Reg \u0026 a Carriage Return in the Input Buffer as a Terminator; the Calling Program need not look within the Display Screen to Determine what was Entered; the X-Reg begins with a Zero, so if Five Characters are Entered, the X-Reg will reflect Four, although the Actual Value Returned will be Five--because the X-Reg is Incremented for the Carriage Return as well--[so X-Reg as the Character Count is actually accurate at plus one--as if (1) it started at One instead of Zero \u0026 (2) it is Not Counting the Carriage Return!]. ==============================================================================\r\n\r\n\r\n==============================================================================\r\nRead Key Subroutine: Makes Current Char Flash; \u0026 Puts it in (A) \u0026 (CH) in (Y)\r\n==============================================================================\r\nRDKEY is the same as RDCHAR except that it bypasses Escape Key support--[because RDCHAR Calls RDKEY 1st, before doing the \"ESC\" Key Test!]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Get in (A) \u0026 Make Cursor Character Flash:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19739":{
"Text":"==============================================================================\r\nKEYIN gets the Next Key Input from the Keyboard; \r\nKEYIN is usually the Target of the Key Switch (KSW) Character Input Hook\r\n==============================================================================\r\n\r\n----------------------------------- ;Get Key Press @ Keyboard Input Register:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19775":{
"Text":"                                    ;^[Normal=$FF, Flash=$7F, Inv=$3F]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9077":{
"Text":"----------------------------------- ;NO Variable; So use this FOR Frame",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9066":{
"Text":"----------------------------------- ;Is there a FOR Frame here?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9087":{
"Text":"--------------------- ;Is Same Variable (as Caller\u0027s) specified in this Frame?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9099":{
"Text":"----------------------------------- ;NO, So try next Frame (if any)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9106":{
"Text":"------------------------------------------------------------------------------\r\nIf FOR loops are nested \u003e 10 deep, the Memory Full Error message is displayed.\r\n10 frames at 18 bytes/frame is 180 bytes of stack space.  So, this condition can never happen; hense, this branch is Always Taken!  [Barring overhead, the maximum number of stack frames possible would be: INT(256/18) = 14.]\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9131":{
"Text":"                                    ;Move Partial Page 1st to maximize speed!\r\n----------------------------------- ;Back Up: HIGHTR-(Partial Page Bytes)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9143":{
"Text":"----------------------------------- ;Back Up: HIGHDS-(Partial Page Bytes)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9155":{
"Text":"----------------------------------- ;Do it NOW: Move a Page of Bytes (256)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9162":{
"Text":"----------------------------------- ;Move one more byte (the last one of 256)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9166":{
"Text":"----------------------------------- ;Down to NEXT Block of 256 Bytes",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9179":{
"Text":"                                    ;Never Happens: (A-Reg)=(72, 60, or 56) so\r\n                                    ;               Carry is Always Clear ",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9175":{
"Text":"                                    ;Carry is also Cleared for A-Reg \u003c 128",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9300":{
"Text":"                                    ; Line Numbers Allowed: 0-63999\r\n                                    ; \u003c (64000 = $FA00) \u003c ($FFxx \u003e= 65280)\r\n                                    ; is Too Big, so used as Direct Mode flag",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"4184":{
"Text":"==============================================================================\r\nRenamed Corrected Annunciator Labels [3rd. of 3 Choices]--[See Above]\r\n[See: Tech Info Library Article No. 1062: Apple II Hardware:\r\n      Errata in Apple II Reference Manual (Part 2 of 2)]\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"4192":{
"Text":"==============================================================================\r\n$C06X I/O Space:\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"4200":{
"Text":"------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"4208":{
"Text":"==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"4224":{
"Text":"\r\n==============================================================================\r\nIntegrated WOZ Machine (IWM) I/O Locations \u0026 Soft Switches\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"4176":{
"Text":"==============================================================================\r\n$C05X I/O Space:\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9427":{
"Text":"----------------------------------- ;Do it NOW: Move Memory Block Upward",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9440":{
"Text":"----------------------------------- ;Move EOP Up (Ptr); Clears Variables [*]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9489":{
"Text":"                                    ;Skip first 4: Forward Link \u0026 Line Number",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11318":{
"Text":"----------------------------------- ;GET:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9563":{
"Text":"                                    ; as Index into Unparsed Line\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9608":{
"Text":"Is it a Token?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16687":{
"Text":"Upper 4 bytes of STACK used for Forward Link \u0026 Line Number in New Line Input\r\n==============================================================================\r\nWe must finish COLD_START!  So, as a precaution: Set GOWARM and GOSTROUT to (restart) COLD_START until COLD_START is completed; then properly reset them!\r\n------------------------------------------------------------------------------\r\nGOWARM   (LOC0, LOC1 \u0026 LOC2) is setup by COLD_START, but is not used anywhere\r\nGOSTROUT (LOC3, LOC4 \u0026 LOC5) is setup by COLD_START, but is not used anywhere\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16834":{
"Text":"------------------------------------------------------------------------------\r\nProperly Reset GOWARM and GOSTROUT (\"Wasting Prime Real Estate at 0-5!\"):\r\n------------------------------------------------------------------------------\r\nGOWARM   (LOC0, LOC1 \u0026 LOC2) is setup by COLD_START, but is not used anywhere\r\nGOSTROUT (LOC3, LOC4 \u0026 LOC5) is setup by COLD_START, but is not used anywhere\r\n------------------------------------------------------------------------------\r\nSetup GOSTROUT to Print the String at [(A,Y)={Low,High}] when called:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16842":{
"Text":"Set GOWARM to BASIC Soft/Warm/Ctrl-C [\u0026 Mon Cmd: 0G] Entry Point",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16720":{
"Text":"------------------------------------------------------------------------------\r\nCopy CHRGET subroutine \u0026 RND Seed to Zero-Page ($B1-$CC) [NOT last byte ($CD)]\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16712":{
"Text":"                                    ;Point USR() Command Vector to Illegal\r\n                                    ;Quantity Error, until User sets it up",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16729":{
"Text":"                                    ;Serves as clue to where (which iteration)\r\n                                    ;if loop fails to complete (is inerupted)!",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16732":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16737":{
"Text":"                                    ; (holds 0 except in INT routine)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16740":{
"Text":"here signifies the Start of a New Input Line to Parse or the Start of a New Program for the first Input Line, but it\u0027s never moved, copied, or used for anything more than the target of the LINEIMAGE (Indexed Addressing) Pointer!\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16739":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17619":{
"Text":"                                    ;Else, C \u003c 2, Move Up or Down:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16759":{
"Text":"==============================================================================\r\nFind High End of RAM:                                   [*]=[(A,Y)={Low,High}]\r\n==============================================================================\r\n                                    ;Setup Pointer to Low End of RAM:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16767":{
"Text":"------------------------------------------------------------------------------\r\nTest First Byte of each Page until ROM or an Empty Ram Socket is Found:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16747":{
"Text":"----------------------------------- ;Setup Fake Forward Link:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16789":{
"Text":"------------------------------------------------------------------------------\r\nROM or an empty RAM socket has been Found; Initialize All for a NEW Program:\r\n------------------------------------------------------------------------------\r\n                                    ;    Assure RAM is a multiple of 4 KB\r\n                                    ;(bad RAM may\u0027ve yielded a non-multiple):\r\n                                    ; ------ [*]=[(Y,A)={Low,High}] ------- v\r\n                                    ;        ^[opposite of normal]^         v\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16803":{
"Text":"                                    ;^(AKA: Bottom or Start of String Space)\r\n                                    ;That Resets String-Storage (FRETOP=HIMEM)\r\n                                    ;-----------------------------------------\r\n                                    ; Reset Start of Program (Ptr) to $800:\r\n                                    ; ------ [*]=[(X,Y)={Low,High}] ------- v",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16811":{
"Text":"                                    ;-----------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16824":{
"Text":"Continue to Initialize for a NEW Program:               [*]=[(A,Y)={Low,High}]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9714":{
"Text":"This is routines Entry Point from PARSE routine BEQ, way above: ENDCHR = \u0027\"\u0027",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9710":{
"Text":"             ^^^^^^^^^^^^           ;\u003c\u003c NOT NEEDED; ENDCHR = 0 or \u0027\"\u0027, ONLY! \u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9725":{
"Text":"                                    ;Skip Over Current Keyword:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9758":{
"Text":"                                    ;Start Search from: [(A,X)={Low,High}]=[*]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9815":{
"Text":"                                    ;The Carry Flag is not Cleared here,\r\n                                    ;so NEW usually adds 3, whereas FP adds 2:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9836":{
"Text":"                                    ;NOT Statement End; more to it, so do it!\r\n                                    ;Clear String Area: [(A,Y)={Low,High}]=[*]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9844":{
"Text":"                                    ;Clear Array Area:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9852":{
"Text":"                                    ;Clear StorageEnd/FreeSpaceStart Pointer:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9866":{
"Text":"                                    ;Save it in A-Reg\r\n------------------------------------------------------------------------------\r\nKeep Top of Stack for Input Line Image: Forward Link \u0026 Line Number (4 bytes)+1\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9869":{
"Text":"                                    ;[Bill said this was a typographical input\r\n                                    ;error, because $FB looks a lot like $F8!]\r\n------------------------------------------------------------------------------\r\nRestore current Return Address at new Top of Stack:\r\n------------------------------------------------------------------------------\r\n                                    ;Restore from A-Reg:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9872":{
"Text":"------------------------------------------------------------------------------\r\nFinish Stack Init:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9863":{
"Text":"------------------------------------------------------------------------------\r\nReset/Move (Top of) Stack Pointer \u0026 Keep/Move current Return Address, too:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9924":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9932":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9946":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10064":{
"Text":"------------------------------------------------------------------------------\r\nPrint a Space, then the Token Name:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10110":{
"Text":"             Point to next Statement and Push Statement Address onto Stack:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10098":{
"Text":"                                    ;(X)=(S) after scanning all Frames; Branch",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10099":{
"Text":"                                    ;(X)=(S) of Frame Found",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14343":{
"Text":"                                    ;or to Add with Carry Set (Adds 1)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18444":{
"Text":"                                    ;^[($0F+$01)+($E0) = ($10)+($E0) = ($F0)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18470":{
"Text":"\r\n----------------------------------- ;Draw Vertical Line on Lo-Res Screen:\r\nLOOP                                ;[(A+1+Carry)~(V2)=Row Ends; (Y)=Column]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10670":{
"Text":"------------------------------------------------------------------------------\r\nSwap Primary \u0026 Alternate String Terminators (Swap ENDCHR with CHARAC):\r\n------------------------------------------------------------------------------\r\nThis is some kind of trick to count quote parity.  How does that work?\r\nIt only works for the DATA_END Entry Point!  (See: 1,2,3 Before/Afters below.)\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10662":{
"Text":"==============================================================================\r\nREM_END: Scan ahead \u0026 Get offset in Y-Reg to next EOL  [Nothing else matters!]\r\n==============================================================================\r\nClear/Set Primary \u0026 Alternate String Terminators and Character/Offset Couter:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10678":{
"Text":"------------------------------------------------------------------------------\r\nScan ahead \u0026 Get offset in Y-Reg to next \":\" or EOL:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10691":{
"Text":"                                    ;YES, Switch (Quote) parity \u0026 continue:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10672":{
"Text":"                                    ;-------------------------- DATA or REM --\r\n                                    ;1. Before Quote Swap     = ( 0  or 0)\r\n                                    ;2. After 1st. Quote Swap = (\u0027:\u0027 or 0)\r\n                                    ;3. After 2nd. Quote Swap = ( 0  or 0)\r\n                                    ;-----------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10676":{
"Text":"                                    ;-------------------------- DATA or REM --\r\n                                    ;1. Before Quote Swap     = (\u0027:\u0027 or 0)\r\n                                    ;2. After 1st. Quote Swap = ( 0  or 0)\r\n                                    ;3. After 2nd. Quote Swap = (\u0027:\u0027 or 0)\r\n                                    ;-----------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10140":{
"Text":"----------------------------------- ;Pack Sign into FAC Mantissa:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10148":{
"Text":"------------------------------------------------------------------------------\r\n[See also (below): \"Preamble about the Applesoft Floating Point Accumulators\"]\r\n------------------------------------------------------------------------------\r\n\u003c\u003c\u003c BUG: Resulting TO values (above) are packed BEFORE being rounded (by PUSH-\r\nFAC).  This can result in a positive number being converted into a negative one (-1).  E.g., \"10 FOR I=0 TO 2^35-1: PRINT I: NEXT\" executes only once! \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\n                                    ;Prep for Return to STEP via JMP (INDEX):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10159":{
"Text":"==============================================================================\r\nSTEP Phrase: Optional Third Part of FOR Statement; Parameters:\r\n             FOR real avar = aexpr1 TO aexpr2 [STEP aexpr3];\r\n             See also: \"FOR Statement\", \"TO Phrase\", \u0026 \"NEXT Statement\"\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10129":{
"Text":"==============================================================================\r\nTO Phrase: Required Second Part of FOR Statement; Parameters:\r\n           FOR real avar = aexpr1 TO aexpr2 [STEP aexpr3];\r\n           See also: \"FOR Statement\", \"STEP Statement\", \u0026\r\n                     \"NEXT Statement\"\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15097":{
"Text":"==============================================================================\r\nUnpack Floating Point Number at [(A,Y)={Low,High}]\r\ninto FAC (Primary Floating Point Accumulator)\r\n==============================================================================\r\n[Wouldn\u0027t a general purpose copier S/R (using pointers \u0026 loops) be better?\r\n --Especially for all the Applesoft S/R\u0027s that move things like this one?]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Unpack FP# at [(A,Y)={Lo,Hi}] into FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17867":{
"Text":"==============================================================================\r\nHigh-Resolution Graphics Mode (Hi-Res) Coordinate Restore Subroutine:\r\n==============================================================================\r\nHFIND (Never Called by Applesoft): Computes Current Position of Hi-Res Cursor;\r\n      Y-Coordinate from GBASH,GBASL \u0026 X-Coordinate from HGRHORIZ \u0026 HMASK\r\n------------------------------------------------------------------------------\r\nNote: X-Coordinate = X-Position = Column; Y-Coordinate = Y-Position = Row\r\n==============================================================================\r\n\r\n------------------------------------------------------------------------------\r\nHFIND       [Drop-In Only]        ;Never Referenced [Can Never Happen]\r\n(Only Exception: User-Callable Entry Point; BASIC: CALL -2,613 or CALL 62,923\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Convert Base Address to Y-Coordinate;\r\n                                    ;For: GBASL=EABAB000, GBASH=PPPFGHCD;\r\n                                    ;Generate: Y-Coordinate=ABCDEFGH:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17849":{
"Text":"\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17850":{
"Text":"                                    ; Y-Coord   GBASH     GBASL\r\n                                    ;ABCDEFGH (PPPFGHCD) EABAB000\r\n------------------------------------------------------------------------------\r\nNote: X-Coordinate = X-Position = Column; Y-Coordinate = Y-Position = Row\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nCosine Table                         (Used by DRAW and XDRAW as Defined Words)\r\n==============================================================================\r\nCOS(90*X/16 Degrees)*$100-1; with one-byte precision, X=0 ~ (+/-)16 (17 Bytes)\r\n------------------------------------------------------------------------------\r\nIndexed via DRAW \u0026 XDRAW [for Cosines (DX\u0027s) \u0026 Sines (DY\u0027s)] like so:\r\n  LDY COSTBL,X   where X is a Positive Low Nibble Value, X=0 ~ +16 (for COS\u0027s)\r\n\u0026 LDY COSTBL+1,X where X is a Negative Low Nibble Value, X=0 ~ -16 (for SIN\u0027s)\r\n==============================================================================\r\n\r\n                                             Values \r\n                    ----------------------------------------------------------\r\n                     Hex            ;      Decimal      \u0026     {Low,High}\r\n                    --------------- ;-------------------|---------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18166":{
"Text":"==============================================================================\r\nHigh Resolution Graphics Colors Table\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18174":{
"Text":"==============================================================================\r\n\"HPLOT\" Statement: Immediate \u0026 Deferred\r\n==============================================================================\r\nParameters: HPLOT Aexprl, Aexpr2 [{TO Aexpr3, Aexpr4}]\r\n-----------------------------------------------------------------------------\r\nHPLOT Plots a High-Resolution Dot, or a Line from the Last Dot Plotted, \u0026 may be Extended (Subject to Screen Limits \u0026 Character Instruction Limits)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10163":{
"Text":"                                    ;Put STEP Default (1) in FAC ($8100000000)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10194":{
"Text":"==============================================================================\r\nExecute a New Statement: Immediate or Deferred\r\n==============================================================================\r\nExecutes the Next Statement in a BASIC Program, if any.  (This does not mean the \"NEXT\" Statement in a FOR..NEXT Loop.  But, the Next Statement in a BASIC Program, could be the \"NEXT\" Statement in a FOR..NEXT Loop.  See also: \"FOR Statement\" \u0026 \"NEXT Statement\")\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10219":{
"Text":"                                    ;YES, EOL; Is Forward Link a 0?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10226":{
"Text":"                                    ;NO, Fwd Link is Not a 0, So Not Done!\r\n                                    ;Save Line No. and Bump CHRGET\u0027s TXTPTR:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10280":{
"Text":"==============================================================================\r\nExecute a Statement:\r\n==============================================================================\r\nOn Entry: A-Reg contains first character of statement \u0026 Carry is Set\r\nAt Exit:  Y-Reg contains Token Ordinal Doubled \u0026 Carry is Clear\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10282":{
"Text":"Entry Point to continue processing: ON GOTO/GOSUB",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10306":{
"Text":"==============================================================================\r\nDoes A-Reg contain a Colon (Statement Separator)?\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10348":{
"Text":"** Double check if Control-C was typed; This is final for both entry points!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10384":{
"Text":"                                    ;If Carry Set, STOP Program:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9572":{
"Text":"                                    ;YES, AUTORUN Flag\u003e127, Ignore Input\r\n                                    ; and AUTORUN the Applesoft Program:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10249":{
"Text":"                                    ;YES, TRACE is ON; Are we in Direct Mode?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10254":{
"Text":"                                    ;NO, Deferred Command, Print Tracing Info:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10290":{
"Text":"------------------------------------------------------------------------------\r\nFollowing is a very important part of Applesoft BASIC: It is the way we get to the Keyword/Command subroutines (via the Token Address Table) to Execute them!\r\n------------------------------------------------------------------------------\r\n                                    ;(C=0), (A)=(Token Ordinal)    [($00-$6A)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10303":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10284":{
"Text":"                                    ;NOT a Token if Borrow used:   [(A)\u003c($80)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10286":{
"Text":"                                    ;YES, First Char is a Token    [($80-$EA)]\r\n                                    ;(C=1), (A)=(Token Ordinal)    [($00-$6A)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16660":{
"Text":"------------------------------------------------------------------------------\r\nClear Carry if Numeric, Set Carry if Not Numeric, \u0026 leave A-Reg as found:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16664":{
"Text":"                                    ;     Z-Flag Set if a Colon/EOS or EOL/EOP\r\n                                    ;-----------------------------------------\r\n                                    ;[This should\u0027ve been 1st after CHRGOT!]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16668":{
"Text":"                                    ;-----------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16674":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16591":{
"Text":"-----------------------------------------------------------------------------\r\n                      vvvvvvvv      ;32-bit numbers, with alternating signs:\r\n                    vvvvvvvvvv      ;[All are Adjusted then Normalized]\r\n------------------------------------------------------------------------------\r\n                                    ;n=12: [+((-1)^(n-1))/(2n-1) = -1/23]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16501":{
"Text":"----------------------------------- ;Alternating Sin Series:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16502":{
"Text":"----------------------------------- ;32-bit numbers, with alternating signs:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16253":{
"Text":"             ---------------------- ;Point to last Coefficient (1st in Table):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12574":{
"Text":"==============================================================================\r\nLocate an Array Element or Create an Array\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16564":{
"Text":"                                    ; 0 \u003c=     x  \u003c= 1\r\n                                    ; 0 \u003c= ATN(x) \u003c= PI/8\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16362":{
"Text":"==============================================================================\r\n\"COS\" Cosine Function: Immediate \u0026 Deferred; Parameter: COS (Aexpr);\r\n      Returns the Cosine of (Aexpr) Radians; Computes COS(FAC)=SIN(FAC+pi/2)\r\n==============================================================================\r\nXY-Coordinates:                                                   [Background]\r\n   Y=SIN[(+|-)Angle],X=COS[(+|-)Angle]\r\n                     X=SIN[pi/2-[(+|-)Angle]]\r\n                     X=SIN[pi/2 (-|+) Angle], so COS(FAC)=SIN(FAC+pi/2) is OK!\r\n==============================================================================\r\n\u003c\u003c\u003c Because of BUG in FMULT, COS(x) is off for approximately               \u003e\u003e\u003e\r\n\u003c\u003c\u003c -.000000184 \u003c x \u003c .000000184, X not 0, and many other values           \u003e\u003e\u003e\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16369":{
"Text":"\r\n==============================================================================\r\n\"SIN\" Sine Function: Immediate \u0026 Deferred; Parameter: SIN (Aexpr);\r\n      Returns the Sine of (Aexpr) Radians; Computes SIN(FAC)\r\n==============================================================================\r\nXY-Coordinates:                                                   [Background]\r\n   Y=SIN[(+|-)Angle],X=COS[(+|-)Angle]\r\n                     X=SIN[pi/2-[(+|-)Angle]]\r\n                     X=SIN[pi/2 (-|+) Angle], so COS(FAC)=SIN(FAC+pi/2) is OK!\r\n==============================================================================\r\n\u003c\u003c\u003c Because of BUG in FMULT, SIN(x) is off for x near pi/2                 \u003e\u003e\u003e\r\n\u003c\u003c\u003c (but not = pi/2) and many other places                                 \u003e\u003e\u003e\r\n==============================================================================\r\n\r\n                                    ;COS Function drops in with FAC=FAC+pi/2\r\n----------------------------------- ;Remove Multiples of 2*pi by Dividing \u0026 \r\n                                    ;Saving Fractional Part [the Remainder]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16442":{
"Text":"==============================================================================\r\n\"TAN\" Tangent Function: Immediate \u0026 Deferred; Parameter: TAN (Aexpr);\r\n      Returns the Tangent of (Aexpr) Radians;\r\n      Computes [TAN(FAC)]=[SIN(FAC)/COS(FAC)]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16242":{
"Text":"==============================================================================\r\nNormal Polynomial Subroutine\r\n\r\n  P(x) = C(0)*x^n + C(1)*x^(n-1) + ... + C(n)\r\n\r\n  Where: x is Value in FAC\r\n         [(A,Y)={Low,High}] Points at Coefficient Table\r\n         1st Byte of Coefficient Table is Index: (Polynomial Coeficients)-1\r\n         Coefficients follow, Highest Power 1st\r\n\r\n==============================================================================\r\nComputes a+bx+cx^2+... where SERPTR (A,Y) points to Coeficients ...c,b,a.\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16646":{
"Text":"                                    ;                        = -((1/8)-(1/24))\r\n                                    ;-----------------------------------------\r\n                                    ;n=1: [+((-1)^(n-1))/(2n-1) = +1]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16636":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;n=3: [+((-1)^(n-1))/(2n-1) = +1/5]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16641":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;n=2: [+((-1)^(n-1))/(2n-1) = -1/3]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16631":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;n=4: [+((-1)^(n-1))/(2n-1) = -1/7]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16626":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;n=5: [+((-1)^(n-1))/(2n-1) = +1/9]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16621":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;n=6: [+((-1)^(n-1))/(2n-1) = -1/11]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16616":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;n=7: [+((-1)^(n-1))/(2n-1) = +1/13]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16611":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;n=8: [+((-1)^(n-1))/(2n-1) = -1/15]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16606":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;n=9: [+((-1)^(n-1))/(2n-1) = +1/17]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16601":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;n=10: [+((-1)^(n-1))/(2n-1) = -1/19]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16596":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;n=11: [+((-1)^(n-1))/(2n-1) = +1/21]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10447":{
"Text":"                                    ;Compute Program End Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10474":{
"Text":"                                    ;(Wait for Next Cmd at Applesoft Prompt)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10484":{
"Text":"                                    ;Set General Purpose A1-Reg:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10490":{
"Text":"                                    ;Set General Purpose A2-Reg:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10501":{
"Text":"                                    ;Set General Purpose A1-Reg:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10509":{
"Text":"                                    ;Set General Purpose A2-Reg:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10540":{
"Text":"                                    ;CURLIN = $FFXX if in Direct Mode\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10590":{
"Text":"                                    ;Else, Point TXTPTR at GOTO Line:\r\n                                    ;Carry is Set for Subtract without Borrow\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10578":{
"Text":"                                    ;YES, Page boundary crossed",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10576":{
"Text":"                                    ;Was a Page boundary crossed?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10634":{
"Text":"                                    ;Pull Next Char/Token Pointer, Low \u0026 High;\r\n                                    ;Then, Return to Caller from POP3.\r\n                                    ;Else, Not POP, Restore Ptrs from Stack:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10721":{
"Text":"\r\n==============================================================================\r\nIF Statement (Continued)\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10724":{
"Text":"                                    ;Is it a Command Token or a Line Number?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10752":{
"Text":"                                    ;Find correct Case Line # ",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10782":{
"Text":"                                    ;[(64,000=$FA00)/10]=[(6400=$1900)]\r\n------------------------------------------------------------------------------\r\nWhy is LINNUM already divided by 10?  Because, with each iteration, we are reading the most significant digit of a decimal line number (characters from left to right); which then gets multiplied by 10 before adding the next deci-mal digit to its value (all the while, converting ASC/decimal to BIN/hex).\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10772":{
"Text":"                                    ;(NXTDGT JSR CHRGET below does the carry)\r\n                                    ;Else; Subtract w/o Carry:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10776":{
"Text":"                                    ;Check Range:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10816":{
"Text":"                                    ; (INC = 3 cycles vs. ADC = 5 cycles)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10853":{
"Text":"----------------------------------- ;Else, Assure Packed FAC Integer Format:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10859":{
"Text":"----------------------------------- ;Store Packed FAC Integer Value in Var:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10870":{
"Text":"----------------------------------- ;LET for Integers is done:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10885":{
"Text":"----------------------------------- ;MAYBE, Test String Data Address, Low:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10892":{
"Text":"----------------------------------- ;NO, String Data is NOT in Storage Area!\r\n                                    ;(String Data may be inside the Program)\r\nDescriptor Exist?                   ;Does a String Descriptor/Variable exist?\r\n----------------------------------- ;Test Descriptor Adrs, High: (VARTAB\u003eIt?)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10906":{
"Text":"----------------------------------- ;NO, Str Descriptor/Variable NonExistant\r\n                                    ;Either: String Data is already in Storage\r\nCopy Descriptor                     ;Or: String Descriptor is NOT a Variable\r\n----------------------------------- ;So, just Store String Descriptor: ",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10900":{
"Text":"----------------------------------- ;MAYBE, Test Descriptor Address, Low:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10931":{
"Text":"----------------------------------- ;FAC   = Temp Descriptor, String Length\r\nStore Descriptor                    ;FAC+1 = Temp Descriptor, String Addr, Lo\r\n----------------------------------- ;FAC+2 = Temp Descriptor, String Addr, Hi\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13269":{
"Text":"==============================================================================\r\nInitialize String Space \u0026 Set String Descriptors for a Character String:\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13877":{
"Text":"==============================================================================\r\nFree Temp Descriptor w/o Freeing up String\r\n==============================================================================\r\n\r\nRelease TD from SD Stack if [(A,Y)={Low,High}]=(LASTPT):\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10942":{
"Text":"--------- Move Descriptor --------- ;Copy Descriptor into String Ptr Variable:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10935":{
"Text":"--------- Save Descriptor --------- ;Temp Descriptor Adrs: [(A,Y)={Low,High}]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11008":{
"Text":"------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11010":{
"Text":"                                    ;1. It is used as a Subroutine by STRPRT\r\n                                    ;2. It\u0027s a good place, it does no harm! \u003e\u003e\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10981":{
"Text":"                                    ;\u003c\u003c\u003c Clear Carry is unnecessary here! \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11022":{
"Text":"\r\n------------------------------------------------------------------------------\r\nAdvance Cursor to Next Comma Column:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11026":{
"Text":"                                    ;[%00110000=$30=48 would limit Cols more]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14069":{
"Text":"==============================================================================\r\nEvaluate Formula at TXTPTR into FAC; \r\nThen Convert FAC to a Single Byte, Integer (0-255), in X-Reg:\r\n==============================================================================\r\n\r\nScan to Next Character, Evaluate Expression at TXTPTR, Assure its Numeric, \r\nPut it in FAC, \u0026 Convert FAC to a Single Byte, Integer (0-255), in X-Reg:\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10967":{
"Text":"Loop                                ;Continue processing Print Statement:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11041":{
"Text":"------------------------------------------------------------------------------\r\nPrint: TAB(X) or SPC(X)?\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11044":{
"Text":"                                    ;Else, ... C=1; Print TAB(X-Reg)\r\n                                    ;[X-Reg was set via JSR GTBYTC (above)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11095":{
"Text":"==============================================================================\r\nPrint a Space Character:\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11098":{
"Text":"==============================================================================\r\nPrint a Question Mark Character:\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13287":{
"Text":"==============================================================================\r\nString Literal #1: Make String {AY/INPUT/STACK} Buffer into a Literal \"String\"\r\n==============================================================================\r\nBuild a Descriptor for String starting at [(A,Y)={Low,High}] terminated only by a Zero or a Quotation Mark [built ins].  Return with a Temporary Descriptor and its Address in DSCTMP (FAC+0,1,2) and TMPVPTR (FAC+3,4), respectively; and Flag as String Variable (VALTYP = $FF).\r\n==============================================================================\r\nSetup Literal Scan Delimiters to Stop STRLTRL2 only on a Zero or a Quote Mark:\r\n------------------------------------------------------------------------------",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13293":{
"Text":"==============================================================================\r\nString Literal #2: Make String {AY/INPUT/STACK} Buffer into a Literal \"String\"\r\n==============================================================================\r\nBuild Descriptor for String starting at [(A,Y)={Low,High}] terminated by Zero or Quote Mark [built ins], \u0026 CHARAC or ENDCHR [caller/user must-be presets].  Return with a Temp Descriptor and its Address in DSCTMP (FAC+0,1,2) and TMPVPTR (FAC+3,4), respectively; and Flag as String Variable (VALTYP = $FF).\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11905":{
"Text":"                                    ;YES: Processes Literal String;\r\n                                    ;Set [(A,Y)={Low,High}]=(TXTPTR+C):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13365":{
"Text":"------------------------------------------------------------------------------\r\nCopy Temp Descriptor [in DSCTMP (FAC+0,1,2)] into the Temp Descriptor Stack.  Put its ZP-Address there into the Temp Variable Pointer [TMPVPTR (FAC+3,4)].\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13301":{
"Text":"----------------------------------- ;Find End of String:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13316":{
"Text":"----------------------------------- ;Else [Z=1]: End of String Found",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13320":{
"Text":"                                    ;Else [Z=0]: Quote NOT Found [C=(A\u003e=\u0027\"\u0027)]\r\n----------------------------------- ;Calculate End of String Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13321":{
"Text":"                                    ;Else [C=1]: Includes \u0027\"\u0027 in Str (Length)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13335":{
"Text":"------------------------------------------------------------------------------\r\nWhere does the String start?  The String must be moved if it starts at the End of Page 0 ($FF), or if it is in the Input Buffer (Page 2):\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13354":{
"Text":"------------------------------------------------------------------------------\r\nAssure Temporary \"String Descriptors\" Stack is not full:\r\n------------------------------------------------------------------------------\r\n                                    ;When Stack is Full: [(TEMPPT|X)=#INDEX]!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13343":{
"Text":"----------------------------------- ;YES, Page 0 or 2:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13356":{
"Text":"                                    ;Str Descriptor Stack ($55~$5D)=(9 bytes)\r\n                                    ; Holds up to 3 Descriptors (3 bytes each)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13394":{
"Text":"==============================================================================\r\nGet/Make Space for a Character String at the Bottom of String Storage:\r\n==============================================================================\r\nEnter with: A-Reg Set to String Length (Number of Bytes) Desired/Needed\r\nReturn with: [(X,Y)={Low,High}] Set to the Address of the New Space Allocated\r\n             (A-Reg remains unchanged)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13360":{
"Text":"------------------------------------------------------------------------------\r\n\u003c\u003c\u003c BUG if ever [(TEMPPT|X) \u003e #INDEX]!  BCC|BLT would be better here; followed by CPX #TEMPST \u0026 BCS|BGE PUTTEMP to assure (TEMPPT|X) is within the stack. \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;User-Callable Error Entry Point:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13393":{
"Text":"                                    ;When Stack\u0027s Full: [(TEMPPT|X)=#INDEX]!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13277":{
"Text":"==============================================================================\r\nMake String Space \u0026 Set the Temporary Descriptor for a Character String:\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13253":{
"Text":"==============================================================================\r\n\"STR$\" String Function: Immediate \u0026 Deferred; Parameter: STR$(aexpr)\r\n==============================================================================\r\nConverts a Number (aexpr) into a String representing its Value.\r\nThe Number is evaluated before it is converted into a String.\r\nIf the Number exceeds the limit for Reals, an Overflow Error occurs.\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13824":{
"Text":"=================================== ;[2nd Entry Pt: from STRPRT|STRCMP|FRE]\r\nFree up String Descriptor [(TMPVPTR)=(FAC+3,4)] \u0026 a Temp String if Lowest:\r\n----------------------------------- ;Get String Descriptor Pointer:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13828":{
"Text":"================================= ;[3rd Entry Pt: from STRCMP|CAT1|LEFTSTR]\r\nFree up a Temporary String if it is Lowest in RAM (Highest on String Stack):\r\n----------------------------------- ;Put String Descriptor Pointer in INDEX:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11072":{
"Text":"                                    ;Returns Address in INDEX \u0026 Length in (A)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12562":{
"Text":"------------------------------------------------------------------------------\r\nThe Next few lines are supposed to allow -32768 ($8000), but do not because compared to -32768.00049   [Really? Look at the Limits. Maybe it\u0027s by design!]\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11152":{
"Text":"------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11171":{
"Text":"                                    ;Simulate Input [(X,Y)={Low,High}]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11185":{
"Text":"                                    ;\u003c\u003c\u003c Could save a byte here with JMP \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12259":{
"Text":"==============================================================================\r\nPointer Get: Locates or Creates a Specific Variable.\r\n==============================================================================\r\nPTRGET reads a variable name from CHRGET \u0026 finds it in memory.  On entry, TXTPTR must point to the first character of the variable name.  On exit, the address to the value of the variable is in VARPTR \u0026 [(A,Y)={Low,High}].  If PTRGET cannot find a simple variable, it creates one.  If PTRGET cannot find an array variable, it creats an array, dimensioned from 0 to 10, with all elements cleared to zero.\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12264":{
"Text":"----------------------------------- ;Subroutine Entry Point for DIM Statement:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12266":{
"Text":"                                    ;Set to Zero unless called frm DIM (above)\r\n----------------------------------- ;Subroutine Entry Point for FN Statements:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12268":{
"Text":"                                    ;VARNAM: Last-Used Variable Name Pointer\r\n                                    ;is being used here to store the Var Name \r\n                                    ;(Bytes)=($:+-;%:--;Real:++;Function:-+)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12295":{
"Text":"==============================================================================\r\nPointer Get (continued): General Variable Scan\r\n==============================================================================\r\nPTRGET scans the variable name at TXTPTR, and searches the variable table (VARTAB) \u0026 array table (ARYTAB) for the name.  If not found, PTRGET creates a variable of the appropriate type.  PTRGET returns with the address in VARPTR \u0026 [(A,Y)={Low,High}].\r\n\r\nActual activity controlled somewhat by two flags:\r\n\r\n  DIMFLG - Array Dimension Flag: Nonzero if called from DIM; Else = 0\r\n  SUBFLG - Subscripts Flag: $00 = Allowed; $80 = NOT Allowed;\r\n         = $40     if called from GETARYPT;\r\n         = $80     if called from DEF FN;\r\n         = $C1-DA  if called from FN\r\n==============================================================================\r\n ",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12246":{
"Text":"==============================================================================\r\n\"DIM\" Statement: Immediate and Deferred;\r\n                 Parameters: DIM Var Subscript [{,Var Subscript}]\r\n==============================================================================\r\nFunction: Array Dimensional Assignment; Allocates Space for Array Variables\r\n==============================================================================\r\n\r\n----------------------------------- ;Next Dimension (Loop-Back) Entry Point:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12249":{
"Text":"----------------------------------- ;DIM Statement (Main) Entry Point:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11252":{
"Text":"                                    ; VARPTR \u0026 [(A,Y)={Low,High}]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11256":{
"Text":"----------------------------------- ;Save CHRGET\u0027s TXTPTR:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11264":{
"Text":"----------------------------------- ;Point CHRGET/TXTPTR at Input Device:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11272":{
"Text":"----------------------------------- ;Check the Type of Input:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11281":{
"Text":"----------------------------------- ;GET:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11303":{
"Text":"                                    ;[(X,Y)={Low,High}] Ptr = (Input-Buffer)-1\r\n----------------------------------- ;Point CHRGET/TXTPTR at [(X,Y)={Lo,Hi}]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11342":{
"Text":"                                    ;Skip over Quotation Mark, If there was 1:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11390":{
"Text":"----------------------------------- ;Swap Pointers:\r\n----------------------------------- ;Save Position in Input Buffer",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11398":{
"Text":"----------------------------------- ;Restore Program Pointer",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11406":{
"Text":"----------------------------------- ;Get Character Last Got from Program:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11449":{
"Text":"----------------------------------- ;Do Next Statement or Line:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11438":{
"Text":"                                    ;^(Print Error Message based on X-Reg)\r\n----------------------------------- ;Else, We are Out of Data; Point to first \r\n                                    ;Text Character in Next Statement or Line:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11473":{
"Text":"----------------------------------- ;INPUT: Any more Characters in Line?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11479":{
"Text":"                                    ;YES; Throw Extra Ignored Input Error:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10825":{
"Text":"                                    ; in VARPTR \u0026 [(A,Y)={Low,High}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11522":{
"Text":"                                    ; in VARPTR \u0026 [(A,Y)={Low,High}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12056":{
"Text":"                                    ;[(TOK_LEFT*2-1)=($E8*2-1)=($D0-1)=($CF)]\r\n             -----------------------------------------------------------------\r\n             AKA:  #\u003eJMPADRTBL    ;Empty Space AT $CFDC (UNFNC-164)\r\n                   [Base Address for Index into Unary Functions Address Table]\r\n             -----------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13091":{
"Text":"                                    ;in VARPTR \u0026 [(A,Y)={Low,High}]\r\n----------------------------------- ;Assure Proper Form: DEF FN Name (Var)=Exp\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18400":{
"Text":"                                    ; in VARPTR \u0026 [(A,Y)={Low,High}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11536":{
"Text":"                                    ; (This trims off any inner loops)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11554":{
"Text":"----------------------------------- ;Calculate New/Current FOR Value:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11570":{
"Text":"----------------------------------- ;Q: Is New FOR Value at/beyond End/TO Val?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11575":{
"Text":"                                    ;Rtns: (A)=(1|0|-1)\u003c--(A,Y)=[(\u003c|=|\u003e) FAC]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11549":{
"Text":"                                    ;(for Comparison to FAC via FCOMP2, below)\r\n----------------------------------- ;Load FAC from [(A,Y)={Low,High}]\r\n                                    ; = STEP Value STACK Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11572":{
"Text":"                                    ;[(A,Y)={Low,High}]=FOR Value STACK Adrs\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11582":{
"Text":"----------------------------------- ;Else, Setup FOR Line Number:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11592":{
"Text":"----------------------------------- ;Set TXTPTR to just after FOR Statement:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11602":{
"Text":"----------------------------------- ;Go Do New/Next Statement:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11605":{
"Text":"----------------------------------- ;Loop is Done: Pull FOR-Frame from STACK:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11535":{
"Text":"----------------------------------- ;X-Reg is our Stack Pointer Index Safe:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10241":{
"Text":"\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n==============================================================================\r\nROM Space ($D800-$DFFF): ROM Socket $D8 on a real Apple II Plus.\r\n==============================================================================\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14336":{
"Text":"\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n==============================================================================\r\nROM Space ($E800-$EFFF): ROM Socket $E8 on a real Apple II Plus.\r\n==============================================================================\r\nZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11683":{
"Text":"                                    ;If \u003e= \"=\" Token, Carry is Set",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11684":{
"Text":"                                    ;Now (A)=[(0|3|5) for (\"\u003e\"|\"=\"|\"\u003c\")]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11688":{
"Text":"                                    ;Check for Illegal Combinations:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11675":{
"Text":"                                    ;Now (A)=[(0|1|2) for (\"\u003e\"|\"=\"|\"\u003c\")]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11697":{
"Text":"                                    ;Is it another Rel Op (\u003c,=,\u003e)?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11706":{
"Text":"                                    ;Rel Ops Not Found, So Not an Equation\r\n                                    ;\u0026 Char/Token is [(A+207)\u003e(\"\u003c\":$D1=209)]\r\n------------------------------------------------------------------------------\r\n                                    ;Now (A)\u003c(0); Add Difference:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11710":{
"Text":"                                    ;Rel Ops Not Found, So Not an Equation,\r\n                                    ;\u0026 Char/Token is [(A+207)\u003c(\"+\":$C8=200)]\r\n------------------------------------------------------------------------------\r\n                                    ;Now (A)=[(0|1|2|3) for (\"+\"|\"-\"|\"*\"|\"/\")]\r\n                                    ;\u0026 Char/Token is [(A+207)\u003e=(\"+\":$C8=200)]\r\n                                    ;-----------------------------------------\r\n                                    ;If Last Result was a String, Concatenate:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11708":{
"Text":"                                    ;Now (A)\u003c=[(0|1|2|3) : (\"+\"|\"-\"|\"*\"|\"/\")]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11719":{
"Text":"                                    ;Multiply it by 3:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13719":{
"Text":"==============================================================================\r\nConcatenate Two Strings\r\n==============================================================================\r\n\r\n----------------------------------- ;Save 1st String\u0027s Descriptor Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11734":{
"Text":"                                    ;YES; Rtns here if Type is Numeric (C=0)\r\n                                    ;Else, NO Rtn; Does Type Mismatch Error!\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11762":{
"Text":"                                    ;(MO_UPLS_LTGT-MTHTBL)=($D0CD-$D0B2)=($1B)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11766":{
"Text":"------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11692":{
"Text":"                                    ;^(Go Throw a \"?Syntax\" Error!) [Exit] ",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11797":{
"Text":"------------------------------------------------------------------------------\r\nSTEP Entry Point, to Push STEP Amount (Value in FAC \u0026 Sign in (A)=(-1|0|1):\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11808":{
"Text":"------------------------------------------------------------------------------\r\nFOR Entry Point, with INDEX = STEP, to Push Initial Value of FOR Variable:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11811":{
"Text":"----------------------------------- ;Push FAC (L,M,H,T,X):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11829":{
"Text":"------------------------------------------------------------------------------\r\nIf NO Relative Operators were Found, this Statement is Not an Equation!\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11798":{
"Text":"                                    ;Prepare for Return via JMP (Indirect):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11806":{
"Text":"                                    ;None cross page boundary, so NO INC here!",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11834":{
"Text":"------------------------------------------------------------------------------\r\nELSE, Statement is a Stacked Operation, so Execute the Stacked Operation:\r\n------------------------------------------------------------------------------\r\n  A-Reg = Precedence byte\r\n  Stack (# of bytes): 1 - CPRMASK\r\n                      5 - ARG\r\n                      2 - Address of Subroutine to Execute\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11841":{
"Text":"                                    ;(Y)=[(-1)|(0|3|6|9) : (\"+\"|\"-\"|\"*\"|\"/\")]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11843":{
"Text":"------------------------------------------------------------------------------\r\nPull \u0026 Put Stacked FAC into ARG (Secondary FAC); Then go to Math subroutine (whose Address was already pushed onto the Stack) via an RTS; Note that Relative Ops (\u003c|=|\u003e) all go to RELOPS ($DF65):\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11872":{
"Text":"==============================================================================\r\nGet an Element from Expression: \r\n==============================================================================\r\nThis is the \"Kernel\" subroutine of FRMEVL (for Evaluating Expression Formats)\r\n(It also Evaluates Expressions in Parenthesis via Recursive calls to FRMEVL)\r\n==============================================================================\r\nGet Value of Variable or Number at TXTPTR \u0026 put it in the FAC \r\nIf it is a String, put pointer to String Descriptor in the FAC\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11926":{
"Text":"                                    ;(MO_UNOT_EQUL-MTHTBL)=($D0CA-$D0B2)=($18)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11940":{
"Text":"==============================================================================\r\nTOKFN Check\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11947":{
"Text":"==============================================================================\r\nTOKSGN Check\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11954":{
"Text":"==============================================================================\r\nEvaluate \"(Expression)\" [within Parentheses]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11977":{
"Text":"==============================================================================\r\nPrint Syntax Error\r\n==============================================================================\r\n\r\n----------------------------------- ;User-Callable Error Entry Point:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11989":{
"Text":"==============================================================================\r\nLocate \u0026 Point to a Specific Variable:\r\n==============================================================================\r\n                                    ;YES: It\u0027s a Variable Name! Locate Var:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12044":{
"Text":"==============================================================================\r\nProcess Unary Operators (Functions):\r\n==============================================================================\r\nContinue TOKSGN Check: Is it a \"SGN\" (Math Function) Token?\r\n------------------------------------------------------------------------------\r\n                                    ;If Not Unary, Do Special:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12005":{
"Text":"------------------------------------------------------------------------------\r\nGet Signed Integer at [(TMPVPTR)=(FAC+3,4)] into [(Y,A)={Low,High}], Then \r\nFloat (Y,A) into FAC; Skip it ALL if the Number is already a Real/FP Number!\r\n------------------------------------------------------------------------------\r\n                                    ;Variable Type is Number (=0)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12022":{
"Text":"------------------------------------------------------------------------------\r\nUnpack FP Number at [(A,Y)={Low,High}] into FAC\r\n------------------------------------------------------------------------------\r\n                                    ;Variable Type is Number (=0)\r\n                                    ;But, the Number is FP, Not an Integer!\r\n                                    ;(A) is Temp Variable Ptr, Low  (FAC+3)\r\n                                    ;(Y) is Temp Variable Ptr, High (FAC+4)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12025":{
"Text":"==============================================================================\r\nHandle \"SCRN(\" Token\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12111":{
"Text":"==============================================================================\r\n\"OR\" Conditional Statement\r\n==============================================================================\r\n\r\n             EQU    *               ;(Math Operator Table Branch Address +1)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12157":{
"Text":"----------------------------------- ;Do a String Comparison:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12237":{
"Text":"==============================================================================\r\n\"PDL\" (Paddle) Statement: Immediate and Deferred; Parameter: PDL (Aexpr)\r\n==============================================================================\r\nFunction: Converts Analog Resistance Input to Digital Numeric Output\r\n Input: (Aexpr)=(0|1|2|3) is the number of a game controller (potentiometer)\r\nOutput: (0 to 255) corresponding to a variable resistance of (0 to 150 Kohms)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11982":{
"Text":"==============================================================================\r\nComparison for Greater-Than-\u003e-Less-Than [Rel Ops (\"\u003e\") Unary Minus entry]:\r\n==============================================================================\r\nFrom MATHTBL: MO_UMNS_GTLT  DFB P_NEQ    ;$CF...207...\u003e...Unary Minus (\"-\")\r\n              TA_UMNS_GTLT  DW  NEGOP-1  ;(GREATER-THAN)-\u003e-(LESS-THAN) Op Adrs\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11984":{
"Text":"                                    ;(MO_UMNS_GTLT-MTHTBL)=($D0C7-$D0B2)=($15)\r\n==============================================================================\r\n\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11920":{
"Text":"==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11968":{
"Text":"\r\n==============================================================================\r\nCheck Current Char \u0026 Get Next\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12048":{
"Text":"------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12072":{
"Text":"                                    ;Stack String Descriptor Adrs (TMPVPTR):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12090":{
"Text":"----------------------------------- ;NOT a String Function (ReEntry Point)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12098":{
"Text":"                                    ;(UNFNC-TOK_SGN*2+$100)=($D080-$D2*2+$100)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12103":{
"Text":"                                    ;(UNFNC-TOK_SGN*2+$101)=($D080-$D2*2+$101)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12108":{
"Text":"----------------------------------- ;NO Return for CHR$, LEFT$, RIGHT$, or MID$",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"8191":{
"Text":"                                    ; Index into Unary Functions Address Table",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12095":{
"Text":"----------------------------------- ;Join Unary Functions (ReEntry Point)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12117":{
"Text":"\r\n==============================================================================\r\n\"AND\" Conditional Statement\r\n==============================================================================\r\n\r\n             EQU    *               ;(Math Operator Table Branch Address +1)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12125":{
"Text":"\r\n------------------------------------------------------------------------------\r\nFlag \"FALSE\" Condition\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12128":{
"Text":"\r\n------------------------------------------------------------------------------\r\nFlag \"TRUE\" Condition\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12130":{
"Text":"----------------------------------- ;Convert Y-Reg to Real/FP Number in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11937":{
"Text":"----------------------------------- ;Convert Y-Reg to Real/FP Number in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12038":{
"Text":"----------------------------------- ;Convert (Y) to Real/FP Number in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12240":{
"Text":"                                    ;\u003c\u003c\u003c Validity [(X)\u003c(4)] is NOT Checked! \u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13057":{
"Text":"\r\n------------------------------------------------------------------------------\r\nConvert Number in Y-Index Register to Real/FP Number in FAC\r\n------------------------------------------------------------------------------\r\n\r\n                                    ;Float Unsigned Integer \u0026 Flag as Number:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14041":{
"Text":"----------------------------------- ;Convert Y-Reg to Real/FP Number in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14063":{
"Text":"----------------------------------- ;Convert Y-Reg to Real/FP Number in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14200":{
"Text":"----------------------------------- ;Convert Y-Reg to Real/FP Number in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13042":{
"Text":"                                    ;Now: (A) is Free Space, High\r\n\r\n------------------------------------------------------------------------------\r\nFloat Signed Integer in [(Y,A)={Low,High}] into FAC\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13062":{
"Text":"==============================================================================\r\nPrint \"?Illegal Direct\" or \"?Undef\u0027d Function\" Error Message\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12138":{
"Text":"----------------------------------- ;Do a Numeric Comparison [ARG(\u003c|=|\u003e)FAC]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12142":{
"Text":"                                    ;Repack Value in ARG for FCOMP:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12153":{
"Text":"                                    ;Rtns: (A)=(-1|0|1)\u003c--(A,Y)=[(\u003e|=|\u003c) FAC]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12213":{
"Text":"----------------------------------- ;Do another String Character Comparison:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12225":{
"Text":"----------------------------------- ;Done with String Comparison;\r\n                                    ;Convert (FAC|==|ARG):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12243":{
"Text":"                                    ;Float Unsigned Integer \u0026 Flag as Number:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12250":{
"Text":"----------------------------------- ;[(X\u003c\u003e0)] \u0026 Entry Point Flags DIM calling:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12316":{
"Text":"----------------------------------- ;Setup Variable Type Flags:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12334":{
"Text":"                                    ;^(Throws a \"?SYNTAX\" Error!)\r\n------------------------------------------------------------------------------\r\nFlag Var \u0026 Name as Integer (%)      ;VARNAM: Last-Used Variable Name Pointer\r\n                                    ;is being used here to store the Var Name \r\n                                    ;(Bytes)=($:+-;%:--;Real:++;Function:-+)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12346":{
"Text":"------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12413":{
"Text":"\r\n==============================================================================\r\nCheck if (A) Contains ASCII Letter (\"A\"~\"Z\")\r\n------------------------------------------------------------------------------\r\nReturn: Carry Set   (C=1) if (A)==(\"A\"~\"Z\")\r\n        Carry Clear (C=0) if (A)\u003c\u003e(\"A\"~\"Z\")\r\n==============================================================================\r\n\u003c\u003c\u003c NOTE: Faster \u0026 Shorter Code! \u003e\u003e\u003e                   [Easier to Understand!]\r\n------------------------------------------------------------------------------\r\n               CMP #\u0027[\u0027  ;Compare High End\r\n               BCS GTE   ;Branch if (A)\u003e(\"Z\")\r\n               CMP #\u0027A\u0027  ;Compare Low End\r\n               RTS       ;(C=0) if (A)\u003c(\"A\")\r\n                         ;(C=1) if (A)=(\"A\"~\"Z\")\r\n          GTE  CLC       ;(C=0) if (A)\u003e(\"Z\")\r\n               RTS       ;Return to Caller\r\n==============================================================================\r\n\u003c\u003c\u003c NOTE: Original (Slower \u0026 Longer) Code \u003e\u003e\u003e          [Harder to Understand!]\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12383":{
"Text":"                                    ; (Start of Arrays Pointer, High)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12387":{
"Text":"                                    ; (Start of Arrays Pointer, Low)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12367":{
"Text":"----------------------------------- ;Initialize Variable Pointer:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12389":{
"Text":"----------------------------------- ;Search for Varible Name/Pointer:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12375":{
"Text":"----------------------------------- ;Search Loops:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12402":{
"Text":"----------------------------------- ;Else, Advance to next Var Name/Pointer:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12419":{
"Text":"                                    ;BGE: If (A)\u003e(\"Z\"), (C=0) Carry is Cleared\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12417":{
"Text":"                                    ;Else (C=1), Compare High End:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12422":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;If (A)\u003c\u003e(\"A\"~\"Z\"), (C=0) Carry is Clear;\r\n                                    ;If (A)==(\"A\"~\"Z\"), (C=1) Carry is Set:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12423":{
"Text":"==============================================================================\r\nVariable (\u0026 Name) Not Found, So Make New Variable (With Variable Name Sought)\r\n==============================================================================\r\n                                    ;Assure Called from (FRMVAR JSR PTRGET):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12437":{
"Text":"----------------------------------- ;Else: Called from (FRMVAR JSR PTRGET)! \r\n                                    ;It isn\u0027t an Assignment (LET), so use Fake\r\n                                    ;Variable Address to Return Value of Zero\r\n                                    ;for New Variable Name used in Expression:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12425":{
"Text":"----------------------------------- ;*[Return Address-1 is Caller\u0027s Address+2;\r\n                                    ;JSR: (PC)+2-\u003eStack; RTS: Stack+1-\u003e(PC)]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12452":{
"Text":"----------------------------------- ;Set (HIGHTR) = Highest Source Address +1:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12466":{
"Text":"                                    ;(HIGHDS) = Highest Destination Adrs +1:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12525":{
"Text":"==============================================================================\r\nCompute Address of First Value in Array:     [(ARYPTR)=(LOWTR)+((Dims)*2)+(5)]\r\n==============================================================================\r\nNOTE: (ARYPTR) = (HIGHDS)\r\n------------------------------------------------------------------------------\r\n      (ARYPTR) = Applesoft Array Pointer\r\n      (HIGHDS) = Highest Destination Adrs +1\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12510":{
"Text":"----------------------------------- ;Set VARPTR \u0026 [(A,Y)={Low,High}] to New \r\n                                    ;Variable\u0027s Real # Value Address (Byte 2):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12460":{
"Text":"----------------------------------- ;Set (HIGHDS) = Highest Dest Adrs +1:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12470":{
"Text":"------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12473":{
"Text":"                                    ;Returns (HIGHDS) Reduced to (LOWTR+8): \r\n                                    ;(HIGHDS-1)=(LOWTR+7); (HIGHTR-1)=(LOWTR)\r\n------------------------------------------------------------------------------\r\n                                    ;Store (LOWTR+8) = New Start of Arrays:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12482":{
"Text":"----------------------------------- ;Set New Variable Pointer Data (7 bytes):\r\n                                    ;VARNAM: Last-Used Variable Name Pointer\r\n                                    ;is being used here to store the Var Name \r\n                                    ;(Bytes)=($:+-;%:--;Real:++;Function:-+)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12537":{
"Text":"----------------------------------- ;Set Array Pointer (ARYPTR):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12541":{
"Text":"                                    ;Now: Points to 1st Value in Array \r\n                                    ;Holding: Size of Last Array Dimension, Hi\r\n                                    ;Returns [(ARYPTR)=(LOWTR)+((Dims)*2)+(5)]\r\n                                    ;        [(ARYPTR)=[(A,Y)={Low,High}]]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12524":{
"Text":"                                    ;Now: Points to 1st Byte of Value\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12599":{
"Text":"                                    ;Converts Result to an Integer in TMPVPTR\r\n----------------------------------- ;Restore Variable Name:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12578":{
"Text":"----------------------------------- ;Subscripts Given, Parse Subscript List:\r\n                                    ;Save Array [(DIMFLG) \u0026 (INTFLG)]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12596":{
"Text":"----------------------------------- ;Evaluate Subcript as Integer:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12607":{
"Text":"----------------------------------- ;Duplicate VALTYP \u0026 DIMFLG on the Stack \u0026 \r\n                                    ;Put Subscript where they were on Stack:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12590":{
"Text":"----------------------------------- ;Save Variable Name:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12583":{
"Text":"----------------------------------- ;Save Variable Type ($00=Num, $FF=Str):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12588":{
"Text":"----------------------------------- ;Save Dimension/Subscript/Loop Counter:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12634":{
"Text":"----------------------------------- ;NO more Dimensions/Subscripts; Finish Up:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12605":{
"Text":"----------------------------------- ;Restore Loop Counter:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12586":{
"Text":"----------------------------------- ;Parse Subscript List:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12627":{
"Text":"----------------------------------- ;More Dimensions/Subscripts?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12649":{
"Text":"\r\n==============================================================================\r\nSearch Array Table for this Array Name\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12694":{
"Text":"                                    ;\"Something is Wrong with the Universe!\"\r\n\r\n==============================================================================\r\nPrint \"Bad Subscript\" or \"Illegal Quantity\" Error Message\r\n==============================================================================\r\n\r\n----------------------------------- ;Error Entry Point; Also User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12692":{
"Text":"                                    ;[(X,A)={Low,High}] = Search Pointer\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12653":{
"Text":"                                    ;[(X,A)={Low,High}] = Search Pointer\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12728":{
"Text":"\r\n==============================================================================\r\nMatch NOT Found: Make New Array Variable?\r\n==============================================================================\r\n                                    ;Check if Called from GETARYPTR:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12702":{
"Text":"==============================================================================\r\nMatch Found: Use Old Array Variable\r\n==============================================================================\r\n\r\n----------------------------------- ;Error Entry Point; NOT so User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12713":{
"Text":"                                    ;\\[Required by \"STORE\" Arrays to Tape Stt]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12743":{
"Text":"------------------------------------------------------------------------------\r\nPoint at Variable Name \u0026 Start Element Size Calculation:\r\n------------------------------------------------------------------------------\r\nHere, Element Size (in bytes) is the Variable\u0027s Descriptor Part.\r\nIn a Simple Variable Pointer, it is preceded by the Variable Name (2 bytes), \u0026 may be succeeded by a number of unused bytes, for a total of seven bytes.\r\nFor Array Variables, the Dimension Size Elements (2 bytes each) succeed the Variable\u0027s Descriptor Part \u0026 the Pointer may exceed seven bytes in total length.  These will also be added into the Element Size (below), which then becomes more than just the Variable\u0027s Descriptor, \u0026 is referred to as the \"Total Bytes of all Array Elements.\"\r\n[Add two for the Array Varibles\u0027s Name at the beginning \u0026 you have the whole Array Variable Pointer length!  So, why not just subtract 2 for the total?]\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12748":{
"Text":"            ------------------------------------------------------------------\r\n            \u003c\u003c\u003c NOTE: The 3 OP lines above could have been written as 2: \u003e\u003e\u003e\r\n            ------------------------------------------------------------------\r\n            LDY     #0              ;Clear Indirect Addressing Index\r\n                                    ;^(Point at 1st Char of Variable Name)\r\n            STY     STRNG2+1        ;Clear Size: No. of Array Elements, High\r\n            ------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12766":{
"Text":"------------------------------------------------------------------------------\r\nNow: (X)=(5|3|2)=(Real|String|Integer)=[Size of Var\u0027s Descriptor Part (bytes)]\r\n(Unused)=(0|2|3)=(Real|String|Integer)=[Latter bytes of Variable Pointer]\r\n     (VarPtrLen)=(VarNameLen)+(X)+(Unused)=(2)+(X)+(Unused)=(7)\r\n             (X)=(VarPtrLen)-(VarNameLen)-(Unused)=(7-2)-(Unused)=(5)-(Unused)\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12768":{
"Text":"------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12770":{
"Text":"                                    ;Bypass Offset to Next Array (set later):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12783":{
"Text":"----------------------------------- ;Put Specified DIM in [(X,A)={Low,High}]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12791":{
"Text":"------------------------------------------------------------------------------\r\nBuild Dimension Table within Array Variable:\r\n------------------------------------------------------------------------------\r\nDIMs start with the last one \u0026 go down to first (N, N-1, N-2, ..., 2, 1, 0); \r\nEach DIM is 2 bytes long \u0026 in {High,Low} (vs. the normal {Low,High}) format!\r\n------------------------------------------------------------------------------\r\n                                    ;Add Dimension Size to Array Descriptor:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12775":{
"Text":"------------------------------------------------------------------------------\r\nSave Dimensions LOOP: Stores Dimension Elements in Array Variable Pointer\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12758":{
"Text":"                                    ;^(Point at 2nd Char of Variable Name)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12811":{
"Text":"------------------------------------------------------------------------------\r\nNow: Total Bytes of all Array Elements (Running Size) is [(X,A)={Low,High}]\r\n==============================================================================\r\nGet Address at End of Array \u0026 Assure sufficient Arrays-to-Strings Free-Space:\r\n------------------------------------------------------------------------------\r\n                                    ;Point to End of Array (Compute Address):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12746":{
"Text":"                                    ;^(Point at 1st Char of Variable Name)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12750":{
"Text":"                                    ;VARNAM: Last-Used Variable Name Pointer\r\n                                    ;is being used here to store the Var Name \r\n                                    ;(Bytes)=($:+-;%:--;Real:++;Function:-+)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12801":{
"Text":"                                    ;-----------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12826":{
"Text":"------------------------------------------------------------------------------\r\nNow: [(A,Y)={Low,High}] = Address to which Array Space needs to grow\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12841":{
"Text":"----------------------------------- ;Clear the Array (from Top to Bottom):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12835":{
"Text":"                                    ;Compensate for Reduction at Top of Loop:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12852":{
"Text":"------------------------------------------------------------------------------\r\nCompute Offset to Next Variable (End Of Arrays) \u0026 Store in Array Descriptor:\r\n------------------------------------------------------------------------------\r\n                                    ;Point at this Array\u0027s 1st Element:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12870":{
"Text":"----------------------------------- ;Was this S/R Called from a DIM Statement?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12833":{
"Text":"----------------------------------- ;Prepare to Clear the Array:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12846":{
"Text":"----------------------------------- ;Clear the Array (Full Pages Entry Point):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12874":{
"Text":"                                    ;NO: Now we need to find the Element\r\n\r\n==============================================================================\r\nFind Array Element Specified\r\n==============================================================================\r\n(LOWTR),Y Points at Number of Dimensions in the Array Descriptor.\r\nThe Dimension Subscripts are all on the Stack as Integers.\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12905":{
"Text":"                                    ;Else, Subscript is Too Large (Error!)\r\n\r\n------------------------------------------------------------------------------\r\nError Vectors:\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12911":{
"Text":"------------------------------------------------------------------------------\r\nFind Array Element Specified (continued)\r\n------------------------------------------------------------------------------\r\n\r\n                                    ;Determine if 1st time through S/R:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12919":{
"Text":"                                    ;^ Also prevents Multiplying by Zero",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12916":{
"Text":"                                    ;(A)=(High OR Low)=(0) if Subscript is 0",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12922":{
"Text":"                                    ;---- Multiplies: [(STRNG2)*[(LOWTR),Y]]\r\n                                    ;Returns Product: [(X,(A=Y))={Low,High}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12923":{
"Text":"                                    ;^[Overwrites (A): Product of Subs, High)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12937":{
"Text":"                                    ;Now Multiply by Element Size:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12740":{
"Text":"                                    ;Holding: Size of Last Array Dimension, Hi\r\n                                    ;Rtns: [(ARYPTR)=(LOWTR)+((Dims)*2)+(5)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10617":{
"Text":"----------------------------------- ;User-Callable Error Entry Point:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12708":{
"Text":"                                    ;^(Print Error Message based on X-Reg)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10620":{
"Text":"----------------------------------- ;Error Entry Point; Also User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13070":{
"Text":"----------------------------------- ;Error Entry Point; Also User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13746":{
"Text":"----------------------------------- ;User-Callable Error Entry Point:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12959":{
"Text":"                                    ;Size of Each Element [(X,A)={Low,High}]\r\n                                    ;Returns Product: [(X,(A=Y))={Low,High}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12960":{
"Text":"                                    ;^[Overwrites (A): Accumulated Offset, Hi]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12929":{
"Text":"                                    ;^(Points at Last Dimension Size, Low)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12972":{
"Text":"                                    ;--- (X): Accumulated Offset, Low",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12973":{
"Text":"==============================================================================\r\n16-bit Integer Multiplication Routine: (Used Only by Array Subscript Routines)\r\n==============================================================================\r\n\r\n------------------------------------------------------------------------------\r\n1st Entry Point Returns Product: [(X,(A=Y))={Low,High}]=[(STRNG2)*[(LOWTR),Y]]\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12982":{
"Text":"------------------------------------------------------------------------------\r\n2nd Entry Point Returns Product: [(X,(A=Y))={Low,High}]=[(STRNG2)*(X,A)]\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12988":{
"Text":"                                    ;Initialize Product:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12992":{
"Text":"----------------------------------- ;Multiply Subs Loop:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13006":{
"Text":"                                    ;Else: Add into Partial Product:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13022":{
"Text":"==============================================================================\r\n\"FRE\" Statement: Immediate \u0026 Deferred; Parameter: FRE (Any Legal Expression);\r\nE.g., X=FRE(0); Collects Garbage \u0026 Returns Number of Bytes of Free Memory left\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12665":{
"Text":"                                    ;Else, Found Array Var Name, Check it:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12680":{
"Text":"                                    ;Else, Not a Match, Keep Searching:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12717":{
"Text":"                                    ;Holding: Size of Last Array Dim, High\r\n                                    ;Rtns: [(ARYPTR)=(LOWTR)+((Dims)*2)+(5)]\r\n                                    ;      [(ARYPTR)=[(A,Y)={Low,High}]]\r\n\r\n----------------------------------- ;Check if Number of Dimensions Match:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12714":{
"Text":"----------------------------------- ;Prepare to Find Array Element Specified:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12732":{
"Text":"                                    ;Else, Error!--Called from GETARYPTR:\r\n----------------------------------- ;User-Callable Error Entry Point:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12737":{
"Text":"==============================================================================\r\nMake New Array Variable!\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12798":{
"Text":"                                    ;-----------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12792":{
"Text":"                                    ;^(Point at Next Dimension Size, High)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12795":{
"Text":"                                    ;^(Point at Next Dimension Size, Low)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12807":{
"Text":"                                    ;^(Point at Last-Used Dimension Size, Low)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17198":{
"Text":"==============================================================================\r\n\"DEL\" Statement: Immediate \u0026 Deferred; Parameters: DEL LineNuml , LineNum2\r\n==============================================================================\r\nDeletes a Range of Lines from LineNuml to LineNum2, inclusively; Respectively, if LineNuml/LineNum2 is NOT an Existing Program Line Number, the Next Larger/-/Smaller Line Number in the Program is used in lieu of LineNuml/LineNum2\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17296":{
"Text":"==============================================================================\r\n\"GR\" Statement: Immediate \u0026 Deferred; No Parameters\r\n==============================================================================\r\nSets Low-Resolution GRaphics Mode (40 by 40) for Screen, leaving Four Lines for Text at Bottom; Screen is Cleared to Black, \u0026 Cursor is Moved to Text Window; Can be Converted to Full-Screen (40 by 48) Graphics, after executing GR, with command POKE -16302,0 or equivalent command POKE 49234,0; If GR follows a Full-Screen POKE command, Mixed Graphics-Plus-Text Mode is Reset; After a GR command, COLOR has been set to Zero\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17305":{
"Text":"==============================================================================\r\n\"TEXT\" Statement: Immediate \u0026 Deferred; No Parameters\r\n==============================================================================\r\nSets Screen to Full-Screen Text Mode (40 characters per line, 24 lines) from Low-Resolution Graphics Mode or either of two High-Resolution Graphics Modes; Prompt \u0026 Cursor are moved to last line of Screen; Same as VTAB 24 in Text Mode\r\n==============================================================================\r\n\r\n             JMP    TEXT02          ;(=$FB36) Would\u0027ve done both these things:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16869":{
"Text":"==============================================================================\r\n\"PR#\" Statement: Immediate \u0026 Deferred; Parameter: PR# Aexpr;\r\n==============================================================================\r\nSets Vector to direct Output to Slot Number (1~7) specified (Aexpr)\r\n------------------------------------------------------------------------------\r\nNote: There\u0027s No Check for a Valid Slot Number; As long as the Value is \u003c 256 it is Accepted; But the Monitor Masks the Value to 4 Bits (0-15)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16862":{
"Text":"==============================================================================\r\n\"IN#\" Statement: Immediate \u0026 Deferred; Parameter: IN# Aexpr\r\n==============================================================================\r\nSets Vector to get Input from Slot Number (1~7) specified (Aexpr)\r\n------------------------------------------------------------------------------\r\nNote: There\u0027s No Check for a Valid Slot Number; As long as the Value is \u003c 256 it is Accepted; But the Monitor Masks the Value to 4 Bits (0-15)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16946":{
"Text":"==============================================================================\r\n\"HLIN\" Statement: Immediate \u0026 Deferred; Parms: HLIN Aexpr1, Aexpr2 AT Aexpr3\r\n==============================================================================\r\nDraws a Horizontal Line of current COLOR on the Lo-Res Screen\r\nfrom [(X,Y)=(Aexpr1,Aexpr3)] to [(X,Y)=(Aexpr2,Aexpr3)]\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16961":{
"Text":"==============================================================================\r\n\"VLIN\" Statement: Immediate \u0026 Deferred; Parms: VLIN Aexpr1, Aexpr2 AT Aexpr3\r\n==============================================================================\r\nDraws a Vertical Line of current COLOR on the Lo-Res Screen\r\nfrom [(X,Y)=(Aexpr1,Aexpr3)] to [(X,Y)=(Aexpr2,Aexpr3)]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17368":{
"Text":"==============================================================================\r\nHigh-Resolution Graphics Mode (Hi-Res) Initialization Routines:\r\n==============================================================================\r\n\r\n==============================================================================\r\n\"HGR2\" Statement: Immediate \u0026 Deferred; No Parameters; Init \u0026 Clear HIRES Pg.2\r\n==============================================================================\r\nSets Full-Screen High-Resolution Graphics Mode (280 by 192), Displaying Screen Page 2 of Memory (16K-24K), Cleared to Black\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17378":{
"Text":"==============================================================================\r\n\"HGR\" Statement: Immediate \u0026 Deferred; No Parameters; Init \u0026 Clear HIRES Pg.1\r\n==============================================================================\r\nSets Mixed-Screen High-Resolution Graphics Mode (280 by 160), Displaying Screen Page 1 of Memory (8K-16K), Cleared to Black, Leaving 4 Lines of Text Visible at Bottom of Screen, \u0026 20 Lines of Text Invisible at Top of Screen, Overlayed with Graphics but Still Functional Underneath, with Cursor Unrestricted but Only Visible at Bottom of Screen\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18153":{
"Text":"==============================================================================\r\n\"HCOLOR=\" Statement: Immediate \u0026 Deferred; Parameter: HCOLOR = Aexpr; (0~7)\r\n==============================================================================\r\nSets High-Resolution Graphics Color; Color Names \u0026 Associated Values:\r\n+------------+-------------+---------------------------+---------------------+\r\n|  0 Blackl  |  4 Black2  _/  1 Green (depends on TV)  |  5 (depends on TV)  |\r\n|  3 Whitel  |  7 White2   \\  2 Blue  (depends on TV)  |  6 (depends on TV)  |\r\n+------------+-------------+---------------------------+---------------------+\r\nA High-Resolution Dot plotted with HCOLOR=3 (White) will be Blue if the \r\nX-Coordinate of the Dot is Even, Green if the X-Coordinate is Odd, and White only if both (X,Y) \u0026 (X+1,Y) are plotted; This is due to the way home TVs work [the Technology of the Time (late 1970s)--JPD]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18281":{
"Text":"==============================================================================\r\n\"DRAW\" Statement: Immediate \u0026 Deferred;\r\n                  Parameters: DRAW Aexprl [AT Aexpr2, Aexpr3]\r\n==============================================================================\r\nDRAWs a SHAPE (Aexprl)=(0~255) in High-Resolution Graphics at (X,Y)=(Aexpr2, Aexpr3)=(0~278,0~191) from a SHAPE Table previously loaded into Memeory using SHLOAD (from Tape) or BLOAD (from Disk), or typed in using Apple\u0027s F8 Monitor Program.\r\n==============================================================================\r\n\r\n                                    ;[Same as XDRAW, but it Compliments Color]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18287":{
"Text":"==============================================================================\r\n\"XDRAW\" Statement: Immediate \u0026 Deferred;\r\n                   Parameters: XDRAW Aexprl [AT Aexpr2, Aexpr3]\r\n==============================================================================\r\nProvides a way to Erase SHAPEs previously Drawn: XDRAWing a SHAPE at the same Location, Rotation, \u0026 Scale previously Drawn will Erase it without Erasing its Background; Same as DRAW, except Color used to XDRAW SHAPE is Complement of Color already existing at each Point plotted; Pairs of Complementary Colors are: Black \u0026 White; Cyan (or Light-Blue) \u0026 Green; and Violet \u0026 Orange\r\n==============================================================================\r\n\r\n                                    ;[Same as DRAW, but Compliments Color]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18407":{
"Text":"==============================================================================\r\n\"HTAB\" Statement: Immediate \u0026 Deferred; Parameter: HTAB Aexprl\r\n==============================================================================\r\nMoves the Cursor to the Column Position Specified (Aexprl), on the Current Screen Line, Relative to the Left Margin of the Text Window, but Independent of the Line Width\r\n==============================================================================\r\n\r\n                                    ;Get Column Position Specified:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19544":{
"Text":"==============================================================================\r\n\"HOME\" Statement: Immediate \u0026 Deferred; No Parameters\r\n==============================================================================\r\nMoves Cursor to Upper Left Screen Position within Scrolling Window \u0026 Clears all Text within Window; Same as \"CALL -936\" \u0026 \"ESC @ RETURN\"\r\n==============================================================================\r\n\r\n----------------------------------- ;Initialize Cursor Vertical \u0026 Horizontal:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18209":{
"Text":"==============================================================================\r\n\"ROT=\" Statement: Immediate \u0026 Deferred; Parameter: ROT = Aexpr\r\n==============================================================================\r\nSets Angular Rotation for SHAPE to be Drawn by DRAW or XDRAW\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18215":{
"Text":"==============================================================================\r\n\"SCALE=\" Statement: Immediate \u0026 Deferred; Parameter: SCALE = Aexpr\r\n==============================================================================\r\nSets SCALE Size for SHAPE to be Drawn by DRAW or XDRAW\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18293":{
"Text":"==============================================================================\r\n\"SHLOAD\" Command Statement: Immediate \u0026 Deferred; No Parameters or Options\r\n==============================================================================\r\nReads/Loads a SHAPE Table from Cassette Tape to a Position just below HIMEM, which is then moved to just below the SHAPE Table LOADed\r\n==============================================================================\r\n\r\n----------------------------------- ;Prepare to Load Shape Table from Tape:\r\n             ---------------------- ;Prepare to Read 2 Bytes into LINNUM:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16975":{
"Text":"==============================================================================\r\n\"COLOR=\" Statement: Immediate \u0026 Deferred; Parameter: COLOR = Aexpr1\r\n==============================================================================\r\nSet the Color for Lo-Res Plotting of Points (Dots) \u0026 Lines\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16982":{
"Text":"\r\n==============================================================================\r\nNon-Graphics Subroutines\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\n\"VTAB\" Statement: Immediate \u0026 Deferred; Parameter: VTAB Aexpr1\r\n==============================================================================\r\nMoves the Cursor to the Line (1~24) that is Aexpr1 Lines down the screen\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17062":{
"Text":"==============================================================================\r\n\u003c\u003c\u003c HIMEM: Does Not Clear String Variables, which could be Disastrous! \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\nBut, it does Reset String Variable Pointers to Zero Difference, which is\r\neffectively the same as Clearing String Variables!\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\n\"LOMEM:\" Statement: Immediate \u0026 Deferred; Parameter: LOMEM: Aexpr1\r\n==============================================================================\r\nSets Lowest Memory Address Available to a BASIC Program; Automatically Set to\r\nEnd of Program, Start of Simple BASIC Variables, before Program Execution;\r\nReset by NEW, DEL, \u0026 by Adding or Changing a Program Line; Reset by RESET\r\nCTRL-B, which also Deletes any Stored Program; Not Reset by RUN, RESET CTRL-C\r\nRETURN, or RESET 0G RETURN; Can Protect Variables from High-Resolution\r\nGraphics\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17099":{
"Text":"==============================================================================\r\n\"ONERR GOTO\" Statements: Deferred Only; Parameter: ONERR GOTO LineNumber\r\n==============================================================================\r\nPrevents having an Error Message Printed \u0026 Execution Halted when an Error Occurs during Program Execution; ONERR GOTO must be Executed before the occurance of an Error to avoid Program Interruption; Sets a Flag that causes an Unconditional Jump to LineNumber (if an Error Occurs during Program Execution); POKE 216, 0 (*$D8:0) Resets the Error-Detection Flag so that Normal Error Messages will be Printed.\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17176":{
"Text":"==============================================================================\r\n\"RESUME\" Statement: Deferred; No Parameters\r\n==============================================================================\r\nRESUMEs Program Execution at Beginning of Statement where ERROR occurred when used after Error Handling; Dangerous if used in Immediate Mode\r\n==============================================================================\r\n\r\n----------------------------------- ;Restore Line Number:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17340":{
"Text":"==============================================================================\r\n\"RECALL\" Statement: Immediate \u0026 Deferred; Parameter: RECALL Avar\r\n==============================================================================\r\n\r\n----------------------------------- ;Prepare to Read/Write a 3-Byte Header \r\n                                    ;from/to a Cassette Tape (Audio I/O):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17311":{
"Text":"\u003c\u003c\u003c                                 ;Better code would be:\r\nTEXT         LDA     MIXSET         ;Set Mixed Graphics \u0026 Text Mode\r\n             JMP     TEXT01         ;(=$FB33) Reset HiRes to LoRes/Text Mode\r\n                                    ;                              -- BS-C \u003e\u003e\u003e\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nTape Array STORE \u0026 RECALL Routines: \r\n==============================================================================\r\n   (There are No Corresponding Routines for Diskette Storage in Applesoft)\r\n==============================================================================\r\nSTORE \u0026 RECALL Arrays via Cassette Tape (using Apple II Audio Input/Output) System; [Did anybody ever use these?]; Array Names are Not Stored with their Values, So an Array may be Recalled using a Different Name than that used when Stored; Dimensions of arrays recalled should be identical to Dimensions of Original Arrays Stored; Failure to observe this will result in Scrambled Numbers, Extra Zeros, or ?Out of Memory Erors, in Recalled Arrays\r\n==============================================================================\r\n\r\n==============================================================================\r\n\"STORE\" Statement: Immediate \u0026 Deferred; Parameter: STORE Avar\r\n==============================================================================\r\n\r\n----------------------------------- ;Prepare to Read/Write a 3-Byte Header \r\n                                    ;from/to a Cassette Tape (Audio I/O):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16994":{
"Text":"==============================================================================\r\n\"SPEED=\" Statement: Immediate \u0026 Deferred; Parameter: SPEED = Aexpr1\r\n==============================================================================\r\nSets the Speed at which Characters are to be sent to the Screen or to other Input/Output Devices\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14212":{
"Text":"==============================================================================\r\n\"WAIT\" (Conditional Pause) Statement: Immediate \u0026 Deferred; \r\n                          Parameters: WAIT Aexpr1, Aexpr2 [, Aexpr3]\r\n==============================================================================\r\n\r\n----------------------------------- ;Only a Reset can Interupt a WAIT!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13075":{
"Text":"==============================================================================\r\n\"DEF\" Statement: Deferred Only;  Defines User Functions in Applesoft Programs\r\n==============================================================================\r\n     Parameters: DEF FN Name (real avar) = aexpr1\r\n                 FN Name (aexpr2)\r\n==============================================================================\r\n \"FN\" Statement: Immediate \u0026 Deferred; Puts User Functions to Work [see below]\r\n==============================================================================\r\nStructure of a User Defined Function Variable Pointer:\r\n------------------------------------------------------------------------------\r\nByte 0: Varible Name Character 1 (Negative):\r\n     1: Varible Name Character 2 (Postive):\r\n        ^ [A Function Name is a Simple Variable]\r\n     2: Address of Definition, Low:\r\n     3: Address of Definition, High:\r\n        ^ [Program Memory Address of 1st Character of Expression (after \"=\")]\r\n     4: Address of Argument Variable, Low:\r\n     5: Address of Argument Variable, High:\r\n        ^ [Address of the Real Variable after the Function Name: FN Name (RV)]\r\n     6: First Character of Definition:\r\n        ^ [1st Character of Expression (after \"=\")]\r\n==============================================================================\r\n\r\n                                    ;Setup Function Name Variable:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14203":{
"Text":"==============================================================================\r\n\"POKE\" Statement: Immediate \u0026 Deferred; Parameters: POKE Aexpr1, Aexpr2; Stores an 8-bit Byte Value (Aexpr2) into a 16-bit Memory Location (Aexpr1)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15248":{
"Text":"==============================================================================\r\n\"SGN\" (Sign) Function: Immediate \u0026 Deferred; Parameter SGN (Aexpr); Returns Sign of a Number (Aexpr); Sign of [(Neg|0|Pos) Aexpr], Returns (A)=(-1|0|1)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15395":{
"Text":"==============================================================================\r\n\"INT\" Function: Immediate \u0026 Deferred; Parameter: INT (Aexpr);\r\n      Returns largest Integer \u003c= Number (Aexpr) specified\r\n==============================================================================\r\nUses QINT to Convert FAC to Integer form, \u0026 then Floats the Integer again.\r\n\u003c\u003c\u003c Faster: Why not simply Clear the Fractional Bits by Zeroing them? \u003e\u003e\u003e\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15279":{
"Text":"==============================================================================\r\n\"ABS\" (Absolute Value) Function:  Immediate \u0026 Deferred; Parameter ABS (Aexpr);\r\n      Returns the Absolute Value of a Number (Aexpr): \r\n      Absolute Value of [(Neg|Pos) Aexpr], Returns (A)=[(Pos) Aexpr]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13055":{
"Text":"==============================================================================\r\n\"POS\" Position Function\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14180":{
"Text":"==============================================================================\r\n\"PEEK\" Function: Immediate \u0026 Deferred; Parameter: PEEK (Aexpr); Returns the decimal content of the byte at the address of the numeric expression (Aexpr)\r\n==============================================================================\r\n\r\n----------------------------------- ;Save LINNUM on Stack during PEEK:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14038":{
"Text":"==============================================================================\r\n\"LEN\" String Length Function: Imediate \u0026 Deferred; Parameter: LEN (Aexpr);\r\n      Returns the Number of Characters in a String\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14087":{
"Text":"==============================================================================\r\n\"VAL\" Value Function: Immediate \u0026 Deferred; Parameter: VAL (Sexpr); Attempts to convert a String into a Number\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14053":{
"Text":"==============================================================================\r\n\"ASC\" ASCII Character Function\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13894":{
"Text":"==============================================================================\r\n** Unary String Operator Functions (CHR$, LEFT$, RIGHT$, \u0026 MID$) Start Here **\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\n\"CHR$\" Character String Function:\r\n     Immediate \u0026 Deferred; Parameters: CHR$ (Aexpr);\r\n     Returns ASCII Character of an Integer Number (from 0 to 255)\r\n     (Real Numbers are Converted to Integer Numbers)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13914":{
"Text":"==============================================================================\r\n\"LEFT$\" Left String Function:\r\n==============================================================================\r\nImmediate \u0026 Deferred; Parameters: LEFT$ (Sexpr, Aexpr);\r\nReturns first (Numeric Expression) Characters of (String Expression)\r\n(Real Numbers are Converted to Integer Numbers)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13958":{
"Text":"==============================================================================\r\n\"RIGHT$\" Right String Function:\r\n==============================================================================\r\nImmediate \u0026 Deferred; Parameters: RIGHT$ (Sexpr, Aexpr);\r\nReturns last (Numeric Expression) Characters of (String Expression)\r\n(Real Numbers are Converted to Integer Numbers)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13969":{
"Text":"==============================================================================\r\n\"MID$\" Middle String Function:\r\n==============================================================================\r\nImmediate \u0026 Deferred; Parameters: MID$ (Sexpr, Aexpr1 [, Aexpr2]);\r\nReturns (Numeric Expression 2) Middle Characters of (String Expression)\r\nfrom the (Numeric Expression 1) Character to the Right\r\n(Real Numbers are Converted to Integer Numbers)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14719":{
"Text":"\r\n==============================================================================\r\n\"MULTIPLY\" (\"*\") Function:\r\n==============================================================================\r\n\r\n----------------------------------- ;Multiply FAC by (A,Y) \u0026 Put back in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14247":{
"Text":"==============================================================================\r\n\"SUBTRACT\" (\"-\") Function: \r\n==============================================================================\r\n\r\n----------------------------------- ;Subtract FAC frm (A,Y) \u0026 Put Back in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14265":{
"Text":"==============================================================================\r\n\"ADD\" (\"+\") Function:\r\n==============================================================================\r\n\r\n----------------------------------- ;Shift Smaller Argument More Than 7 Bits:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16023":{
"Text":"                                    ;[Drop into Power Function]\r\n\r\n==============================================================================\r\n\"EXPONENT\" [POWER] Function: FAC=ARG^FAC\r\n==============================================================================\r\nThis is the Exponentiation (\"^\") Operator, NOT the \"EXP\" Exponent Function!  But, if the accumulator is zero upon entry here, this routine branches to the \"EXP\" Exponent Function routine.\r\n==============================================================================\r\n\r\n             EQU    *               ;(Math Operator Table Branch Address +1)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14953":{
"Text":"------------------------------------------------------------------------------\r\nFDIVT is Main Entry Point           ;(Math Operator Table Branch Address +1):\r\n------------------------------------------------------------------------------\r\nDivide ARG by FAC:                  ;Compute FAC = ARG / FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13052":{
"Text":"                                    ;FAC FP#, So Set High Bit: $90=%1001,0000\r\n                                    ;(Shifts Decimal Pt. 16-bits to the Right)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13050":{
"Text":"                                    ;\u003c\u003c\u003c Don\u0027t FAC+3,4 Need to be Cleared? \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11992":{
"Text":"------------------------------------------------------------------------------\r\n                                    ;Returns (from SETVARPTRYA) with:\r\n                                    ;(A)=(VARPTR)   Ptr to Var\u0027s Value, Low\r\n                                    ;(Y)=(VARPTR+1) Ptr to Var\u0027s Value, High\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12009":{
"Text":"                                    ;Else, it is an Integer, Get its Value ...\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ;Ptr,Lo/Hi--\u003eValue,Hi/Lo Swap Occurs Here: ",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13060":{
"Text":"                                    ;\u003c\u003c SEC has no purpose whatsoever here! \u003e\u003e\r\n                                    ;Float Signed Integer in [(Y,A)={Lo,Hi}]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11147":{
"Text":"----------------------------------- ;User-Callable Error Entry Point:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12697":{
"Text":"----------------------------------- ;Error Entry Point; Also User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13067":{
"Text":"----------------------------------- ;User-Callable Error Entry Point:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14549":{
"Text":"----------------------------------- ;Error Entry Point; Also User-Callable: \r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15073":{
"Text":"----------------------------------- ;Error Entry Point; Also User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11531":{
"Text":"----------------------------------- ;User-Callable Error Entry Point:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11638":{
"Text":"----------------------------------- ;Error Entry Point; Also User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13428":{
"Text":"----------------------------------- ;Error Entry Point; NOT so User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13121":{
"Text":"==============================================================================\r\nCommon Routine for DEF FN \u0026 FN, to Parse the Function \u0026 the Function Name\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13140":{
"Text":"==============================================================================\r\n\"FN\" Statement: Immediate \u0026 Deferred; Puts Defined User Functions to Work\r\n==============================================================================\r\n    Parameters: FN Name (aexpr2)\r\n==============================================================================\r\n          [See above: \"Structure of a User Defined Function Variable Pointer\"]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13088":{
"Text":"----------------------------------- ;Get Pointer to Argument:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13084":{
"Text":"----------------------------------- ;Flag PRTGET that Call\u0027s frm here, DEF FN:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13103":{
"Text":"----------------------------------- ;Save Pointer to Argument:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13109":{
"Text":"----------------------------------- ;Save CHRGET\u0027s Next Char/Token Pointer:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13102":{
"Text":"----------------------------------- ;[See Next: Common Parse FN_NAME Routine]\r\n                                    ;Save 1st Character of Definition:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13126":{
"Text":"                                    ;^[Throw Syntax Error If CurChr Not \"FN\"]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13133":{
"Text":"                                    ;Found Valid Function Name; Save Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13137":{
"Text":"                                    ;Adrs now in FNCNAM \u0026 [(A,Y)={Low,High}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13143":{
"Text":"----------------------------------- ;Stack FN Address for Nested FN Calls:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13149":{
"Text":"----------------------------------- ;May have Nested FN Calls:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13155":{
"Text":"----------------------------------- ;Restore FN Address for Nested FN Calls:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13161":{
"Text":"------------------------------------;Set Old-Variable Value Pointer:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13175":{
"Text":"                                    ;Now AVP is in VARPTR \u0026 [(X,A)={Low,High}]\r\n----------------------------------- ;Push Value of any pre-existing Old-Var\r\n                                    ;with the same Name as Argument Variable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13184":{
"Text":"----------------------------------- ;Now Old-Var Valu is in [(X,Y)={Low,High}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13187":{
"Text":"----------------------------------- ;Save Program Position:\r\n                                    ;Save CHRGET\u0027s Next Char/Token Pointer\r\n                                    ;(Remember TXTPTR for after FN call):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13193":{
"Text":"----------------------------------- ;Point CHRGET at Function Definition:\r\n                                    ;Now, still: [(Y)=(0)] from FACRND2XY\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13202":{
"Text":"----------------------------------- ;Save Address of Argument Variable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13208":{
"Text":"----------------------------------- ;AVP is stl in VARPTR \u0026 [(X,A)={Low,High}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13211":{
"Text":"----------------------------------- ;Pull \u0026 Save Address of Argument Variable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13217":{
"Text":"----------------------------------- ;Are we Done with the Definition?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13225":{
"Text":"----------------------------------- ;Retrieve Program Position:\r\n                                    ;Retrieve CHRGET\u0027s Next Char/Token Pointer\r\n                                    ;(TXTPTR Remembered for after FN call):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13231":{
"Text":"----------------------------------- ;Retrieve Old-Variable Valu; Pull 5 bytes:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13396":{
"Text":"                                    ;^(Clears Sign Bit of Flag)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13397":{
"Text":"----------------------------------- ;Compute New Bottom/Start of String Space)\r\n                                    ;^(AKA: Free Space End|Top of Free Space)\r\n                                    ;[Actuly Subtracts: (FRETOP)-(NewStrLen)]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13407":{
"Text":"----------------------------------- ;Does it Fit in Remaining Memory?:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13417":{
"Text":"                                    ;YES: It Fits in Memory Remaining\r\n----------------------------------- ;Save New Top of Free Space:\r\n                                    ;^(AKA: Bottom or Start of String Space)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13426":{
"Text":"----------------------------------- ;Now: (FRETOP)=(FRESPC)=[(X,Y)={Low,High}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13444":{
"Text":"------------------------------------------------------------------------------\r\nMaximize Free-Space, Collect Garbage from Top to Bottom:\r\n------------------------------------------------------------------------------\r\nShove all Referenced Strings as high as possible in memory (against HIMEM), freeing up space below String-Area down to Top End of Variables \u0026 Pointers Storage (STREND).\r\n------------------------------------------------------------------------------\r\n    [(String-Area)=(HIMEM)-(FRETOP)]  \u0026  [(Free-Space)=(FRETOP)-(STREND)]\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13448":{
"Text":"----------------------------------- ;Find Highest String:\r\n                                    ;1 Pass thru All Vars for each Active Str",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13456":{
"Text":"                                    ;^(Flag: \"Still have Strings to Collect\")\r\n----------------------------------- ;Point to Bottom of Free Space:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13464":{
"Text":"----------------------------------- ;Start by Collecting Temp Descriptors:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13481":{
"Text":"----------------------------------- ;Now Collect Simple Variables:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13485":{
"Text":"----------------------------------- ;Start at beginning of Variable Table:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13493":{
"Text":"----------------------------------- ;Done Collecting Simple Variables?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13506":{
"Text":"----------------------------------- ;Collect Array Variables:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13518":{
"Text":"----------------------------------- ;Done Collecting Array Variables?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13526":{
"Text":"                                    ;YES: Done Collecting Array Variables;",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13529":{
"Text":"----------------------------------- ;Setup Pointer to Start of Array:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13541":{
"Text":"                                    ;Now (X,A)=(Array Name)\r\n----------------------------------- ;Prepare for Variable Type Check:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13542":{
"Text":"                                    ;^[(N) {2nd Char})=($:+-;%:--;Real:++)]\r\n----------------------------------- ;Advance Pointer to Next Variable:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13557":{
"Text":"                                    ;^[(N) {2nd Char})=($:+-;%:--;Real:++)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13545":{
"Text":"----------------------------------- ;Calculate Start of Next Array:\r\n                                    ;(Here, Carry\u0027s always Clear, for Add w/C)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13570":{
"Text":"                                    ;Now (A)=(Size of this Array Variable)\r\n----------------------------------- ;Point at 1st Array Element:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13514":{
"Text":"----------------------------------- ;Scan Array Variables LOOP:\r\n                                    ;CMP [(A,X)={Low,High}] to End of Arrays:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13556":{
"Text":"----------------------------------- ;Assure Array is a String Array:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13562":{
"Text":"----------------------------------- ;Array is a String Array:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13578":{
"Text":"----------------------------------- ;Step through each Element in Str Array:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13593":{
"Text":"\r\n==============================================================================\r\nCheck Simple Variable: Assure Variable is a String\r\n==============================================================================\r\nUpon Entry here: (Y)=(0) Always, (INDEX)=(String Variable Index Pointer);\r\n  \u0026 from SVARGO: (INDEX),Y Points at Variable\u0027s Name\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13603":{
"Text":"------------------------------------------------------------------------------\r\nUpon Entry here: (Y)=(0) \u0026 (INDEX)=(String Variable Index Pointer);\r\n    \u0026 from TVAR: (INDEX),Y Points at Variable\u0027s Descriptor;\r\n    \u0026 from GOGO: (INDEX),Y Points at Variable\u0027s Current Element [Doesn\u0027t Jibe]\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13597":{
"Text":"                                    ;^[It\u0027s Integer Var ($:+-;%:--;Real:++)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13602":{
"Text":"                                    ;^[It\u0027s a Real/FP Var ($:+-;%:--;Real:++)]\r\n\r\n==============================================================================\r\nCheck Variable: If String is Not Empty, Check if it is Highest\r\n==============================================================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13624":{
"Text":"                                    ;^^^: Garbage Collected already, Skip it\r\n----------------------------------- ;Above Highest String Found?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13638":{
"Text":"----------------------------------- ;Save Address of Descriptor too:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13634":{
"Text":"----------------------------------- ;YES, Make it new Highest String:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13650":{
"Text":"                                    ;^(Length for Garbage Collection)\r\n----------------------------------- ;Advance to Next Variable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13666":{
"Text":"==============================================================================\r\nMove Highest String to Top\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13668":{
"Text":"                                    ;^(Flag: \"Still have Strings to Collect\")\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13646":{
"Text":"                                    ;^(Flag: \"Still have Strings to Collect\")\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13670":{
"Text":"\u003c\u003c\u003c ---------------------------------------------------------------------- \u003e\u003e\u003e\r\nAny attemp to collect a temp string will abort collection.  This BUG is rarely a problem, but could be if collection is forced by a concatination and the string space just has room for the new string after collection.  For example: LOMEM:10000: HIMEM:10012: A$=\"A\": A$=A$+\"B\": A$=A$+\"C\": PRINT A$ prints \"ABA\" [in immediate mode, but in deferred mode, prints \"ABC\", in AppleWin 1.29.3.0].\r\n\u003c\u003c\u003c ====================================================================== \u003e\u003e\u003e\r\n\r\n----------------------------------- ;Compute Y-Index to Point at String Length\r\n                                    ; \u0026 String Pointer, Variable Elements:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13680":{
"Text":"                                    ;Carry was Cleared by LSR (for Add w/C)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13690":{
"Text":"----------------------------------- ;Set High End Destination:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13701":{
"Text":"----------------------------------- ;Fix String\u0027s Descriptor:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13704":{
"Text":"                                    ;Store New Address:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13709":{
"Text":"----------------------------------- ;Correct MVBLKUP2\u0027s Overshoot:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13716":{
"Text":"                                    ;[(X,A)={Low,High}] Points at Moved String\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13674":{
"Text":"                                    ;^(4 is Simple Variable, else 0)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13676":{
"Text":"                                    ;^(2 is Simple Variable, else 0)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13678":{
"Text":"----------------------------------- ;String is between Bottom of Free Space\r\n                                    ;(LOWTR) \u0026 Top-End of Arrays (HIGHTR):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10881":{
"Text":"                                    ;^(AKA: Bottom or Start of String Space)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10890":{
"Text":"                                    ;^(AKA: Bottom or Start of String Space)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13452":{
"Text":"                                    ;^(AKA: Bottom or Start of String Space)\r\n                                    ;That Resets String-Storage (FRETOP=HIMEM)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13614":{
"Text":"                                    ;(FRETOP AKA: Bottom/Start of String Spc)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13694":{
"Text":"                                    ;^(AKA: Bottom or Start of String Space)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13698":{
"Text":"----------------------------------- ;Move String Up:\r\n                                    ;(HIGHDS) = Highest Destination Address +1\r\n                                    ; (LOWTR) = Lowest Source Address\r\n                                    ;(HIGHTR) = Highest Source Address +1\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13737":{
"Text":"----------------------------------- ;Get Concatenated Size, Add Lenghts: \r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13751":{
"Text":"------------------------------------------------------------------------------\r\nConcatenate the Two Strings \r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Get Space for Concatenated Strings\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13725":{
"Text":"----------------------------------- ;Save 2nd String\u0027s Descriptor Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13731":{
"Text":"----------------------------------- ;Retrieve 1st String\u0027s Descriptor Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13757":{
"Text":"----------------------------------- ;Free up 2nd String:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13767":{
"Text":"----------------------------------- ;Free up 1st String:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13780":{
"Text":"------------------------------------------------------------------------------\r\nGet String Descriptor at (STRNG1) \u0026 Move Described String to (FRESPC)\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13794":{
"Text":"\r\n------------------------------------------------------------------------------\r\nMove String at [(X,Y)={Low,High}] w/ Length in (A) to Destination at (FRESPC)\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Put Pointer in INDEX:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13802":{
"Text":"----------------------------------- ;Move String (Loop):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13798":{
"Text":"----------------------------------- ;Move String (2nd Entry Point):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13807":{
"Text":"                                    ;Test if any more Bytes to Move:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13810":{
"Text":"----------------------------------- ;Get Length \u0026 Add to FRESPC [Point to Next\r\n                                    ; Higher Byte (for use by Concatenation)]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13821":{
"Text":"==============================================================================\r\nRelease Temporary String Descriptor (in FAC)\r\n==============================================================================\r\n\r\n=================================== ;[1st Entry Pt: from \"LEN\" Statement S/R]\r\nRelease String Descriptor if String is a Temporary String \u0026 is Lowest in RAM:\r\n----------------------------------- ;Assure (FAC) Points to a Str Descriptor:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13836":{
"Text":"----------------------------------- ;Get Descriptor Data:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13850":{
"Text":"                                    ;Now: String Length is in Accumulator (A)\r\n                                    ;\u0026 String Pointer is in [(X,Y)={Low,High}]\r\n----------------------------------- ;Free up Space if String is Temp \u0026 Lowest:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13861":{
"Text":"                                    ;YES, it is THE Lowest String\r\n----------------------------------- ;Delete Lowest String (Move FRETOP Up):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13853":{
"Text":"----------------------------------- ;Is it THE Lowest String?\r\n                                    ;Compare to Bottom/Start of String Space:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13872":{
"Text":"----------------------------------- ;Put String Pointer in INDEX:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13876":{
"Text":"----------------------------------- ;Return String\u0027s New Descriptor Data:\r\n                                    ;String Length in Accumulator (A)\r\n                                    ;String Ptr in INDEX=[(X,Y)={Low,High}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14009":{
"Text":"==============================================================================\r\nCommon Setup Routine for LEFT$, RIGHT$, \u0026 MID$ Functions:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14012":{
"Text":"----------------------------------- ;Save Return Address [in (Y,GARLEN)]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14017":{
"Text":"----------------------------------- ;Pop/Discard previous Return Address:\r\n                                    ;(NO Rtn to UNARY2 for LEFT$|RIGHT$|MID$)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14027":{
"Text":"----------------------------------- ;Restore Return Address [from (Y,GARLEN)]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14021":{
"Text":"----------------------------------- ;Restore String Descriptor Pointer:\r\n                                    ;^[Pushed at $DF2A,2D in UNARY Op\u0027s S/R]\r\n                                    ;^[String Descriptor Adrs (from TMPVPTR)]\r\n                                    ;^[Usually Pts at FAC for TmpStrDsc (3B)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14019":{
"Text":"----------------------------------- ;Retrieve 2nd Parameter of Command:\r\n                                    ;^[Pushed at $DF36 in UNARY Op\u0027s Routine]\r\n                                    ;^[2ndParm is Specified [Aexpr(1)]: Length\r\n                                    ;of Substring for LEFT$ \u0026 RIGHT$ Functions\r\n                                    ;\u0026 Start of Substring for MID$ Function]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14032":{
"Text":"----------------------------------- ;Setup for Return to Caller:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13917":{
"Text":"                       Returns --\u003e  ;(Y=0) \u0026 (A=X)=(2nd Parmeter of Function)=\r\n                                    ; [Specified Length of Substring (Aexpr)]=\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13941":{
"Text":"             ---------------------- ;Add Offset to Move Strings INDEX Pointer:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13961":{
"Text":"                       Returns --\u003e  ;(Y=0) \u0026 (A=X)=(2nd Parmeter of Function)=\r\n                                    ; [Specified Length of Substring (Aexpr)]=\r\n----------------------------------- ;Compute (Length)-(Width of SubString)\r\n                                    ;to get Starting Point in String:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13989":{
"Text":"                       Returns --\u003e  ;(Y=0) \u0026 (A=X)=(2nd Parmeter of Function)=\r\n                                    ; [Specified Start of Substring (Aexpr1)]=\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13920":{
"Text":"\r\n==============================================================================\r\nRoutine End Code for LEFT$, RIGHT$, \u0026 MID$ Functions\r\n==============================================================================\r\n\r\n----------------------------------- ;Drop-Down Entry-Pt from LEFT$ Function \u0026\r\n                                    ;Jump-Back Entry-Pt from RIGHT$ Function:\r\n                                    ;Now: (A)=[Starting Point in String]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13927":{
"Text":"----------------------------------- ;2 Branch-Bak Entry-Pts frm MID$ Function:\r\n                                    ;Entry Point for Offset \u003e Original Length:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13909":{
"Text":"----------------------------------- ;Pop/Discard Return Address:\r\n                                    ;(NO Return to UNARY2 for CHR$)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13999":{
"Text":"                                    ;Exit: Goto End Code for MID$\r\n                                    ;Else: Use Smaller of Two Lengths:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14001":{
"Text":"                                    ;      [(Length of Remainder)=(Len+1-A)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13966":{
"Text":"                                    ;      [(Length of Remainder)=(Len+1-A)]\r\n                                    ; [(Starting Point in String)=(Len+1-A)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13992":{
"Text":"----------------------------------- ;Compute (Length)-[(Specified Start)-1]\r\n                                    ;to get Length of Remainder of String:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13986":{
"Text":"                                    ;^[Specified Length of Substring (Aexpr2)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14025":{
"Text":"                                    ;^[This was from (FAC+4) TMPVPTR, High]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14022":{
"Text":"                                    ;^[This was from (FAC+3) TMPVPTR, Low]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13928":{
"Text":"                                    ;Entry Point for using Smallest Length:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12058":{
"Text":"----------------------------------- ;YES, String Function (LEFT$|RIGHT$|MID$):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12064":{
"Text":"                                    ; \u0026 Leave the Result for a String in FAC]\r\n                                    ;^[This String Expression (Sexpr) is the\r\n                                    ;  1st Parameter of the String Function]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12083":{
"Text":"                                    ;^[This Next Expression (Aexpr) is the\r\n                                    ;  2nd Parameter of the String Function]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13983":{
"Text":"                                    ;(between 2nd \u0026 3rd Parameters)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13942":{
"Text":"                                    ;for LEFT$ \u0026 RIGHT$ Functions, or Offset\r\n                                    ;[(Specified Start)-1] for MID$ Function",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14044":{
"Text":"------------------------------------------------------------------------------\r\nGet String Length (GETSTR): If Last Result is a Temporary String, Free It;\r\nMake Valtyp Numeric; \u0026 Return String Length In Y-Reg.\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14107":{
"Text":"             ---------------------- ;Add Start of String, Low to Str Length:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14066":{
"Text":"==============================================================================\r\nPrint \"Illegal Quantity\" Error Message\r\n==============================================================================\r\n\r\n----------------------------------- ;Error Entry Point; Also User-Callable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14078":{
"Text":"                                    ;^[# Must be Positive \u0026 less than 32768]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14080":{
"Text":"                                    ;^[So, really, Number Must be 0-255 !]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14072":{
"Text":"\r\nEvaluate Expression at TXTPTR, Assure its Numeric, Put it in FAC, \r\n\u0026 Convert FAC to a Single Byte, Integer (0-255), in X-Reg:\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14075":{
"Text":"\r\nConvert FAC to a Single-Byte, Integer (0-255), in X-Reg:\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14110":{
"Text":"             ---------------------- ;Point DSTPTR to End of String +1, Low:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14092":{
"Text":"                                    ;Else, Return [(A)=(String Length)]=(0):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14095":{
"Text":"----------------------------------- ;Save CHRGET\u0027s TXTPTR Now:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14103":{
"Text":"----------------------------------- ;Point TXTPTR to Start of String, Low:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14112":{
"Text":"----------------------------------- ;Point TXTPTR to Start of String, High:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14116":{
"Text":"             ---------------------- ;Add Start of String, High to Str Length:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14119":{
"Text":"             ---------------------- ;Point DSTPTR to End of String +1, High:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14121":{
"Text":"----------------------------------- ;Save Byte after Str \u0026 Replace with Zero:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14136":{
"Text":"----------------------------------- ;Retrieve \u0026 Restore Byte after String:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14141":{
"Text":"----------------------------------- ;Retrieve \u0026 Restore CHRGET\u0027s TXTPTR Saved:\r\n                                    ;**(Copy STRNG2 into TXTPTR Subroutine)**\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14150":{
"Text":"\u003c\u003c\u003c BUG if KBD ? \u003e\u003e\u003e                                                      \r\n==============================================================================\r\n\u003c\u003c\u003c  Another mistake(?) here in Billy-Boy\u0027s (Microsoft?/Applesoft!) BASIC  \u003e\u003e\u003e\r\n==============================================================================\r\nE730:          STA     (DSTPTR),Y ;Set Byte after String  \u003c\u003c\u003c BUG if KBD \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\n\u003c\u003c\u003c That causes a BUG if HIMEM = $BFFF, because storing $00 at $C000 is no use; $C000 will always be last char typed, so FIN won\u0027t terminate until it sees a zero at $C010! \u003e\u003e\u003e\r\n------------------------------------------------------------------------------\r\nRaises the quesion: Can HIMEM ever actually be $BFFF?\r\n==============================================================================\r\nThat\u0027s all Nonsense!  Strings start at HIMEM-1 \u0026 build downward!\r\nHIMEM=$BFFF IS the Byte above the 1st String, NOT KBD=$C000!\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nEvalute \"EXP1,EXP2\": Convert EXP1 to 16-bit Number in LINNUM;\r\n                     Convert EXP2 to  8-bit Number in X-Index Register\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14149":{
"Text":"----------------------------------- ;Finished:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14156":{
"Text":"\r\n==============================================================================\r\nEvalute \",Expression\": Convert Expression to Single Byte in X-Index Register\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14162":{
"Text":"==============================================================================\r\nConvert FAC to a 16-bit Value in LINNUM\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14166":{
"Text":"                    ^^^^^---------- ;Get Exponent to 2^16=65,536=%0001,0000\r\n                                    ;Add 1 for Branch Greater Than or Equal To\r\n                                    ;FAC FP#, So Set High Bit: $91=%1001,0001\r\n                                    ;(Shifts Decimal Pt 16-bits to the Right)\r\n----------------------------------- ;Error if Not Less Than:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14168":{
"Text":"----------------------------------- ;Convert FAC to a 16-bit Value in LINNUM:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14194":{
"Text":"----------------------------------- ;Retrieve LINNUM from Stack after PEEK:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14186":{
"Text":"----------------------------------- ;Get the Address we\u0027re PEEKing at:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14189":{
"Text":"----------------------------------- ;PEEK at the Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14231":{
"Text":"----------------------------------- ;Do WAIT Address, AND-Mask, XOR-Mask:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14250":{
"Text":"------------------------------------------------------------------------------\r\nFSUBT is Main Entry Point:          ;(Math Operator Table Branch Address +1)\r\n----------------------------------- ;Subtract FAC from ARG \u0026 Put back in FAC\r\n                                    ;(Complement FAC \u0026 Add):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14273":{
"Text":"------------------------------------------------------------------------------\r\nFADDT is Main Entry Point:          ;(Math Operator Table Branch Address +1)\r\n----------------------------------- ;Add FAC to ARG \u0026 Put back in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14722":{
"Text":"------------------------------------------------------------------------------\r\nFMULTT is Main Entry Point:         ;(Math Operator Table Branch Address +1):\r\n----------------------------------- ;Multiply FAC by ARG \u0026 Put back in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14950":{
"Text":"------------------------------------------------------------------------------\r\nNON_SEQUITUR is an address used in the Generic CHRGET/CHRGOT subroutine that gets copied to Zero Page.  It changes on ZP, so it has no real meaning here.\r\n------------------------------------------------------------------------------\r\n\r\n\r\n==============================================================================\r\n\"DIVIDE\" (\"/\") Function\r\n==============================================================================\r\n\r\nDivide (Y,A) by FAC:                ;Compute FAC = (Y,A) / FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14260":{
"Text":"                                    ;Make Status Show FAC Exponent:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14270":{
"Text":"\r\n----------------------------------- ;Add FAC to (A,Y) \u0026 Put back in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14268":{
"Text":"                                    ;^[Radix = Number System Base (Binary =2)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14278":{
"Text":"----------------------------------- ;Add Non-Zero FAC to ARG \u0026 Put Bak in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14289":{
"Text":"                                    ;^[Mantissas Ignored if FAC|ARG Exp\u0027s=0]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14296":{
"Text":"                                    ;Else, FAC has Smaller Exponent:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14302":{
"Text":"                                    ;Complement Shift Count (FACSIGN):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14342":{
"Text":"----------------------------------- ;Subtract Smaller from Larger [might be\r\n                                    ;Larger from Smaller if Exponents Equal];\r\n             ---------------------- ;1st, Subtr Smaller Extra Precision Byte:\r\n                                    ;(A)=(Extra Precision Byte from SHFTRGHT4)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14314":{
"Text":"                                    ;ARG has Smaller Exponent:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14318":{
"Text":"                                    ;Determine How Many Bits to Shift:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14421":{
"Text":"----------------------------------- ;Add Mantissas of FAC \u0026 ARG into FAC:\r\n                                    ;(A) FAC Extra Precision Byte for FP Op\u0027s",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14325":{
"Text":"----------------------------------- ;Shift Right Smaller of FAC \u0026 ARG:\r\n                                    ;SHFTPTR=(Base Address for FAC \u0026 ARG)=LOC1\r\n                                    ;(X)=(Address of Smaller of FAC \u0026 ARG)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14330":{
"Text":"----------------------------------- ;What to do next:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14377":{
"Text":"----------------------------------- ;Normalize Value in FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14554":{
"Text":"==============================================================================\r\nShift Right (Subroutine)\r\n==============================================================================\r\nSHFTRGHT1 is Auxiliary Entry Point: Entered from FMULT Function\r\n------------------------------------------------------------------------------\r\n                                    ;Shift RESULT Right [(LOC1..LOC4),X]:\r\nEntry from \"MULTIPLY\" Function:     ;Carry should be Set!\r\n                                    ;A-Reg = Negative Shift Count [+0 \u003c-- $F9]\r\n                                    ;X-Reg = Pointer to Bytes to be Shifted\r\n                                    ;Returns: Y=0, Carry=0, A=(Extension Bits)\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14349":{
"Text":"                                    ;^[Remember: It all gets put back in FAC]\r\n             ---------------------- ;2nd, Subtract Smaller Mantissa:\r\n                                    ;SHFTPTR=(Base Addrs for FAC \u0026 ARG)=LOC1\r\n                                    ;(Y)=(Address of Larger  of FAC \u0026 ARG)\r\n                                    ;(X)=(Address of Smaller of FAC \u0026 ARG)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14390":{
"Text":"             ---------------------- ;Else, Zero, So Do a Fast 8-Bit Shuffle:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14414":{
"Text":"----------------------------------- ;Zero FAC: (Only need do Exponent \u0026 Sign):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14452":{
"Text":"----------------------------------- ;Finish Normalizing FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14466":{
"Text":"----------------------------------- ;Two\u0027s Complement FAC\r\n                                    ;(Adjust Exponent by Bits Shifted):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14477":{
"Text":"----------------------------------- ;Carry is Clear here; Return to Caller\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14479":{
"Text":"                                    ;Else, Carry is Set, So Mantissa Carried:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14483":{
"Text":"----------------------------------- ;Shift FAC Mantissa Right:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14494":{
"Text":"----------------------------------- ;Two\u0027s Complement FAC:\r\n                                    ;1st, One\u0027s Complement FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14530":{
"Text":"----------------------------------- ;2nd, Add a Bit to get Two\u0027s Complement:\r\n                                    ;(Start Advancing FAC Mantissa):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14500":{
"Text":"             ---------------------- ;Two\u0027s Complement FAC Mantissa (only):\r\n                                    ;1st, One\u0027s Complement FAC Mantissa:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14534":{
"Text":"             ---------------------- ;Advance FAC Mantissa:\r\n                                    ;(Add Carry frm FAC Extra Precision Byte):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14576":{
"Text":"------------------------------------------------------------------------------\r\nSHFTRGHT is Main Entry Point: Entered from FADDT \u0026 QINT Functions\r\n------------------------------------------------------------------------------\r\n                                    ;Shift Right [(LOC1..LOC4),X then (A)]:\r\nEntry from \"ADD\" Function:          ;SHFTPTR=(Base Address for FAC \u0026 ARG)=LOC1\r\n                                    ;(X)=(Address of Smaller of FAC \u0026 ARG)\r\n------------------------------------------------------------------------------\r\n                                    ;Shift Rght [($100)-(A)] Bits, Long (\u003e7b):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14320":{
"Text":"                                    ;^[Negative of Shift Count]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14574":{
"Text":"                                    ;^[$00 if Positive, $FF if Negative]\r\n                                    ;^[Also Negative ($FF) if from QINT]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14580":{
"Text":"                                    ;^(Still more than 8 Bits to go)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14582":{
"Text":"                                    ;^(Exactly 8 more Bits to go)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14584":{
"Text":"                                    ;^(Undoes Reduction Above)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14591":{
"Text":"                                    ;^[Puts Sign in (C) {Sign Extension Bit}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14597":{
"Text":"                                    ;^[Restores Value w/ Sign still in Carry]\r\n----------------------------------- ;Shift Right [(LOC1..LOC4),X then (A)]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14595":{
"Text":"                                    ;^[Puts Sign Extension Bit into LSB]\r\n                                    ;^[Forces next OP to Set Carry Flag]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14589":{
"Text":"----------------------------------- ;Shift Right (LOOP) [Lower 7 Bits Only]:\r\n                                    ;1st, Get Sign of RESULT into Carry Flag:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14599":{
"Text":"                                    ;^[Start Right Shift, inserting Sign]\r\n------------------------------------------------------------------------------\r\nSHFTRGHT4 is Auxiliary Entry Point: Also Entered from FADDT \u0026 QINT Functions;\r\nEnter Here for Short Shifts with No Sign Extension:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14609":{
"Text":"------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15234":{
"Text":"==============================================================================\r\nFAC Sign (Neg|0|Pos) Returns (A)=(-1|0|1)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14676":{
"Text":"----------------------------------- ;Compute Natural Logarithm:\r\n                                    ;[(A,Y)={Low,High}] in these OPs:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14667":{
"Text":"------------------------------------------------------------------------------\r\nCompute Natural Logarithm via Series of Odd Powers of (SQR(2)X-1)/(SQR(2)X+1):\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;AHA! So this is how Normalization is done\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14715":{
"Text":"                                    ;Multiply by LOG(2) to get Natural Log",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14704":{
"Text":"                                    ;Computes ax+bx^3+cx^5+... where\r\n                                    ;(A,Y) points to Coeficients ...c,b,a",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14724":{
"Text":"\u003c\u003c\u003c Could be RTS here! \u003e\u003e\u003e          ;Else: Multiplying by Zero produces Zero!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14730":{
"Text":"                                    ;^[Checks for Overflow \u0026 Sets RESULT Sign]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14732":{
"Text":"----------------------------------- ;Clear/Zero FP RESULT of Last Mult or Div:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14740":{
"Text":"----------------------------------- ;Multiply FAC by ARG \u0026 Add to RESULT:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14768":{
"Text":"----------------------------------- ;Multiply (A) by ARG \u0026 Add to RESULT:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14770":{
"Text":"                                    ;^[Do 8-Bit Multiply if (A) is Not Zero]\r\n                                    ;Else: Multiplying by Zero produces Zero!\r\n\u003c\u003c\u003c ---------------------------------------------------------------------- \u003e\u003e\u003e\r\nBUG: There should be a SEC here.  Usually it is set since MULT2 leaves it that way, but SHFTRGHT1 leaves it clear.  Using SHFTRGHT1 from the MULT1 entry assumes carry set.  Thus, if SHFTRGHT1 is used twice in a row, the calculation will be off in the last 8 bits!  This happens when FAC+2 \u0026 FAC+3 are both 0 but FAC+4 is not 0. For example, try PRINT 1.998244415 or PRINT 1*10.0000009\r\n\u003c\u003c\u003c ---------------------------------------------------------------------- \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14773":{
"Text":"------------------\u003e SHFTRGHT1 \u003c---- ;^[Shifts Low to FAC Extra Precision Byte]\r\n                    ^^^^^^^^^------ ;\u003c\u003c\u003c Because of bug in FMULT, ... \u003e\u003e\u003e\r\n\r\n----------------------------------- ;Multiply ARG by (A) \u0026 Add to RESULT:\r\n                                    ;^[Assumes Multipliand is Not Zero (A\u003c\u003e0)]\r\n                                    ;^[This S/R Does an 8-Bit Multiply]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14765":{
"Text":"                                    ;^[Assumes Multipliand is Not Zero (A\u003c\u003e0)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14779":{
"Text":"             ---------------------- ;Else (C=1), So Mult Bit by ARG to RESULT;\r\n                                    ;(or put simply) Add ARG (once) to RESULT:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14804":{
"Text":"             ---------------------- ;Shift Right: RESULT (Product) 1 Bit:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14818":{
"Text":"                                    ;^[Loops 8 times (via Guard Bit)]\r\n                                    ;\u003c\u003c\u003c Does Guard Bit cause Extra ADD? \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14816":{
"Text":"                                    ;Shift Zero into MSB, to Left of Guard Bit",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14848":{
"Text":"                                    ;Complete ARG Mantissa, Top:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14842":{
"Text":"                                    ;Setup Combined Sign for Multiply/Divide:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14861":{
"Text":"                                    ;^[Users: FADDT, FMULTT, FDIVT, Not FSUBT]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14879":{
"Text":"                                    ;^[Correct for $80 Displacement]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15203":{
"Text":"==============================================================================\r\nCopy FAC into ARG (Rounded)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15187":{
"Text":"==============================================================================\r\nCopy ARG into FAC\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14940":{
"Text":"----------------------------------- ;Compute FAC = ARG / [(A,Y)={Low,High}]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14936":{
"Text":"                                    ;Setup to Set FAC=10:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16127":{
"Text":"\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15218":{
"Text":"==============================================================================\r\nRound FAC using Most Significant Bit of FAC Extension Byte\r\n==============================================================================\r\n\r\n----------------------------------- ;Round FAC using MS-Bit of FACEXT:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14958":{
"Text":"----------------------------------- ;Negate FAC Exponent, so that ...\r\n                                    ;Add Exponents S/R forms Difference:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14968":{
"Text":"                                    ;^[Checks for Overflow \u0026 Sets RESULT Sign]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14965":{
"Text":"----------------------------------- ;Divide ARG by FAC [(FACX)=(ARGX)+(-FACX)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14976":{
"Text":"----------------------------------- ;Get Answer: Is ARG \u003e= FAC?\r\n                                    ; (Can FAC Be Subtracted?)\r\n                                    ; (Can ARG be Divided by FAC?)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14998":{
"Text":"                                    ;NO Branch Here!  [for: (ARGL \u003c\u003e FACL)]\r\n----------------------------------- ;Postpone Answer to: Is ARG \u003e= FAC?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"14999":{
"Text":"                                    ;^[Carry is Set (C=1) if ARG \u003e= FAC!] or\r\n                                    ;^[Carry is Set (C=1) if ARG Overflows!]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15014":{
"Text":"                                    ;^[YES, Go Subtract Divisor!]\r\n----------------------------------- ;Else, Shift ARG Mantissa Left 1 Bit:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15028":{
"Text":"----------------------------------- ;Subtract Divisor\r\n                                    ; (Subtract FAC from ARG, Once!)\r\n                                    ; [(ARG \u003e= FAC) \u0026 (C=1)]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15026":{
"Text":"                                    ;^[No Answer Yet: Is ARG \u003e= FAC?\r\n                                    ; (Can FAC Be Subtracted?)\r\n                                    ; (Can ARG be Divided by FAC?)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15029":{
"Text":"             ---------------------- ;Subtract w/o Borrow [A-Data-!C]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15035":{
"Text":"             ---------------------- ;Subtract with Borrow [A-Data-!C]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15041":{
"Text":"             ---------------------- ;Subtract with Borrow [A-Data-!C]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15047":{
"Text":"             ---------------------- ;Subtract with Borrow [A-Data-!C]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15053":{
"Text":"             ---------------------- ;Do Next:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15059":{
"Text":"                                    ;into the FAC Extensiion Byte for the Last\r\n                                    ;Subtraction to Complete Division [x/4])\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15061":{
"Text":"----------------------------------- ;Left Justify Extension Bits [in (Acc)];\r\n                                    ;(a 6 Bit Shift) [%XX000000\u003c-%000000XX]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15009":{
"Text":"----------------------------------- ;Get Answer: Is ARG \u003e= FAC?\r\n                                    ; (Can FAC Be Subtracted?)\r\n                                    ; (Can ARG be Divided by FAC?)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15007":{
"Text":"                                    ;^[Do Left Shfts into FAC Extensiion Byte]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15002":{
"Text":"----------------------------------- ;Do Next Byte? Or, almost completely Done?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15022":{
"Text":"----------------------------------- ;Next, LOOP-Back for More Processing:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15057":{
"Text":"----------------------------------- ;Completed 5 Bytes (32 Bits):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15078":{
"Text":"==============================================================================\r\nCopy RESULT (another Mantissa) into FAC Mantissa, \u0026 Normalize\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15070":{
"Text":"----------------------------------- ;Finish with Final Quotient:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15122":{
"Text":"                                    ;Complete FAC Mantissa, Top:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15120":{
"Text":"                                    ;Unpack Floating Point Number:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15134":{
"Text":"==============================================================================\r\nPack FAC into TEMP2 [FAC/ARG Save Area ($98~$9B)]: Store FAC Rounded in TEMP2\r\n==============================================================================\r\n\r\n----------------------------------- ;Get Destination Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15137":{
"Text":"==============================================================================\r\nPack FAC into TEMP1 [FAC/ARG Save Area ($93~$97)]: Store FAC Rounded in TEMP1\r\n==============================================================================\r\n\r\n----------------------------------- ;Get Destination Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15143":{
"Text":"==============================================================================\r\nPack FAC into (FORPNT): Store FAC Rounded at (FORPNT)\r\n==============================================================================\r\n\r\n----------------------------------- ;Called by LET \u0026 NEXT:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15147":{
"Text":"\r\n==============================================================================\r\nPack FAC into [(X,Y)={Low,High}]: Store FAC Rounded at [(X,Y)={Low,High}]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15141":{
"Text":"                                    ;^[(TEMP1, Hi)=(TEMP2, Hi)=(Zero-Page)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15171":{
"Text":"             ---------------------- ;Pack Sign into Destination Mantissa, Top:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15175":{
"Text":"                                    ;Pack Sign into FAC Value:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15179":{
"Text":"             ---------------------- ;Do Exponent:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15189":{
"Text":"Entry from \"EXPONENT\" (POWER) Function [to do Absolute Value (ABS) 1st]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15206":{
"Text":"Entry from \"EXP\" (Exponent) Function [to Not Round FAC 1st]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15251":{
"Text":"------------------------------------------------------------------------------\r\nFloat Signed Integer in (A) into FAC:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15259":{
"Text":"------------------------------------------------------------------------------\r\nFloat Unsigned Value in FAC+1,2:  ;Enter with: X-Reg = Exponent\r\n------------------------------------------------------------------------------\r\n                                    ;Get (-FAC) Sign Bit into Carry Flag:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15264":{
"Text":"------------------------------------------------------------------------------\r\nFloat Unsigned Value in FAC+1,2:  ;Enter with: X-Reg = Exponent,\r\n                                    ;C=0 to Make Value Negative, or\r\n                                    ;C=1 to Make Value Positive\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10182":{
"Text":"                                    ;FAC Sign (Neg|0|Pos) Returns (A)=(-1|0|1)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15721":{
"Text":"                                    ;Rtns: (A)=(-1|0|1)\u003c--[FAC (\u003c|=|\u003e) (A,Y)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15732":{
"Text":"                                    ;Rtns: (A)=(-1|0|1)\u003c--[FAC (\u003c|=|\u003e) (A,Y)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16053":{
"Text":"                                    ;Rtns: (A)=(-1|0|1)\u003c--(A,Y)=[(\u003e|=|\u003c) FAC]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15286":{
"Text":"------------------------------------------------------------------------------\r\n^^^^ Special Entry from NEXT [with NUMBER Pointer, Low (DSTPTR), already Set\r\n     to FOR Value STACK Address (in A-Reg) \u0026 STACK Page Address (1 in Y-Reg)]:\r\n------------------------------------------------------------------------------\r\n\r\n==============================================================================\r\nCompare NUMBER to FAC:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15337":{
"Text":"                                    ;^[EXIT]: Both Numbers are Equal!\r\n                                    ;         (NUMBER=FAC), Return: (A=0)\r\n             ---------------------- ;^[Else]: The Numbers are Not Equal:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15294":{
"Text":"                                    ;^[This means the whole NUMBER = 0, too!]\r\n                                    ;^(SIGN S/R is Sufficient for Comparison)\r\n             ---------------------- ;Unpack \u0026 Compare Mantissas:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15327":{
"Text":"             ---------------------- ;Determine Carry for last Compare:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15331":{
"Text":"             ---------------------- ;Subtract with|without Borrow [A-Data-!C]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15350":{
"Text":"                                    ;^[This means the whole number = 0, too!]\r\n----------------------------------- ;Get (-# Fractional Bits) for Shift Count:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15357":{
"Text":"                                    ;Else, Negative, So Complement Mantissa\r\n                                    ; \u0026 Set Sign Extension for Shift:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15370":{
"Text":"                                    ; (-# Fractional Bits)\u003e[($F9)=(-7)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15378":{
"Text":"------------------------------------------------------------------------------\r\nQINT2: Short (\u003c 8-Bits) Shift Right Subroutine\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15383":{
"Text":"                                    ;Start Right Shift \u0026 Merge with Sign:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15401":{
"Text":"                                    ;^[NO Fractional Bits if (FACX\u003e=$A0)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15421":{
"Text":"                                    ;Finish Conversion:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15424":{
"Text":"==============================================================================\r\nClear FAC Mantissa [\u0026 (Y)] to Prepare it for the Integer Form:\r\n[(A=0); FAC Exponent is Zero, so the whole number is too!]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15434":{
"Text":"==============================================================================\r\nEvaluate Floating Point Number at TXTPTR: Convert String to FP Value in FAC\r\n==============================================================================\r\nString is Pointed to by TXTPTR with its First Char Already Scanned by CHRGET;\r\nA-Reg = First Char  \u0026  C=0 if Char [in (A)] is a Numeral\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15449":{
"Text":"                                    ;YES (Leading Sign), Number is Negative:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15553":{
"Text":"                                    ;Accumulate a Numeral into FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15457":{
"Text":"                                    ;YES (Leading Sign), Number is Positive:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15495":{
"Text":"                                    ;Else, Exponent is Positive:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15504":{
"Text":"                                    ;Else, Exponent is Negative; Negate it:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15512":{
"Text":"Found Decimal Point, so Number is a Fraction; Adjust Exponent \u0026 EXIT:\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15520":{
"Text":"                                    ;Get Count of Numerals after Decimal Pt:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15573":{
"Text":"==============================================================================\r\nAccumulate Numeral into FAC Mantissa: Add FAC to (A) \u0026 Put back in FAC\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15592":{
"Text":"==============================================================================\r\nAccumulate Numeral into FAC Exponent: Add FACX to (A) \u0026 Put back in FACX\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15607":{
"Text":"                                    ;Exponent Times 10:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15621":{
"Text":"                                    ;REF:(Large Negative Exponent makes FAC=0)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15662":{
"Text":"----------------------------------- ;Print FAC (User-Callable Entry Point):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15652":{
"Text":"----------------------------------- ;Print Decimal Integer at [(X,A)={Lo,Hi}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15658":{
"Text":"                                    ;FAC FP#, So Set High Bit: $90=%1001,0000\r\n                                    ;(Shifts Decimal Pt 16-bits to the Right)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15656":{
"Text":"                                    ;^[FLOAT2 Clears FAC Mantissa, Mid \u0026 Low]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15668":{
"Text":"==============================================================================\r\nConvert FAC to a Zero-String starting at STACK [or at FOUTBUFF (STACK-1)]; \r\nReturn with [(A,Y)={Low,High}] Pointing at Zero-String:\r\n==============================================================================\r\n\r\n------------------------------------------------------------------------------\r\nNormal Entry Point, so that resultant Zero-String starts at STACK [$100]:\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15670":{
"Text":"\r\n------------------------------------------------------------------------------\r\nSTR$ Function Enters Here, with (Y=0), so that resultant Zero-String starts at FOUTBUFF (STACK-1) [$FF] {to Force movment of the String to String-Space}\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Convert FAC to Zero-String in FOUT-Buff:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15677":{
"Text":"                                    ;Else, FAC is Negative:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15673":{
"Text":"                                    ;^[Entry at FOUT, (Y)=(1 -\u003e  0):(STACK);\r\n                                    ; Entry at FOUT1, (Y)=(0 -\u003e -1):(STACK-1)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15678":{
"Text":"                                    ;^[Entry at FOUT, (Y)=( 0 -\u003e 1):(STACK);\r\n                                    ; Entry at FOUT1, (Y)=(-1 -\u003e 0):(STACK-1)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15681":{
"Text":"                                    ;^[Forces move to String-Space if Y=0]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15703":{
"Text":"                                    ;Else, the FAC Exponent\u003c 128. [FAC\u003c 1.]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15697":{
"Text":"                                    ;  ^[TMPEXP is Exponent Shift Counter]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15714":{
"Text":"----------------------------------- ;Adjust until 1E8\u003c=FAC\u003c1E9; Normalize \r\n(Outer Loop)                        ;between [100,000,000 \u0026 999,999,999]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15756":{
"Text":"------------------------------------------------------------------------------\r\nFAC Mantissa is now in Integer Form with Power of Ten Adjustment in TMPEXP;\r\nIf -10 \u003c TMPEXP \u003c 1, Print in Decimal Form; Else, Print in Exponential Form:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15743":{
"Text":"             ---------------------- ;Else, FAC\u003e1E9-1; Too Large, Do FAC/10:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15725":{
"Text":"(Inner Loop) ---------------------- ;Else, ... FAC\u003c1E9-1; Test Lower Limit:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15631":{
"Text":"  1E8M1                             ;\u003c-[M1 means -.1,  9 nines: 99,999,999.9]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15636":{
"Text":"  1E9M1                             ;\u003c-[M1 means -1, nine nines: 999,999,999]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15736":{
"Text":"             ---------------------- ;Else, FAC\u003c1E8-.1; Too Small, Do FAC*10:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15750":{
"Text":"------------------------------------------------------------------------------\r\nRound, Convert, \u0026 Print (Long Integer) FAC:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15758":{
"Text":"                                    ;^[Assume 1 Numeral before Decimal Point]\r\n                                    ;Check Range: [(-10)\u003c(TMPEXP)\u003c(1)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15765":{
"Text":"                                    ;^[(FAC\u003c.01): Use Exponential Form]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15769":{
"Text":"                                    ;^[(FAC\u003e=1E10): Use Exponential Form]\r\n                                    ;C=0: Subtract with Borrow [A-Data-!C]\r\n                                    ; or: Add with Carry [A+Data+C] (same):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15781":{
"Text":"                                    ;^[Replaces FACX Shift Count]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15772":{
"Text":"----------------------------------- ;Compute Correct/Remaining Exponent:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15782":{
"Text":"                                    ;^[Number of Numerals before Decimal Pt]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15786":{
"Text":"----------------------------------- ;Place Decimal Point in String:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15788":{
"Text":"                                    ;^[Index into Output String (BEING BUILT)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15805":{
"Text":"                                    ;^[Output String Character Pointer]\r\n----------------------------------- ;NO Decimal Point at Start:\r\nMake String                       ;Zero in on Number while Building String:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15803":{
"Text":"----------------------------------- ;Decimal Point is 1st (at Start):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15809":{
"Text":"                                    ;^[\u0026 (+|-) Direction/Instruction (msb)]:\r\n                                    ;^[\u0026 (+|-) Add-to/Subtract-frm FAC Mant]\r\n----------------------------------- ;Divide by Powers of 10 to get Numerals:\r\nMake String Loop                    ;Start by Adding -1E8 (from DECTBL) until \r\n                                    ;Overshoot; Then Add +1E7, Then Add -1E6, \r\n                                    ;Then Add +1E5, \u0026 ... (Alternating Signs);\r\n                                    ;The Number of times each Power is Added\r\n                                    ;is 1 more than corresponding Numeral (*);\r\n                                    ;Get 4 Power-Data-Bytes/Cycle in sequence:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15839":{
"Text":"             ---------------------- ;(C=1); Stop Adding If X is Positive:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15841":{
"Text":"             ---------------------- ;(C=0); Keep Adding If X is Positive:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15843":{
"Text":"             ---------------------- ;(C=0); Stop Adding If X is Negative:\r\n                                    ;       [Overshot Lower Limit]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15847":{
"Text":"                                    ;(C=1); Stop Adding If X is Positive:\r\n                                    ;       [Overshot Upper Limit]\r\n----------------------------------- ;End of Inner Make String Loop (FOUT2LOOP)\r\nCounted                             ;Make X into a Numeral;\r\n                                    ;How depends on last Direction:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15845":{
"Text":"             ---------------------- ;FAC Mantissa Overflowed:\r\n                                    ;(C=1); Keep Adding If X is Negative:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15895":{
"Text":"----------------------------------- ;End of Outer Make String Loop (FOUT2LOOP)\r\n                                    ;Nine Numerals were Placeed in String; \r\n                                    ;Truncate Trailing: Zeroes \u0026 Decimal Point\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15838":{
"Text":"             -------- NEXT -------- ;Carry \u0026 X Now Control (+|-) Loop Activity\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15850":{
"Text":"                                    ;Else, Overshot Upper Limit;\r\n                                    ;Adjust Count for Positive case:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15852":{
"Text":"                                    ;Add with Carry Set (C=1):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15856":{
"Text":"                                    ;Advance to Next Smaller Power of Ten:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15807":{
"Text":"                                    ;Y-Index = Pointer to Powers\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15685":{
"Text":"                                    ;^[Index into Output String (BEING BUILT)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15886":{
"Text":"                                    ;Change Dir: Adding=0, Subtracting=$80\r\n                                    ;(Invert Specified Bits by XOR-Mask):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15888":{
"Text":"                                    ;(Select Specified Bits by AND-Mask):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15891":{
"Text":"                                    ;Done Adding \u0026 Subtracting Yet?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15893":{
"Text":"                                    ;Also: [4 Bytes/Const * 9 Cons]=[36]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15909":{
"Text":"                                    ;Else, Not Decimal Point, so Keep Numeral:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15918":{
"Text":"                                    ;Else, Exponent is Negative (A\u003c0)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15943":{
"Text":"                                    ;Do Remainder (for Exponent One\u0027s Place):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15937":{
"Text":"                                    ;[ASCII Sequence: /,0,1,2,3,4,5,6,7,8,9,:]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15945":{
"Text":"                                    ;[ASCII Sequence: /,0,1,2,3,4,5,6,7,8,9,:]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15959":{
"Text":"                                    ;FAC (Exponent) is Zero, So Finish Up:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15962":{
"Text":"                                    ;Just Mark End of String:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15967":{
"Text":"                                    ;Point at Start of String:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15971":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;^ STR$ Starts STRING at FOUTBUFF (STK-1),\r\n                                    ;  but STR$ doesn\u0027t use [(A,Y)={Lo,Hi}],\r\n                                    ;  so using STACK here is okay!\r\n                                    ;-----------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16016":{
"Text":"                                    ;Point at Constant: (1/2)=(0.500)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16032":{
"Text":"------------------------------------------------------------------------------\r\nExponentiation Operation:\r\n[BASE^POWER]=[ARG^FAC]=[EXP((LOG(ABS(ARG))*FAC)*ARGSIGN)]\r\n------------------------------------------------------------------------------\r\n\r\n             ---------------------- ;Save FAC [POWER] in TEMP3:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16043":{
"Text":"             ---------------------- ;Else, ARG is Negative (OK if Int Power)\r\n                                    ;Check if it\u0027s an Integer Power: ",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16055":{
"Text":"                                    ;^[Not Integer Power would cause Error!]\r\n             ---------------------- ;Else, it is an Int Power (FAC)=(TEMP3);\r\n                                    ;So allow Negtive ARG by making it Postive\r\n                                    ;when moved to FAC for Calculation:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16025":{
"Text":"                                    ;^[if FAC=0, ARG^FAC=EXP(0)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16029":{
"Text":"                                    ;Else [if ARG=0, ARG^FAC=0], ...\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16066":{
"Text":"             ---------------------- ;Now, Multiply by Power (Exponent):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16039":{
"Text":"             ---------------------- ;Normally, ARG [BASE] must be Positive:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16046":{
"Text":"                                    ;Does INT(FAC)=FAC?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16063":{
"Text":"             ---------------------- ;Get Natural Logarithm of ABS(ARG):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16058":{
"Text":"                                    ;^[Saved FAC Mantissa (Integer Form), Low]\r\n----------------------------------- ;Now, ARG is Positive, or is Negative \u0026 an\r\n                                    ;Integer Power, fixable for Calculation,\r\n                                    ;or Not an Integer Power; [(A=0) Sets FAC \r\n                                    ;Unpacked Sign (msb)], Next:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16076":{
"Text":"             ---------------------- ;Is Exponent [POWER] a Negative Odd Int?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16148":{
"Text":"                                    ;^[Non-Standard Rounding here]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16181":{
"Text":"                                    ;Swap ARG and FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16150":{
"Text":"                                    ;Else, Round Up (FACEXT \u003e $AF)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16155":{
"Text":"                                    ;^[Strange Value]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16177":{
"Text":"                                    ;Get Back to Normal Bias:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16201":{
"Text":"                                    ;Remainder is Fractional Part",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16196":{
"Text":"                                    ;^[Strange Value]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16229":{
"Text":"                                    ;Y=0: TEMP1 ZP Address, High; x=(TEMP1)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16246":{
"Text":"----------------------------------- ;Calc: a+bx+cx^2+...; Coef\u0027s: ...c,b,a.\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16265":{
"Text":"             ---------------------- ;Accumulate Series Terms:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16268":{
"Text":"                    ^^^^^---------- ;\u003c\u003c\u003c Because of bug in FMULT, ... \u003e\u003e\u003e\r\n             ---------------------- ;Advance Pointer to Next Coefficient:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16282":{
"Text":"             ---------------------- ;Add Next Coefficient:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16285":{
"Text":"             ---------------------- ;Point at x again:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16289":{
"Text":"             ---------------------- ;If Series Not Done, Add Another Term:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16308":{
"Text":"             ---------------------- ;Else, Move Current RND Seed into FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16318":{
"Text":"----------------------------------- ;Else, Do Random Number Function:\r\n                                    ;\u003c\u003c\u003c \"Very Poor RND Algorithm\"--BS-C \u003e\u003e\u003e\r\n             ---------------------- ;Mix It Up!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16325":{
"Text":"                    ^^^^^---------- ;\u003c\u003c\u003c Because of bug in FMULT, ... \u003e\u003e\u003e\r\n             ---------------------- ;Mix It Up More!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16332":{
"Text":"             ---------------------- ;Mix It Up More Still!\r\n                                    ;Swap Most \u0026 Least Significant Bytes:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16340":{
"Text":"             ---------------------- ;Take Absolute Value; Make It Positive:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16344":{
"Text":"             ---------------------- ;Setup Extra Bit \"Randomly\":\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16355":{
"Text":"             ---------------------- ;Move FAC To RND Number Seed:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16316":{
"Text":"             ---------------------- ;EXIT if RND(0):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16394":{
"Text":"                                    ;Get Fractional Part [Remainder=mod(2*pi)]\r\n----------------------------------\u003e ;Now, FAC=Angle as Fraction of Full Circle\r\nCircle    /2|1\\     |1\\     |1\\     ;^[Full Circle = 2*pi rads = 360 degrees]\r\nFolding  |--+--| -\u003e +--| -\u003e +--|    ;^[ 1/2 Circle =   pi rads = 180 degrees]\r\nDiagram   \\3|4/     |4/             ;^[ 1/4 Circle = pi/2 rads =  90 degrees]\r\n----------------------------------\u003e ;Fold FAC into 1st Quad [pi/2, 0 ~90 ]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16415":{
"Text":"                                    ;^[Cleared in TAN Function]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16452":{
"Text":"             ---------------------- ;Store SIN at TEMP3:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16459":{
"Text":"             ---------------------- ;Retrieve FAC:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16475":{
"Text":"             ---------------------- ;Retrieve SIN:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16463":{
"Text":"             ---------------------- ;Compute COS:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16479":{
"Text":"             ---------------------- ;Compute SIN/COS:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16430":{
"Text":"                                    ;^[or: Trig Func\u0027s Sign Flag if from TAN]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16449":{
"Text":"                                    ;Toggled for 2nd or 3rd Quadrant]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16419":{
"Text":"----------------------------------- ;TAN Function Entry Point to Get COS:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16401":{
"Text":"                                    ;Folds Circle on 90 degree Y-Axis, Left to\r\n                                    ;Right, which puts Angle from 2nd or 3rd \r\n                                    ;Quad into 1st or 4th Quad, respectively\r\n             ---------------------- ;Test \u0026 Save Sign for later unfolding:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16406":{
"Text":"                                    ;Angle is OK, \u0026 is now in the 1st Quadrant\r\n             ---------------------- ;Else, FACSIGN is Negative, which means\r\n                                    ;Angle is NOT OK, it\u0027s in the 4th Quadrant\r\n                                    ;Add 1/2 to Fold FAC into 1st Quadrant:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16413":{
"Text":"             ---------------------- ;Else, FACSIGN is Postive [Angle\u0027s NOT OK]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16366":{
"Text":"                                    ;[Full Circle = 2*pi radians =360 degrees]\r\n                                    ;[ 1/4 Circle = pi/2 radians = 90 degrees]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16376":{
"Text":"                                    ;[Full Circle =2*pi radians =360 degrees]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16409":{
"Text":"                                    ;Folds Circle on 0 degree X-Axis, Bottom\r\n                                    ;to Top, which puts Angle from 4th into\r\n                                    ;1st Quadrant\r\n----------------------------------- ;Test Sign for unfolding:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16422":{
"Text":"             ---------------------- ;Angle is OK, \u0026 is now in the 1st Quadrant\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16435":{
"Text":"----------------------------------- ;Unfolding Complete; Compute SIN:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16876":{
"Text":"\r\n==============================================================================\r\nLow Resolution (Lo-Res) Graphics Subroutines\r\n==============================================================================\r\nLo-Res Screen SIZE is 48 or 80 by 48:\r\n 48 Hard-Coded below, in Apple II Plus machines;\r\n 48 for \u003c  Apple IIc, in machines without 80-Column Capability;\r\n 80 for \u003e= Apple IIc, but coding it created a Dangerous BUG in those machines!\r\n [Enhanced Apple IIe is THE BEST Apple II machine! -- JPD]\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nCartesian Coordinator: Subroutine to Get Cartesian (\"#,#\") Coordinates\r\n==============================================================================\r\nGets Two Values \u003c 48, with Comma Separator\r\n------------------------------------------------------------------------------\r\nCalled for PLOT X,Y; HLIN A,B at Y; \u0026 VLIN A,B at X\r\n==============================================================================\r\n\r\n----------------------------------- ;Get 1st Coordinate:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16890":{
"Text":"----------------------------------- ;Get 2nd Coordinate:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16866":{
"Text":"                                    ;Install in Character Input Hook\r\n                                    ;^[Vector at KSW ($38,$39)={Low,High}]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16873":{
"Text":"                                    ;Install in Character Output Hook\r\n                                    ;^[Vector at CSW ($36,$37)={Low,High}]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16905":{
"Text":"==============================================================================\r\nLine Coordinator: Subroutine to Get Lo-Res Line (\"#,# at #\") Coordinates\r\n==============================================================================\r\nGets \"A,B at C\" Values \u003c 48, with Comma \u0026 \"at\" Separators, for HLIN and VLIN;\r\nPuts Smaller of (A,B) in FIRST, and Larger of (A,B) in H2 \u0026 V2;\r\nReturns X-Reg = (C) Value\r\n------------------------------------------------------------------------------\r\nCalled for HLIN A,B at Y; \u0026 VLIN A,B at X\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16912":{
"Text":"                                    ;Else, B \u003c A; Swap (A,B) -\u003e (B,A):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16920":{
"Text":"                                    ;Was (A,B) -\u003e Now (B,A)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17036":{
"Text":"----------------------------------- ;Is HIMEM above Variables \u0026 Arrays?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17049":{
"Text":"----------------------------------- ;Store New HIMEM Value:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17055":{
"Text":"                                    ;^(AKA: Top of Free Space, Low)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17061":{
"Text":"                                    ;^(AKA: Top of Free Space, High)\r\n                                    ;That Resets String-Storage (FRETOP=HIMEM)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17068":{
"Text":"----------------------------------- ;Is LOMEM below HIMEM?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17078":{
"Text":"----------------------------------- ;Is LOMEM above End of Program (EOP)?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17088":{
"Text":"----------------------------------- ;Store New LOMEM Value:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17104":{
"Text":"----------------------------------- ;Save TXTPTR for ERRHNDLR:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17115":{
"Text":"----------------------------------- ;Save Current Line Number:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17126":{
"Text":"             ---------------------- ;Advance TXTPTR by adding (Y):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17123":{
"Text":"----------------------------------- ;Ignore Rest of Line:     \u003c\u003c\u003c Why? \u003e\u003e\u003e\r\n                                    ;[Anything after ONERR GOTO LineNumber\r\n                                    ; is treated like a REM \u0026 Ignored !!!]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17143":{
"Text":"----------------------------------- ;Get Position in Line to RESUME:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17135":{
"Text":"\u003c\u003c\u003c Could also have done TXS here; See ONERR Correction in Applesoft Manual \u003e\u003e\r\n----------------------------------- ;Save Line Number of Offending Statement:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17131":{
"Text":"----------------------------------- ;Get \u0026 Save Stack Pointer Saved at NEWSTT:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17151":{
"Text":"----------------------------------- ;Setup for \"ON ERR GO TO \u003cLine #\u003e\" Msg:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17159":{
"Text":"----------------------------------- ;Save Line Number of \"ON ERR\" Statement:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17167":{
"Text":"----------------------------------- ;Start Conversion:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17195":{
"Text":"----------------------------------- ;Re-try Offending Line:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17184":{
"Text":"----------------------------------- ;Restore Next Char/Token Pointer:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17192":{
"Text":"----------------------------------- ;Restore Stack Pointer:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17203":{
"Text":"----------------------------------- ;Synchronize LOMEM Pointers:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17225":{
"Text":"----------------------------------\u003e ;Upper Program will move down to (DSTPTR)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17211":{
"Text":"----------------------------------- ;Is Range START Line Number in Program?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17230":{
"Text":"----------------------------------- ;Is Range END Line Number in Program?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17233":{
"Text":"                                    ;^[Rtns 0 if Line Number is NOT Specified]\r\n----------------------------------- ;Point 1 Line Past Range END Line Number:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17214":{
"Text":"                                    ;^[Rtns 0 if Line Number is NOT Specified]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17239":{
"Text":"----------------------------------- ;Is Range Valid (START \u003c END):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17253":{
"Text":"------------------------------------------------------------------------------\r\nDelete Specified Section:\r\nMove Upper Program Section Down [(LOWTR~VARTAB) to (DSTPTR)] \r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17201":{
"Text":"==============================================================================\r\n\"DEL\" Statement - Main Entry Point:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17281":{
"Text":"                                    ;^[Done when LOWTR move-up reaches VARTAB]\r\n                                    ;^[Variables will be Cleared, Not Moved!]\r\n----------------------------------- ;Else, Finish Up; Reverse Last Advance:\r\n                                    ;Point End of Program (EOP) to Last Byte \r\n                                    ;Moved [(Destination Address)-1]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17255":{
"Text":"----------------------------------- ;Move a Byte (Delete Loop):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17259":{
"Text":"----------------------------------- ;Advance to Next Source Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17265":{
"Text":"----------------------------------- ;Advance to Next Destination Address:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17271":{
"Text":"----------------------------------- ;Move Next Byte? Or Finish Up?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17289":{
"Text":"\u003c\u003c\u003c Seems like there is a one byte overlap here now that would wipe out the last byte of an Applesoft BASIC program!  Should this last reduction really have been done? -- JPD \u003e\u003e\u003e\r\n----------------------------------- ;Reset Start of Variables Pointer (LOMEM):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18393":{
"Text":"==============================================================================\r\nCalled by STORE \u0026 RECALL: Points LOWTR at Array Specified if Found\r\n==============================================================================\r\n\r\n                                    ;Get an Array Pointer:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17314":{
"Text":"----------------------------------- ;Compute [(Array Size)=(Fwd Offset)-1]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17316":{
"Text":"                                    ;^[Data within Array Variable Pointer]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17320":{
"Text":"                                    ;^[Data within Array Variable Pointer]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17324":{
"Text":"                                    ;^[C=0: Subtract with Borrow (A-Data-!C)]\r\n                                    ;^[C=1: Subtract w/o  Borrow (A-Data-!C)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18364":{
"Text":"\r\n==============================================================================\r\nNon-Graphics Subroutines:\r\n==============================================================================\r\n\r\n==============================================================================\r\nTape Array STORE \u0026 RECALL Routines: \r\n==============================================================================\r\n\r\n==============================================================================\r\nCalled by STORE \u0026 RECALL: \r\nPoint Tape Array Data Pointers at First Value in Specified Array\r\n==============================================================================\r\nNOTE: (ARYPTR) = (HIGHDS)\r\n------------------------------------------------------------------------------\r\n      (ARYPTR) = Applesoft Array Pointer\r\n      (HIGHDS) = Highest Destination Adrs +1\r\n==============================================================================\r\n\r\n----------------------------------- ;Compute Offset to Next Variable:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18379":{
"Text":"                                    ;^[Data within Array Variable Pointer]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17348":{
"Text":"                                    ;^[Data within Array Variable Pointer]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17357":{
"Text":"                                    ;^[C=0: Subtract with Borrow (A-Data-!C)]\r\n                                    ;^[C=1: Subtract w/o  Borrow (A-Data-!C)]\r\n                                    ;Now\u0027ve Adrs where Tape Array would Start\r\n                                    ;^[OK if \u003e, but sh\u0027d be = Spec\u0027d Start+1]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17346":{
"Text":"----------------------------------- ;Compute [(Fwd Offset)-(Tape Array Size)]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18404":{
"Text":"                                    ;Prepare to Read/Write a 3-Byte Header \r\n                                    ;from/to a Cassette Tape (Audio I/O):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17343":{
"Text":"----------------------------------- ;RECALL 3-Byte Header from Tape:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17331":{
"Text":"----------------------------------- ;STORE Array on Tape:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17362":{
"Text":"----------------------------------- ;RECALL Array Data from Tape:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18377":{
"Text":"                                    ;A2 Now has Offset to Next Variable\r\n----------------------------------- ;Get Address of 1st Value in Array:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18392":{
"Text":"                                    ;A1 Now has Address of 1st Value in Array\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18384":{
"Text":"                                    ;ARYPTR Now has Adrs of 1st Value in Array\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17352":{
"Text":"                                    ;^[Carry gets Set when [(A)\u003e=(Data)]]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17386":{
"Text":"\r\n==============================================================================\r\nCommon High-Resolution Graphics Mode (Hi-Res) Initialization Routine:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17383":{
"Text":"                                    ;Default to:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17371":{
"Text":"                                    ;Default to:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17406":{
"Text":"----------------------------------- ;Initialize Loop; Color Hi-Res Background:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17394":{
"Text":"----------------------------------- ;Setup to Initialize Hi-Res Screen Memory:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17413":{
"Text":"                                    ;(Slows Clear by Factor of 2)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17422":{
"Text":"                                    ;Pg1:$40=(%01000000); Pg2:$60=(%01100000)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17425":{
"Text":"==============================================================================\r\nHigh-Resolution Graphics Mode (Hi-Res) Position And Plot Subroutines:\r\n==============================================================================\r\n\r\n==============================================================================\r\nSet Hi-Res Cursor Position Subroutine:              [Called by HPLOT0 \u0026 SCALE]\r\n==============================================================================\r\nEnter with: [(X,Y)={Low,High}] = Horizontal (Cartesian) X-Coordinate (0-279)\r\n                 (Accumulator) =   Vertical (Cartesian) Y-Coordinate (0-191)\r\n------------------------------------------------------------------------------\r\nNote: X-Coordinate = X-Position = Column; Y-Coordinate = Y-Position = Row\r\n==============================================================================\r\n\r\n----------------------------------- ;Save Spec\u0027d Cartesian (X,Y) Coordinates:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17509":{
"Text":"==============================================================================\r\nHigh-Resolution Graphics Mode (Hi-Res) Left, Right, Up, Down Subroutines:\r\n==============================================================================\r\n\r\n==============================================================================\r\nMove Left or Right One Pixel (1 Dot):\r\n==============================================================================\r\nIf Status is Positive, Move Right; If is Negative, Move Left; If already at Left or Right Edge, Wrap Around\r\n==============================================================================\r\nRemember Bits in Hi-Res Byte are Backwards Order:    Byte N   Byte N+1\r\n                                                   S7654321   SEDCBA98\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17712":{
"Text":"\r\n==============================================================================\r\nHigh-Resolution Graphics Mode (Hi-Res) Line Drawing Subroutines:\r\n==============================================================================\r\n\r\n==============================================================================\r\nHLINRL: Clear Current Point [(X0L, X0H), Y0] so HGLIN will act Relatively\r\n        to draw line from it to [{(X0L + DXL), (X0H + DXH)}, (Y0 + DY)]\r\n==============================================================================\r\nHLINRL                            ;Enter with: (A,X) = DX from Current Point\r\n^(Never Called by Applesoft)      ;             (Y)  = DY from Current Point\r\n------------------------------------------------------------------------------\r\nNote: X-Coordinate = X-Position = Column; Y-Coordinate = Y-Position = Row\r\n==============================================================================\r\n\r\n------------------------------------------------------------------------------\r\nHLINRL      [Drop-In Only]        ;Never Referenced [Can Never Happen]\r\n(Only Exception: User-Callable Entry Point; BASIC: CALL -2,768 or CALL 62,768;\r\n                 But Need to Set A,X \u0026 Y Registers 1st; How? POKES \u0026 Pg.3 S/R)\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17921":{
"Text":"==============================================================================\r\nHigh-Resolution Graphics Mode (Hi-Res) Shape Drawing Subroutines:\r\n==============================================================================\r\n\r\n==============================================================================\r\nDRAW0: Sets Hi-Res Screen Byte Pointer\r\n==============================================================================\r\nDRAW0                             ;Enter: (X,Y) = Shape Starting Address {L,H}\r\n^(Never Called by Applesoft)      ;        (A)  = Rotation ($00-$3F)\r\n==============================================================================\r\n\r\n------------------------------------------------------------------------------\r\nDRAW0       [No Drop-In]          ;Never Referenced [Can Never Happen]\r\n(Only Exception: User-Callable Entry Point; BASIC: CALL -2,559 or CALL 62,977;\r\n                 But Need to Set A,X \u0026 Y Registers 1st; How? POKES \u0026 Pg.3 S/R)\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18013":{
"Text":"==============================================================================\r\nHigh-Resolution Graphics Mode (Hi-Res) Shape XDRAW Subroutine:\r\n==============================================================================\r\n\r\n==============================================================================\r\nXDRAW0: Sets Hi-Res Screen Byte Pointer\r\n==============================================================================\r\nXDRAW0                            ;Enter: (X,Y) = Shape Starting Address {L,H}\r\n^(Never Called by Applesoft)      ;        (A)  = Rotation ($00-$3F)\r\n==============================================================================\r\n\r\n------------------------------------------------------------------------------\r\nXDRAW0      [No Drop-In]          ;Never Referenced [Can Never Happen]\r\n(Only Exception: User-Callable Entry Point; BASIC: CALL -2,467 or CALL 63,069;\r\n                 But Need to Set A,X \u0026 Y Registers 1st; How? POKES \u0026 Pg.3 S/R)\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18105":{
"Text":"==============================================================================\r\nParsing Routines used by BASIC for Hi-Res Access:\r\n==============================================================================\r\n\r\n==============================================================================\r\nHFNS Subroutine: Get Hi-Res Plotting Coordinates (0-279,0-191) from TXTPTR\r\n                 Leave Registers set for HPOSN: (X,Y) = X-Coordinate (Column)\r\n                                                 (A)  = Y-Coordinate (Row)\r\n==============================================================================\r\n\r\n             ---------------------- ;Evaluate Expression; Must be Numeric:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17431":{
"Text":"----------------------------------- ;Compute Base Address for Y-Position \r\n                                    ;^[to access Screen Memory via (GBASL),Y]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17442":{
"Text":"----------------------------------- ;-----------------------------------------\r\n                                    ;Bit  A|Y     GBASH     GBASL    A|Y = Row\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17464":{
"Text":"                                    ;-----------------------------------------\r\n                                    ;Hi-Res Page1: PPP=001 for $2000-$3FFF\r\n                                    ;Hi-Res Page2: PPP=010 for $4000-$5FFF\r\n----------------------------------- ;-----------------------------------------\r\n                                    ;Divide X-Position by 7 for Index frm Base\r\n                                    ;Address (Quotient) \u0026 BIT within Screen \r\n                                    ;Memry Byte (Mask Specified by Remainder):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17469":{
"Text":"                                    ;Else, Horizontal X-Position \u003e= 256:\r\n                                    ;256/7 = 36, Remainder = 4; \u0026 Carry = 1, \r\n                                    ;So ADC #4 is Too Large; However, ADC #4 \r\n                                    ;Clears Carry which makes SBC #7 only -6, \r\n                                    ;balancing it out ...\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17476":{
"Text":"                                    ;^[C=0: Subtract with Borrow (A-Data-!C)]\r\n                                    ;^[C=1: Subtract w.o  Borrow (A-Data-!C)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17474":{
"Text":"             ---------------------- ;Horizontal X-Position \u003c 256:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17495":{
"Text":"==============================================================================\r\nHigh-Resolution Graphics Mode (Hi-Res) Plot Subroutine:      [Called by HPLOT]\r\n==============================================================================\r\nEnter with: [(X,Y)={Low,High}] = Horizontal (Cartesian) X-Coordinate (0-279)\r\n                 (Accumulator) =   Vertical (Cartesian) Y-Coordinate (0-191)\r\n------------------------------------------------------------------------------\r\nNote: X-Coordinate = X-Position = Column; Y-Coordinate = Y-Position = Row\r\n==============================================================================\r\n\r\n----------------------------------- ;Plot a Dot (w/ current Color Specified):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17498":{
"Text":"                                    ;^[Computes Bit Position in GBASL/GBASH \u0026\r\n                                    ;HGRHORIZ, + HMASK, from Y-Coordinate in\r\n                                    ;A-Reg \u0026 X-Coordinate in X-Reg \u0026 Y-Reg]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17500":{
"Text":"                                    ;For any 1-bits in HCOLOR1, \r\n                                    ;Substitute Corresponding Bit of HMASK: \r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17532":{
"Text":"----------------------------------- ;Correct for Color Shift:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17511":{
"Text":"----------------------------------- ;Else, Move Left: Status is Negative:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17513":{
"Text":"             ---------------------- ;Shifting Mask Right, Moves Dot Left:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17521":{
"Text":"----------------------------------- ;Dot Moved to Next Byte:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17546":{
"Text":"----------------------------------- ;Move Right: Status is Positive:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17528":{
"Text":"                                    ;     ... is Overflow Bit in Byte\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17539":{
"Text":"                                    ;Else, Shifted Hi-Res Color is Negative:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17548":{
"Text":"             ---------------------- ;Shifting Mask Left, Moves Dot Right:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17553":{
"Text":"----------------------------------- ;Else, Not Done yet [(N-\u003eS): Bit was = 1],\r\n                                    ;Dot Moved to Next Byte:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17564":{
"Text":"==============================================================================\r\nMore High-Resolution Graphics Mode (Hi-Res) Left, Right, Up, Down Subroutines:\r\n==============================================================================\r\n\r\n==============================================================================\r\n\"XDRAW\" One Bit: [Same as DRAW, but this Compliments Color (It happens here!)]\r\n==============================================================================\r\n\r\n----------------------------------- ;Entry Point for No 90 Degree Rotation:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17587":{
"Text":"\r\n==============================================================================\r\n\"DRAW\" One Bit: [Same as XDRAW, but it Compliments Color (happens just above)]\r\n==============================================================================\r\n\r\n----------------------------------- ;Entry Point for No 90 Degree Rotation:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17565":{
"Text":"----------------------------------- ;Entry Point to Rotate 90 Degrees:\r\n                                    ;^[Carry Flag should already be Set (C=1)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17571":{
"Text":"                                    ;NO, (Bit2 = 1), See what\u0027s already there:\r\n             ---------------------- ;[Start of Color Complemnting Section]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17588":{
"Text":"----------------------------------- ;Entry Point to Rotate 90 Degrees:\r\n                                    ;^[Carry Flag should already be Set (C=1)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17594":{
"Text":"                                    ;NO, (Bit2 = 1), See what\u0027s already there:\r\n             ---------------------- ;[Start of NonColorComplemnting Section]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17598":{
"Text":"             ---------------------- ;[End of Non Color Complemnting Section]\r\n                                    ;Look at just this Bit Position:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17604":{
"Text":"----------------------------------- ;Plot Bit - Toggle Bit on Screen with (A):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17596":{
"Text":"                                    ;Set Screen Bit to corresponding HCOLOR:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17577":{
"Text":"                                    ;Is Screen Bit Set (=1)?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17608":{
"Text":"----------------------------------- ;Don\u0027t Plot - Determine where next Point \r\n                                    ;             will be, and Move there:\r\n             ---------------------- ;Calculate Direction to Move:\r\n                                    ;Add Quadrant to Specified Vector \u0026 Move \r\n                                    ;Left/Right/Up/Down based on Sign \u0026 Carry:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17621":{
"Text":"                                    ;Else, Sign = 0, Move Up:\r\n\r\n==============================================================================\r\nMove Up One Pixel (1 Dot): If already at Top, go to Bottom\r\n==============================================================================\r\n----------------------------------- ;Note: X-Coordinate = X-Position = Column\r\n                                    ;      Y-Coordinate = Y-Position = Row\r\n----------------------------------- ;Remember:   Row      GBASH     GBASL\r\n                                    ;          ABCDEFGH  PPPFGHCD  EABAB000\r\n----------------------------------- ;Compute Base Adrs for HR Line Above; Put\r\nMVUP        [Drop-In]               ;Result in (GBAS) w/ 192-Line Wrap Around:\r\n----------------------------------- ;-----------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17669":{
"Text":"----------------------------------- ;-----------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17631":{
"Text":"----------------------------------- ;Move Left/Right/Up/Down based on Sign:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17690":{
"Text":"                                    ;Else, Not Finished, GBASH [(H=1)\u003c-(CD)]:\r\n             ---------------------- ;Is Wrap-Around Needed?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17633":{
"Text":"                                    ;^[Do EFGH=EFGH-1 [Really: FGHCD-1]]\r\n             ---------------------- ;Finished?\r\n                                    ;Test Bit2 of GBASH for Carry [(H)\u003c-(CD)]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17629":{
"Text":"                                    ;^[GBASH=PPP000CD, GBASL=EABAB000]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17638":{
"Text":"                                    ;^[Y-Position Form is AB000000]?\r\n             ---------------------- ;Else, Not Finished, GBASH [(H=1)\u003c-(CD)]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17650":{
"Text":"                                    ;GBASL = ABAB + 1011:\r\n                                    ;        0000 + 1011 = 1011  \u0026  Clrs Carry\r\n                                    ;   or   0101 + 1011 = 0000  \u0026  Sets Carry\r\n                                    ;   or   1010 + 1011 = 0101  \u0026  Sets Carry\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17652":{
"Text":"             ---------------------- ;Else, ... C=0, So Wrap-Around Needed:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17659":{
"Text":"\r\n----------------------------------- ;Do EFGH=EFGH-1 [Really: FGHCD-1]: \r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17661":{
"Text":"----------------------------------- ;Do CDEFGH=CDEFGH-1 for Row = ABCDEFGH:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17643":{
"Text":"----------------------------------- ;No Carry, Finish:\r\n                                    ;Y-Position Form is AB000000\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17646":{
"Text":"             ---------------------- ;Is Wrap-Around Needed?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17656":{
"Text":"                                    ;^[Form is still ABAB0000]\r\n             ---------------------- ;Do CDEFGH=CDEFGH-1 for Row = ABCDEFGH:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17663":{
"Text":"----------------------------------- ;Finish GBASH Modifications, Do FGH=FGH-1:\r\n                                    ;^[GBASH=PPP000CD, GBASL=EABAB000]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17665":{
"Text":"----------------------------------- ;Finished:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17680":{
"Text":"----------------------------------- ;Move Left/Right/Up/Down based on Sign:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17706":{
"Text":"\r\n----------------------------------- ;Finish GBASH Modifications:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17685":{
"Text":"                                    ;Test Bit2 of GBASH for Carry [(H)\u003c-(CD)]:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17682":{
"Text":"             ---------------------- ;Finished?",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17694":{
"Text":"                                    ;GBASL = ABAB + 0101:\r\n                                    ;        0000 + 0101 = 0101  \u0026  No Carry\r\n                                    ;   or   0101 + 0101 = 1010  \u0026  No Carry\r\n                                    ;   or   1010 + 0101 = 1111  \u0026  No Carry\r\n                                    ;    \u0026   1010 --\u003e Wrap Around Up to Line 0\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17700":{
"Text":"                                    ;^[Get it Back to what was, to Not Wrap]\r\n----------------------------------- ;Finish Move:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17698":{
"Text":"                                    ;^[Wrap Around to Line Zero of Group]\r\n                                    ;Else, Wrap-Around Not Needed:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17708":{
"Text":"----------------------------------- ;Fix GBASL, Reverse Shift Left:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17764":{
"Text":"             ---------------------- ;Else, Compute Magnitude of Delta Y\r\n                                    ;[(DY)=(ABS(Y-Y0))={\u0026 Twos Compliment}]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17722":{
"Text":"------------------------------------------------------------------------------\r\n\r\n==============================================================================\r\nHi-Res Line Drawing Subroutine: Draw Line from Last Plotted Point to [(A,X),Y]\r\n==============================================================================\r\nHGLIN   [Can Drop-In Too]         ;Enter with: (A,X) = X of Target Point {L,H}\r\n                                    ;             (Y)  = Y of Target Point\r\n------------------------------------------------------------------------------\r\nNote: X-Coordinate = X-Position = Column; Y-Coordinate = Y-Position = Row\r\n==============================================================================\r\nDelta: the 4th letter of the Greek alphabet (D or d); is used here, with X \u0026 Y (DX \u0026 DY), to mean the amount by which one number or quantity differs from an-other, the amount of change; e.g., Delta X = [DX=X1-X0] \u0026 Delta Y = [DY=Y1-Y0]\r\n==============================================================================\r\n\r\n----------------------------------- ;Compute Delta X = (X - X0):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17758":{
"Text":"----------------------------------- ;Set Pointer to End of Line; Target Y Pt:\r\n             ---------------------- ;Compute Delta Y = (Y - Y0):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17735":{
"Text":"----------------------------------- ;Compute Magnitude of Delta X \r\n                                    ;[(DXL,DXH)=(ABS(X-X0))={\u0026 Twos Comp}]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17753":{
"Text":"----------------------------------- ;Set Pointer to End of Line; Target X Pt:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17732":{
"Text":"                                    ;^[Saves DX Dir (Pos=Right, Neg=Left)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17772":{
"Text":"----------------------------------- ;Add Y-Dir to Hi-Res Drawing Quadrant:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17774":{
"Text":"                                    ;^[Saves DY Direction (Pos=Up, Neg=Down)]\r\n                                    ;^[Shifts DX Direction into HGRQUAD Bit 6]\r\n----------------------------------- ;Initialize HCOUNT to [-DX-DY-1]:\r\n                                    ;^[HCount = Number of Dots needed]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17730":{
"Text":"                                    ;Now Carry\u0027s Direction of Change in X-Pos\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17762":{
"Text":"                                    ;Now Carry\u0027s Direction of Change in Y-Pos\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17770":{
"Text":"                                    ;^[-(Magnitude of Delta Y, Lo) [-ABS(DY)]]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17788":{
"Text":"\r\n----------------------------------- ;Move Left or Right One Pixel;\r\n                                    ;A-Reg Bit 6 has Direction\r\n                                    ;MOVE X Loop 1 [Overlaps MOVE X Loop 2]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17803":{
"Text":"                                    ;MOVE X Loop 2 [Overlaps MOVE X Loop 1]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17784":{
"Text":"----------------------------------- ;Draw Line:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17792":{
"Text":"             ---------------------- ;Draw Line Now:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17801":{
"Text":"                                    ;Carry Clear if HGRE {L,H} goes Negative\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17805":{
"Text":"             ---------------------- ;Plot A Dot:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17818":{
"Text":"                                    ;Else, Test Rest of Count:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17816":{
"Text":"             ---------------------- ;Finished All Dots?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17822":{
"Text":"             ---------------------- ;Else, Test Direction:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17824":{
"Text":"                                    ;^Bit 7 = DY Dir (Pos=Up, Neg=Down);\r\n                                    ;^Bit 6 = DX Dir (Pos=Right, Neg=Left)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17820":{
"Text":"                                    ;HCount = [-DX-DY-1] = No. of Dots needed\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17829":{
"Text":"             ---------------------- ;Advance Hi-Res Horiz Cursor Position:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17840":{
"Text":"             ---------------------- ;(A)=(Magnitude of Delta X, Hi); Next Dot:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17884":{
"Text":"                                    ;^(PPP=Screen Page)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17892":{
"Text":"----------------------------------- ;Convert HGRHORIZ \u0026 HMASK to X-Coordinate\r\n                                    ;[X = 7 * HGRHORIZ + (HMASK Bit Position)]\r\n                                    ;[Range 0-$133]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17910":{
"Text":"                                    ;Compute HGRHORIZ*7+LOG2(HMASK):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17898":{
"Text":"             ---------------------- ;Since (I*7) might not fit in 1 byte,\r\n                                    ; wait till later for last add:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17900":{
"Text":"                                    ;Find HMASK Bit Position:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17904":{
"Text":"                                    ;^[Sign Bit = 0 will Stop Loop if reached]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17925":{
"Text":"\r\n------------------------------------------------------------------------------\r\n\r\n==============================================================================\r\nDraw A Shape: Continues \"DRAW\" Statement\r\n==============================================================================\r\nDRAW1   [Can Drop-In Too]         ;Enter: (X,Y) = Shape Starting Address {L,H}\r\n                                    ;        (A)  = Rotation ($00-$3F)\r\n------------------------------------------------------------------------------\r\nNote: X-Coordinate = X-Position = Column; Y-Coordinate = Y-Position = Row\r\n==============================================================================\r\n\r\n                                    ;[Same as XDRAW, but it Compliments Color]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17905":{
"Text":"                                    ;^[Saved (I*6) Horizontl Index] (I*6)+1..N\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17911":{
"Text":"                                    ;^[Saved (I*6) Horizontl Index]   (I*6)+N\r\n             ---------------------- ;Add HGRHORIZ One More Time:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18017":{
"Text":"\r\n------------------------------------------------------------------------------\r\n\r\n==============================================================================\r\nXDraw A Shape: Continues \"XDRAW\" Statement\r\n==============================================================================\r\nXDRAW1  [Can Drop-In Too]         ;Enter: (X,Y) = Shape Starting Address {L,H}\r\n                                    ;        (A)  = Rotation ($00-$3F)\r\n------------------------------------------------------------------------------\r\nNote: X-Coordinate = X-Position = Column; Y-Coordinate = Y-Position = Row\r\n==============================================================================\r\n\r\n                                    ;[Same as DRAW, but Compliments Color]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17926":{
"Text":"             ---------------------- ;Divide Rotation by 16 to Get Quadrant:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17932":{
"Text":"                                    ;^(Dir: Up=0, Right=1, Down=2, Left=3)\r\n             ---------------------- ;Use Rotation Angle to Index Trig Table\r\n                                    ;^[to Get COS \u0026 SIN, (X,Y) Distances]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17950":{
"Text":"             ---------------------- ;Prepare to DRAW One Bit:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17968":{
"Text":"             ---------------------- ;Advance COS X-Component:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17980":{
"Text":"                                    ;^[Same as XDRAW \u003c- Compliments Color]\r\n             ---------------------- ;Advance SIN Y-Component:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17992":{
"Text":"                                    ;^[Same as XDRAW \u003c- Compliments Color]\r\n             ---------------------- ;Next Iteration:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17987":{
"Text":"                                    ;^[Save Fraction Part, No Integer Part]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17975":{
"Text":"                                    ;^[Save Fraction Part, No Integer Part]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17997":{
"Text":"                                    ;Go to Next 3-Bit Vector:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18024":{
"Text":"                                    ;^(Dir: Up=0, Right=1, Down=2, Left=3)\r\n             ---------------------- ;Use Rotation Angle to Index Trig Table\r\n                                    ;^[to Get COS \u0026 SIN, (X,Y) Distances]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18042":{
"Text":"             ---------------------- ;Prepare to DRAW One Bit:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18060":{
"Text":"             ---------------------- ;Advance COS X-Component:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18067":{
"Text":"                                    ;^[Save Fraction Part, No Integer Part]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18072":{
"Text":"                                    ;^[Same as DRAW, but Compliments Color]\r\n             ---------------------- ;Advance SIN Y-Component:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18079":{
"Text":"                                    ;^[Save Fraction Part, No Integer Part]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18084":{
"Text":"                                    ;^[Same as DRAW, but Compliments Color]\r\n             ---------------------- ;Next Iteration:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18089":{
"Text":"                                    ;Go to Next 3-Bit Vector:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18018":{
"Text":"             ---------------------- ;Divide Rotation by 16 to Get Quadrant:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18111":{
"Text":"             ---------------------- ;Get Column-Coord in (X,Y)={Low,High}:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18125":{
"Text":"                                    ;Else, in Range, \u003c 280 Pixels ...\r\n             ---------------------- ;Stack Column-Coordinate:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18129":{
"Text":"             ---------------------- ;Get Row-Coordinate in Accumulator (A):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18143":{
"Text":"             ---------------------- ;Retrieve Column \u0026 Row Coordinates:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18149":{
"Text":"             ---------------------- ;Finished (with Registers set for HPOSN):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18191":{
"Text":"                                    ;YES, Advance TXTPTR\r\n                                    ;(Why Not CHRGET? A: CMP Sets Carry)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18197":{
"Text":"                                    ;Prepare to Continue Plotting \"TO\" Line:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18221":{
"Text":"==============================================================================\r\nDRWPTR Subroutine: Prepares for DRAW \u0026 XDRAW:\r\n==============================================================================\r\n\r\n----------------------------------- ;Find \u0026 Check SHAPE Number Specified:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18224":{
"Text":"                                    ;Setup Pointer to SHAPE Table Start:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18233":{
"Text":"             ---------------------- ;Compare to Total No. of SHAPEs in Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18246":{
"Text":"             ---------------------- ;Get Offset frm SHAPE Table Offsets Index:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18258":{
"Text":"             ---------------------- ;Save Address of SHAPE in Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18269":{
"Text":"             ---------------------- ;Else, Scan \"AT\" Position Coordinates:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18241":{
"Text":"----------------------------------- ;Else, Find Address of SHAPE in Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18278":{
"Text":"----------------------------------- ;DRAW at Current Position:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18262":{
"Text":"----------------------------------- ;Any More \"AT\" Position Coordinates?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"17583":{
"Text":"             ---------------------- ;[End of Color Complemnting Section]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18306":{
"Text":"             ---------------------- ;Read Length into LINNUM:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18309":{
"Text":"             ---------------------- ;Prepare to Read LINNUM Bytes, Starting at \r\n                                    ;(HIMEM)-(LINNUM) \u0026 Ending at (HIMEM)-1:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18332":{
"Text":"                                    ;^[AKA: Bottom/Start of Free Space]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18339":{
"Text":"----------------------------------- ;Load Shape Table from Tape:\r\n             ---------------------- ;(A)=[(HIMEM)-(LINNUM)] Start Ptr, High:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19094":{
"Text":"                                    ;^(Do Not Reinitialize BASIC)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19101":{
"Text":"                                    ;^(Do Not Reinitialize BASIC)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19104":{
"Text":"                                    ;^(next time)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18689":{
"Text":"\u003c---[Page Boundary] (in the middle of the DWord above)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19457":{
"Text":"\u003c---[Page Boundary] (in the middle of the DWord above)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19713":{
"Text":"\u003c---[Page Boundary] (in the middle of the DWord above)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20205":{
"Text":"\r\n==============================================================================\r\nInternal Cassette Tape Write (Output) \u0026 Read (Input) Routines: HEADER, WRBIT, RDBYTE, RD2BIT, RDBIT, WRBYTE (See: \"Apple II Monitors Peeled\" pgs.81~84)\r\n==============================================================================\r\n\r\n==============================================================================\r\nWrite Byte Subroutine: Writes a Byte (8 Bits) to a Cassette Tape Record\r\n==============================================================================\r\n\u003c---[\"Feed Me!\"--From the 1960 (J.Nickolson) Movie: \"Little Shop of Horrors\"]\r\n    [\u003cReminder\u003e--Your Cassette Tape Recorder is hungry!  Feed it a Byte. ;-D]\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18446":{
"Text":"\r\n----------------------------------- ;Plot a Square Point on Lo-Res Screen:\r\n                                    ;[I/O: (GBASL,H \u0026 MASK)=Row; (Y)=Column]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18482":{
"Text":"----------------------------------- ;Clear Full (48 Lines on) Lo-Res Screen:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18457":{
"Text":"----------------------------------- ;Draw Horizontal Line on Lo-Res Screen:\r\n                                    ;[Enter with (A)=Row; (Y)~(H2)=Column Ends]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18460":{
"Text":"\r\n----------------------------------- ;Draw Horizontal Line on Lo-Res Screen:\r\n                                    ;[(GBASL,H \u0026 MASK)=Row\r\n                                    ; (Y)~(H2)=Column Ends]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18486":{
"Text":"----------------------------------- ;Clear Top (40 Lines on) Lo-Res Screen:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18488":{
"Text":"\r\n----------------------------------- ;Clear Partial Lo-Res Screen:\r\n                                    ;^[(0~Y) Lines, 40 Columns]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18492":{
"Text":"\r\n----------------------------------- ;Clear Partial Lo-Res Screen:\r\n                                    ;^[(0~V2) Lines, (0~Y) Columns]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18503":{
"Text":"==============================================================================\r\nCalculate Graphics Base Address (BASH,BASL) for Left End of Screen Line Number\r\n(Not Lo-Res GR Line Number) in A-Reg [Range: (0~23)=($00~$17)=(%00000~%10111)]\r\n==============================================================================\r\nGBASCALC [to set Graphics Base Address (GBASH,GBASL)] is almost identical to\r\n BASCALC [to set Text Line Base Address (BASH,BASL)]\r\n---------------------------vv-------------------------vv----------vv----vv----\r\nF847: 48 4A 29 03 09 04 85 27 68 29 18 90 02 69 7F 85 26 0A 0A 05 26 85 26 60\r\nFBC1: 48 4A 29 03 09 04 85 29 68 29 18 90 02 69 7F 85 28 0A 0A 05 28 85 28 60\r\n------------------------------------------------------------------------------\r\nNote: Indexed Addressing of the Base Address ZP Pointers would allow S/R\u0027s \r\nto be combined into one S/R with one or two different Entry Points to preset \r\nwhich task is being processed (e.g., GBASL,X \u0026 GBASH,X \u0026 X=0 or X=2)\r\n------------------------------------------------------------------------------\r\n    GBASL    EQU     $26            ;Graphics Base Address, Low\r\n    GBASH    EQU     $27            ;Graphics Base Address, High\r\n    BASL     EQU     $28            ;Text Base Address, Low\r\n    BASH     EQU     $29            ;Text Base Address, High\r\n==============================================================================\r\n\r\n----------------------------------- ;Set Graphics Base Address (GBASH,GBASL):\r\n                                    ;^[RAM Address of Plotting Line Specified]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18518":{
"Text":"                                    ;^[%00011000 + (%01111111 + 1)= %10011000]\r\n                                    ;^[%00011000 + (%10000000)    = %10011000]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18520":{
"Text":"                                    ;       ^[GBASL=(000LM000 | I00LM000)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18504":{
"Text":"                                    ;^[...(A)=(Text Screen Line # {0~23})]\r\n                                    ;^[...(A)=((Lo-Res Graphics Line #)/2)]\r\n                                    ;^[GBASH=ABCDEFGH; GBASL=IJKLMNOP]\r\n             ---------------------- ;Set Graphics Base Address, High (GBASH):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18526":{
"Text":"             ---------------------- ;Now (GBASH,GBASL)=[%0000,01FG,ILML,M000]\r\n\r\n                                    ;------------+---------+---------+\r\n                                    ; Lo-Res GR Line Base Addresses: |\r\n                                    ;------------+---------+---------+\r\n                                    ;            |  GBASH  |  GBASL  |\r\n                                    ;------------+---------+---------+\r\n                                    ;  Top 3rd of GR Screen:         |\r\n                                    ;------------+---------+---------+\r\n                                    ;$400, 1024, %0000,0100,0000,0000;\r\n                                    ;$480, 1152, %0000,0100,1000,0000;\r\n                                    ;$500, 1280, %0000,0101,0000,0000;\r\n                                    ;$580, 1408, %0000,0101,1000,0000;\r\n                                    ;$600, 1536, %0000,0110,0000,0000;\r\n                                    ;$680, 1664, %0000,0110,1000,0000;\r\n                                    ;$700, 1792, %0000,0111,0000,0000;\r\n                                    ;$780, 1920, %0000,0111,1000,0000;\r\n                                    ;------------+---------+---------+\r\n                                    ;  Middle 3rd of GR Screen:      |\r\n                                    ;------------+---------+---------+\r\n                                    ;$428, 1064, %0000,0100,0010,1000;\r\n                                    ;$4A8, 1192, %0000,0101,1010,1000;\r\n                                    ;$528, 1320, %0000,0101,0010,1000;\r\n                                    ;$5A8, 1448, %0000,0100,1010,1000;\r\n                                    ;$628, 1576, %0000,0110,0010,1000;\r\n                                    ;$6A8, 1704, %0000,0110,1010,1000;\r\n                                    ;$728, 1832, %0000,0111,0010,1000;\r\n                                    ;$7A8, 1960, %0000,0111,1010,1000;\r\n                                    ;------------+---------+---------+\r\n                                    ;  Bottom 3rd of GR Screen:      |\r\n                                    ;------------+---------+---------+\r\n                                    ;$450, 1104, %0000,0100,0101,0000;\r\n                                    ;$4D0, 1232, %0000,0100,1101,0000;\r\n                                    ;$550, 1360, %0000,0101,0101,0000;\r\n                                    ;$5D0, 1488, %0000,0101,1101,0000;\r\n                                    ;$650, 1616, %0000,0110,0101,0000;\r\n                                    ;$6D0, 1744, %0000,0110,1101,0000;\r\n                                    ;$750, 1872, %0000,0111,0101,0000;\r\n                                    ;$7D0, 2000, %0000,0111,1101,0000;\r\n                                    ;------------+---------+---------+\r\n                                    ;  GBASH,L:  %0000,01FG,ILML,M000;\r\n                                    ;------------+---------+---------+\r\n\r\n----------------------------------- ;Returns: GBASH=000001FG; GBASL=ILMLM000\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18511":{
"Text":"             ---------------------- ;Set Graphics Base Address, Low  (GBASL):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18490":{
"Text":"             vvv ------------------ ;\"Apple II Monitors Peeled\" Entry Point:\r\n             vvv                    ;^[(0~V2) Lines, 40 Columns]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18477":{
"Text":"             vvv ------------------ ;\"Apple II Monitors Peeled\" Entry Point:\r\n             vvv                    ;[(A+1)~(V2)=Row Ends; (Y)=Column]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18472":{
"Text":"\r\n----------------------------------- ;Draw Vertical Line on Lo-Res Screen:\r\n                                    ;[Enter w/ (A)~(V2)=Row Ends; (Y)=Column]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18496":{
"Text":"             vvv ---------------- ;\"Apple II Monitors Peeled\" Entry Point:\r\n             vvv                  ;Clear Color to whatever HMASK is upon entry\r\n             vvv                  ;^[(A) Must be Preset to Zero]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18532":{
"Text":"----------------------------------- ;Set Plotting Color to (A)=(0~16,0~16):",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18542":{
"Text":"                                    ;(%####,0000 OR %0000,#### = %####,####)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18534":{
"Text":"                                    ;^[Math\u0027ly: Sets Color = 17*A Mod 16]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19823":{
"Text":"----------------------------------- ;Get Input without Prompt Entry Point:\r\n                                    ;Init Input Index \u0026 it will Reduce to 0:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19818":{
"Text":"----------------------------------- ;Get Input with Prompt Entry Point:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19862":{
"Text":"----------------------------------- ;Print Carriage Return \u0026 16-Bit Integer:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19858":{
"Text":"==============================================================================\r\nEnd Of Keyboard Character Input, Line Building, \u0026 Input Display Routines\r\n==============================================================================\r\n\r\n==============================================================================\r\nMemory Dump Routines:\r\n==============================================================================\r\n\r\n==============================================================================\r\nPrint Memory Address: \r\n==============================================================================\r\nPrint Carriage Return \u0026 Monitor General Purpose A1-Reg or Progrram Counter as 16-Bit Integer [(Y,X)={High,Low}] in Hexadecimal\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Print Monitor General Purpose A1-Reg:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18764":{
"Text":"                                    ;Print (A) Char + Blank [(X) Spaces]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18583":{
"Text":"                                    ;^[OpCode Before Shifting \u0026 Rotatng Right]\r\n                                    ;================= FMT1,X ================\r\n                                    ;(?) =         %10001001=$89=137\r\n                                    ;LSR =         %01000100=$44=68  -\u003e(C=1)\r\n                                    ;ROR = (C=1)-\u003e %10100010=$A2=162 -\u003e(C=0)\r\n                                    ;================= FMT2,X ================\r\n                                    ;NOP =         %11101010=$EA=234\r\n                                    ;LSR =         %01110101=$75=117 -\u003e(C=0)\r\n                                    ;ROR = (C=0)-\u003e %00111010=$3A=58  -\u003e(C=1)\r\n                                    ;Relative \u003c- = %10011101=$9D=157 -\u003e(C=0)\r\n                                    ;=========================================\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18581":{
"Text":"                                    ;^[OpCode Before Shifting \u0026 Rotatng Right]\r\n             ---------------------- ;Else, OpCode is (=%######01) Odd\r\n                                    ;^[OpCode Before Shifting \u0026 Rotatng Right]\r\n                                    ;\u0026 Now (C=0) \u0026 (A)=(%10######):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18578":{
"Text":"                                    ;^[OpCode Before Shifting \u0026 Rotatng Right]\r\n             ---------------------- ;Else, OpCode is (=%#######1) Odd\r\n                                    ;^[OpCode Before Shifting \u0026 Rotatng Right]\r\n                                    ;\u0026 Now (C=1) \u0026 (A)=(%0#######):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18585":{
"Text":"             ---------------------- ;Else, OpCode is (=%######01) Odd \u0026 Valid\r\n                                    ;\u0026 Now (C=?) \u0026 (A)=(%10######):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18587":{
"Text":"                                    ;\u0026 Discard the Rest [(A)=(%10000###)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18588":{
"Text":"                                    ;Also Sets (A)=(A/2) for Absolute,X-Index:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18625":{
"Text":"             ---------------------- ;LSB was Odd, Discard \u0026 Set Bits:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18633":{
"Text":"             ---------------------- ;LSB was Even, Check Next:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18636":{
"Text":"             ---------------------- ;Now: (A) = Index into the Mnemonic Table;\r\n                                    ;     (X) = Masked OpCode; \u0026 (Y) = 0\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18620":{
"Text":"                                    ;                   ^[1 in Chart above]^\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18623":{
"Text":"             ---------------------- ;Shift until LSB was Odd or (Y) = 0:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18640":{
"Text":"==============================================================================\r\nDisassemble \u0026 Print Instruction at Program Counter\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19930":{
"Text":"\r\n==============================================================================\r\nPrint A-Reg as Two-Digit Hex Number:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18643":{
"Text":"                                    ;Get Instruction FORMAT \u0026 LENGTH, \u0026 MTI:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18644":{
"Text":"             ---------------------- ;Print (1-3) OpCode Bytes [as Hex: \"## \"]\r\n                                    ;(in a 12 Char Field, Ending w/ Spaces)\r\n                                    ;=[4 Fields of 3 Characters each]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18665":{
"Text":"             ---------------------- ;Fetch 3-Char Mnemonic (Packed In 2-Bytes)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18677":{
"Text":"\r\n------------------------------------------------------------------------------\r\nNote about NXTCOL here \u0026 there: NXTCOL is the Label used here in the New Monitor listing; NXTCOL was used elsewhere in the Old Monitor listing (See NEXTCOLOR above); PRMN1 was the Label used here in the Old Monitor listing.\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18681":{
"Text":"                    ;[(%###CHAR1)\u003c--(%CHAR1,CHA ~ %R2,CHAR3#)=(MNEML,MNEMR)]\r\n------------------------------------------------------------------------------\r\nThese are the Two Packed Bytes of the Mnemonics: There are 3 Packed Chars per\r\n2 Byte Mnemonic [5 Bits/Char: (%CHAR1,CHA ~ %R2,CHAR3#) \u0026 a Trailing Bit];\r\nEach Mnemonic Character is a 5 Bit Number + High ASCII \"?\" [=(5 Bit #)+($BF)]\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18659":{
"Text":"                                    ;End 12 Char Field w/ Spaces; =[4*3]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18572":{
"Text":"----------------------------------- ;Get OpCode, Instruction FORMAT \u0026 LENGTH,\r\n                                    ;\u0026 Index into Mnemonic Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18569":{
"Text":"                                    ;Followed by a Dash\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18661":{
"Text":"                                    ;^[Also used below for Mnemonic Chars]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18708":{
"Text":"----------------------------------- ;Else, Do Address Field Formatting,\r\n                                    ;Print Addressing Field CHARS 1 \u0026 2:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18712":{
"Text":"                                    ;Address Printout CHAR1 Bytes: \",),#($\"\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18718":{
"Text":"                                    ;Address Printout CHAR2 Bytes: \"Y0X$$0\"",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18736":{
"Text":"                                    ;^[Jumps to (CSW); Does NOT Return Here!]\r\n\r\n----------------------------------- ;Do Addressing Field (Entry Point):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18730":{
"Text":"----------------------------------- ;Do Addressing Field (Not a Branch):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18744":{
"Text":"----------------------------------- ;Handle Relative Addressing Mode Special,\r\n                                    ;for BCC|BCS|BEQ|BMI|BNE|BPL|BVC|BVS,\r\n                                    ;Print Branch Target, Not Offset Value:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18740":{
"Text":"                                    ;^[FORMAT for Relative = $9D = %10011101; \r\n                                    ;FORMAT for Rel ASL *3 = $E8 = %11101000]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18747":{
"Text":"                                    ;Set Target=1+[(PCL,H)+(Offset)+1]-\u003e(A,Y):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18752":{
"Text":"----------------------------------- ;Output Target Address of Branch\r\n                                    ;\u0026 Return to Caller:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18760":{
"Text":"------------------------------------------------------------------------------\r\nPrint Blank Spaces Subroutine:\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18771":{
"Text":"------------------------------------------------------------------------------\r\nAdd (A+C) to Instruction Address (PCL,H) Subroutines:\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Add Length+1 to Instruction Adrs (PCL,H):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18776":{
"Text":"                                    ;Test Relative Branch Displacement Sign:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18774":{
"Text":"                                    ;... ^[0=1-Byte, 1=2-Bytes, 2=3-Bytes]\r\n----------------------------------- ;Add (A+C) to Instruction Address (PCL,H):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18772":{
"Text":"----------------------------------- ;Add Length+(C) to Instr Adrs (PCL,H):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18589":{
"Text":"                                    ;^[For Odd OpCodes: (X=A)=(%010000##)=\r\n                                    ;{(%01000000=$40=64)~(%01000011=$43=67)}]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18794":{
"Text":"                                    ;$0F: ??? Error/Unknown  | 1 | {Empty}\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18802":{
"Text":"                                    ;$1F: ??? Error/Unknown  | 1 | {Empty}\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18810":{
"Text":"                                    ;$2F: ??? Error/Unknown  | 1 | {Empty}\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18818":{
"Text":"                                    ;$3F: ??? Error/Unknown  | 1 | {Empty}\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18826":{
"Text":"                                    ;$4F: ??? Error/Unknown  | 1 | {Empty}\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18834":{
"Text":"                                    ;$5F: LDY Absolute,X     | 3 | $NNNN,X\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18842":{
"Text":"                                    ;$6F: ??? Error/Unknown  | 1 | {Empty}\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18850":{
"Text":"                                    ;$7F: ??? Error/Unknown  | 1 | {Empty}\r\n------------------------------------------------------------------------------\r\nLast 8 for Odd OpCode Mnemonics *** [ORA, AND EOR, ADC, STA, LDA, CMP, \u0026 SBC]:\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18790":{
"Text":"                                    ;$07: ??? Error/Unknown  | 1 | {Empty}\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18798":{
"Text":"                                    ;$17: BIT Absolute       | 3 | $NNNN\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18806":{
"Text":"                                    ;$27: JMP Absolute       | 3 | $NNNN\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18814":{
"Text":"                                    ;$37: JMP (Abs.Indirect) | 3 | ($NNNN)\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18822":{
"Text":"                                    ;$47: STY Absolute       | 3 | $NNNN\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18830":{
"Text":"                                    ;$57: LDY Absolute       | 3 | $NNNN\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18838":{
"Text":"                                    ;$67: CPY Absolute       | 3 | $NNNN\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18846":{
"Text":"                                    ;$77: CPX Absolute       | 3 | $NNNN\r\n------------------------------------------------------------------------------\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18787":{
"Text":"                                    ;$01: BRK Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18788":{
"Text":"                                    ;$03: ??? Error/Unknown  | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18789":{
"Text":"                                    ;$05: PHP Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18791":{
"Text":"                                    ;$09: BPL Relative       | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18853":{
"Text":"                                    ;      ^ $(Odd)5\r\n                                    ;$85: *** (Zero-Page),Y  | 2 | ($NN),Y\r\n                                    ;      ^ $(Odd)1  [(Indirect)-Indexed]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18852":{
"Text":"                                    ;      ^ $(Even)D\r\n                                    ;$83: *** Immediate      | 2 | #$NN\r\n                                    ;      ^ $(Even)9  [No STA Immediate!]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18851":{
"Text":"                                    ;      ^ $(Even)5:Zero-Page\r\n                                    ;$81: *** (Zero-Page,X)  | 2 | ($NN,X)\r\n                                    ;      ^ $(Even)1 [(Indexed-Indirect)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18849":{
"Text":"                                    ;$7D: SED Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18848":{
"Text":"                                    ;$7B: ??? Error/Unknown  | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18847":{
"Text":"                                    ;$79: BEQ Relative       | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18845":{
"Text":"                                    ;$75: INX Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18844":{
"Text":"                                    ;$73: CPX Zero-Page [ZP] | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18843":{
"Text":"                                    ;$71: CPX Immediate      | 2 | #$NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18841":{
"Text":"                                    ;$6D: CLD Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18840":{
"Text":"                                    ;$6B: ??? Error/Unknown  | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18839":{
"Text":"                                    ;$69: BNE Relative       | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18837":{
"Text":"                                    ;$65: INY Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18836":{
"Text":"                                    ;$63: CPY Zero-Page [ZP] | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18835":{
"Text":"                                    ;$61: CPY Immediate      | 2 | #$NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18833":{
"Text":"                                    ;$5D: CLV Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18832":{
"Text":"                                    ;$5B: LDY Zero-Page,X    | 2 | $NN,X\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18831":{
"Text":"                                    ;$59: BCS Relative       | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18829":{
"Text":"                                    ;$55: TAY Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18828":{
"Text":"                                    ;$53: LDY Zero-Page [ZP] | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18827":{
"Text":"                                    ;$51: LDY Immediate      | 2 | #$NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18825":{
"Text":"                                    ;$4D: TYA Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18824":{
"Text":"                                    ;$4B: STY Zero-Page,X    | 2 | $NN,X\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18823":{
"Text":"                                    ;$49: BCC Relative       | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18821":{
"Text":"                                    ;$45: DEY Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18820":{
"Text":"                                    ;$43: STY Zero-Page [ZP] | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18819":{
"Text":"                                    ;$41: ??? Error/Unknown  | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18817":{
"Text":"                                    ;$3D: SEI Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18816":{
"Text":"                                    ;$3B: ??? Error/Unknown  | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18815":{
"Text":"                                    ;$39: BVS Relative       | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18813":{
"Text":"                                    ;$35: PLA Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18812":{
"Text":"                                    ;$33: ??? Error/Unknown  | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18811":{
"Text":"                                    ;$31: RTS Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18809":{
"Text":"                                    ;$2D: CLI Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18808":{
"Text":"                                    ;$2B: ??? Error/Unknown  | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18807":{
"Text":"                                    ;$29: BVC Relative       | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18805":{
"Text":"                                    ;$25: PHA Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18804":{
"Text":"                                    ;$23: ??? Error/Unknown  | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18803":{
"Text":"                                    ;$21: RTI Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18801":{
"Text":"                                    ;$1D: SEC Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18800":{
"Text":"                                    ;$1B: ??? Error/Unknown  | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18799":{
"Text":"                                    ;$19: BMI Relative       | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18797":{
"Text":"                                    ;$15: PLP Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18796":{
"Text":"                                    ;$13: BIT Zero-Page [ZP] | 2 | $NN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18795":{
"Text":"                                    ;$11: JSR Absolute       | 3 | $NNNN\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18793":{
"Text":"                                    ;$0D: CLC Implied        | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18792":{
"Text":"                                    ;$0B: ??? Error/Unknown  | 1 | {Empty}\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18592":{
"Text":"                                    ;^[See also (below): FMT1 NOTE]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18605":{
"Text":"                                    ;^[See also (below): FMT1 NOTE]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19010":{
"Text":"                                    ;^[Destroys General Purpose A5-Reg, High]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19020":{
"Text":"----------------------------------- ;BRK Handler\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19033":{
"Text":"----------------------------------- ;OLD BRK Handler\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19024":{
"Text":"                                    ;Including Program Counter:\r\n                                    ;\u003c\u003c\u003c BUG: SAV1 Does Not Save A-Reg! \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19043":{
"Text":"                                    ;\"OLDRST\" does NOT do it!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19190":{
"Text":"                                    ;^(X)=[($FB=251={-5})~($FF=255={-1})]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19264":{
"Text":"==============================================================================\r\nInitialize Video Screen for Mixed Graphics \u0026 Text Mode\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19311":{
"Text":"==============================================================================\r\nSet Power-Up Reset CHKSUM [(SOFTEV+1)EOR #$A5]       [Done differently above!]\r\n==============================================================================\r\n\r\n------------------------------------------------------------------------------\r\nSETPWRC     [No Drop-In]          ;Never Referenced [Can Never Happen]\r\n(Only Exception: User-Callable Entry Point; BASIC: CALL -1,169 or CALL 64,367\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19320":{
"Text":"==============================================================================\r\nPause: Check for a Computer Operator Pause Request; if Requested, Pause until another Key is Pressed; then continue on, unless Stop (Ctrl-C) is Requested!\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19351":{
"Text":"==============================================================================\r\nEscape Character Handlers:\r\n==============================================================================\r\n\r\n----------------------------------- ;Old Escape Character Handler:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19355":{
"Text":"----------------------------------- ;New Escape Character Handler:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19379":{
"Text":"==============================================================================\r\nNOP Free Space [that can be changed in (Apple II Plus) Emulator ROM images]:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19359":{
"Text":"             \u003e\u003e\u003e--\u003e XLTBL EQU $FB11 ;^[XLTBL=(Cursor Keys Translation Table)]\r\n                                    ;^[XLTBASE=XLTBL-(\"I\"=$C9=201)=$FA48]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19500":{
"Text":"==============================================================================\r\nEscape Character Handler:\r\n==============================================================================\r\n\r\n------------------------------------; Handle Escape Character\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19394":{
"Text":"             ---------------------- ;Compute Text Base Address, High (BASH):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19401":{
"Text":"             ---------------------- ;Compute Text Base Address, Low (BASL):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19408":{
"Text":"                                    ;[Shifts BASH-\u003e{%E-\u003e(C=1)**}-\u003eBASL]\r\n                    --------------- ;Generate: %E00AB000-\u003e%EABAB000:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19416":{
"Text":"                                    ;^[(0~$78)=(0~120)|($80~$F8)=(128~248)]\r\n                                    ;^[Off Screen Holes: $78~$7F \u0026 $F8~$FF]\r\n             ---------------------- ;Now (BASH,BASL)=[%0000,01CD,EABA,B000]\r\n\r\n                                    ;------------+---------+---------+\r\n                                    ; Screen Line Base Addresses:    |\r\n                                    ;------------+---------+---------+\r\n                                    ;            |  BASH   |  BASL   |\r\n                                    ;------------+---------+---------+\r\n                                    ;  Top 3rd of Text Screen:       |\r\n                                    ;------------+---------+---------+\r\n                                    ;$400, 1024, %0000,0100,0000,0000;\r\n                                    ;$480, 1152, %0000,0100,1000,0000;\r\n                                    ;$500, 1280, %0000,0101,0000,0000;\r\n                                    ;$580, 1408, %0000,0101,1000,0000;\r\n                                    ;$600, 1536, %0000,0110,0000,0000;\r\n                                    ;$680, 1664, %0000,0110,1000,0000;\r\n                                    ;$700, 1792, %0000,0111,0000,0000;\r\n                                    ;$780, 1920, %0000,0111,1000,0000;\r\n                                    ;------------+---------+---------+\r\n                                    ;  Middle 3rd of Text Screen:    |\r\n                                    ;------------+---------+---------+\r\n                                    ;$428, 1064, %0000,0100,0010,1000;\r\n                                    ;$4A8, 1192, %0000,0101,1010,1000;\r\n                                    ;$528, 1320, %0000,0101,0010,1000;\r\n                                    ;$5A8, 1448, %0000,0100,1010,1000;\r\n                                    ;$628, 1576, %0000,0110,0010,1000;\r\n                                    ;$6A8, 1704, %0000,0110,1010,1000;\r\n                                    ;$728, 1832, %0000,0111,0010,1000;\r\n                                    ;$7A8, 1960, %0000,0111,1010,1000;\r\n                                    ;------------+---------+---------+\r\n                                    ;  Bottom 3rd of Text Screen:    |\r\n                                    ;------------+---------+---------+\r\n                                    ;$450, 1104, %0000,0100,0101,0000;\r\n                                    ;$4D0, 1232, %0000,0100,1101,0000;\r\n                                    ;$550, 1360, %0000,0101,0101,0000;\r\n                                    ;$5D0, 1488, %0000,0101,1101,0000;\r\n                                    ;$650, 1616, %0000,0110,0101,0000;\r\n                                    ;$6D0, 1744, %0000,0110,1101,0000;\r\n                                    ;$750, 1872, %0000,0111,0101,0000;\r\n                                    ;$7D0, 2000, %0000,0111,1101,0000;\r\n                                    ;------------+---------+---------+\r\n                                    ;  BASH,L:   %0000,01CD,EABA,B000;\r\n                                    ;------------+---------+---------+\r\n\r\n----------------------------------- ;Returns: BASH=000001CD; BASL=EABAB000\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19395":{
"Text":"                                    ;[Shifts BASH-\u003e{%E-\u003e(C)**}-\u003eBASL, below]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19421":{
"Text":"\r\n(*) ------------------------------- ;Sound Bell regardless of Output Device:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19426":{
"Text":"\r\n(*) ------------------------------- ;Sound Bell without first WAIT:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19428":{
"Text":"\r\n             ---------------------- ;Sound Bell Loop:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19440":{
"Text":"==============================================================================\r\nOutput A-Reg as Text (Place Character in Screen Memory):\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19453":{
"Text":"==============================================================================\r\nOutput A-Reg as Text (Place in Screen Memory) or Process Control Character:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19472":{
"Text":"----------------------------------- ;YES, Char (A) is a Back Space (Ctrl-H)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19476":{
"Text":"             ---------------------- ;Move to Rightmost Screen Column:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19482":{
"Text":"             ---------------------- ;Move Up (at Rightmost Screen Column):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19490":{
"Text":"----------------------------------- ;TAB to ROW specified in A-Reg:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19499":{
"Text":"                                    ;^[There shouldn\u0027t be any Carryover!]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19522":{
"Text":"                                    ;^[(\"@\"=$C0)XOR(\"F\"=$C6)=(6) -\u003e\r\n                                    ; (6)+($FD)+(C=1)=(4) -\u003e(C=1)-\u003e\r\n                                    ; (4)+($FD)+(C=1)=(2) -\u003e(C=1)-\u003e\r\n                                    ; (2)+($FD)+(C=1)=(0)**]\r\n----------------------------------- ;Else, Esc+F, Clear to End of Page\r\n                                    ;[Unused, User-Callable Entry Point]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19526":{
"Text":"----------------------------------- ;Clear to End of Page Loop\r\n                                    ;[User-Callable Entry Point]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19504":{
"Text":"                                    ;^[(\"@\"=$C0)XOR(\"@\"=$C0)=(0)**]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19508":{
"Text":"                                    ;^[(\"@\"=$C0)XOR(\"A\"=$C1)=(1) -\u003e\r\n                                    ; (1)+($FD)+(C=1)=($FF)=(-1) -\u003e(C=0)**]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19510":{
"Text":"                                    ;^[(\"@\"=$C0)XOR(\"B\"=$C2)=(2) -\u003e\r\n                                    ; (2)+($FD)+(C=1)=(0)**]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19514":{
"Text":"                                    ;^[(\"@\"=$C0)XOR(\"C\"=$C3)=(3) -\u003e\r\n                                    ; (3)+($FD)+(C=1)=(1) -\u003e(C=1)-\u003e\r\n                                    ; (1)+($FD)+(C=1)=($FF)=(-1) -\u003e(C=0)**]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19516":{
"Text":"                                    ;^[(\"@\"=$C0)XOR(\"D\"=$C4)=(4) -\u003e\r\n                                    ; (4)+($FD)+(C=1)=(2) -\u003e(C=1)-\u003e\r\n                                    ; (2)+($FD)+(C=1)=(0)**]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19520":{
"Text":"                                    ;^[(\"@\"=$C0)XOR(\"E\"=$C5)=(5) -\u003e\r\n                                    ; (5)+($FD)+(C=1)=(3) -\u003e(C=1)-\u003e\r\n                                    ; (3)+($FD)+(C=1)=(1) -\u003e(C=1)-\u003e\r\n                                    ; (1)+($FD)+(C=1)=($FF)=(-1) -\u003e(C=0)**]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19554":{
"Text":"==============================================================================\r\nReturn Cursor [Printer/Typewriter Carriage Return] (CR) to Start of Next Line:\r\n==============================================================================\r\nForget about Printer/Typewriter Carriage Returns; this is more about the\r\nApple II Cursor (on Screen) than it is about those old mechanical devices! \r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Return Cursor (CR) to Start of Next Line:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19558":{
"Text":"----------------------------------- ;Down (Esc+C/Ctrl+J), Do a Line Feed:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19568":{
"Text":"----------------------------------- ;Scroll Window Up (Line by Line)\r\n                                    ;[Unused, User-Callable Entry Point]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19574":{
"Text":"----------------------------------- ;Scrolling Loop:\r\n                    --------------- ;Save Current Line Base Address;\r\n                                    ;Copy Base Address [(BASL,H)-\u003e(BAS2L,H)]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19596":{
"Text":"             ---------------------- ;Move Characters (A) Up One Line (Loop):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19582":{
"Text":"                    --------------- ;Initialize Y-Index Register to \r\n                                    ;Rightmost Column of Scrolling Window:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19585":{
"Text":"                    --------------- ;Check if at Bottom of Scrolling Window:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19603":{
"Text":"             ---------------------- ;Done with Chacracters on this Line\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19605":{
"Text":"----------------------------------- ;Scroll Window Up (Line by Line) Done;\r\n                                    ;Fininsh Up; Clear Bottom Line of Window:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19612":{
"Text":"\r\n==============================================================================\r\n(Esc+E): Clear from Cursor [(BASL),(CH|Y)] to End of Line [(BASL),(WNDWDTH)]:\r\n==============================================================================\r\n\r\n----------------------------------- ;Clear from Cursor [(BASL),(CH)] to EOL:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19614":{
"Text":"----------------------------------- ;Clear from Cursor [(BASL),(Y)] to EOL:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19616":{
"Text":"----------------------------------- ;Chr Fill from Cursor [(BASL),(Y)] to EOL\r\n                                    ;Loop [\u0026 User-Callable Entry Point]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19630":{
"Text":"                                    ;   ^[4 cycles/iteration when (A=0)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19635":{
"Text":"                                    ;   ^[~5*(A)+11 cycles/it when (A=0)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19636":{
"Text":"==============================================================================\r\nNext A4 \u0026 Next A1: Monitor General Purpose (16 Bit) Accumulator Registers\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19642":{
"Text":"             ---------------------- ;Has A1 Reached A2?\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19656":{
"Text":"             ---------------------- ;Caller should Check if A1 Has Reached A2:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19657":{
"Text":"==============================================================================\r\nInternal Cassette Tape Write (Output) \u0026 Read (Input) Routines: HEADER, WRBIT, RDBYTE, RD2BIT, RDBIT, WRBYTE (See: \"Apple II Monitors Peeled\" pgs.81~84)\r\n==============================================================================\r\n\r\n==============================================================================\r\nCassette Tape Record Synchronization Header Subroutine:\r\n==============================================================================\r\nWrites Synchronization Monotone to Audio-Out: The first part of every Tape Record is a 10 sec 770 hz (1300 usec/cycle) header tone (See TN/TIL# 495~496) ------------------------------------------------------------------------------\r\n(A)=[Synchronization Header Length (0.2~40 sec)]; (X)=[Audio Half-Cycle Toggle Count (Clear at Entry)]; (Y)=(Loop Duration Count); Writing to Tape/Audio-Out: (C)=[Clear for a Zero-Bit, or Set for a One-Bit (Set at Entry)]\r\n------------------------------------------------------------------------------\r\nWrite [(A)*256] \u0027Long-1\u0027 Half-Cycles (650 usec each); Then, Write a \u0027Short-0\u0027 Sync Bit, 2 Half-Cycles (200+250=450 usec/{1 cycle}); Normal (Not Short/Long) Half-Cycle Durations are 250 usec for a Zero-Bit \u0026 500 usec for a One-Bit\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Write Tape Synchronization Monotone:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19668":{
"Text":"             ---------------------- ;Finish with Sync Bit:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19685":{
"Text":"             ---------------------- ;Write (One Half-Cycle Only) to Tape:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19675":{
"Text":"                                    ;^[For Normal (250 usec) Half-Cycle]\r\n             ---------------------- ;Zero-Bit Delay Loop: Write a Half-Cycle\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19682":{
"Text":"                                    ;^[For Normal (250+250 usec) Half-Cycle]\r\n             ---------------------- ;One-Bit Delay Loop: Write a Half-Cycle\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19666":{
"Text":"                                    ;^[Add to Subtract: {C=1}+{$FE=(-2)}=(-1)]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19680":{
"Text":"                                    ;Else, Do a One-Bit, Add more Delay:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19690":{
"Text":"                                    ;^[Adds Time to 2nd WRBIT Zero-Bit Delay]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19670":{
"Text":"                                    ;^[For Sync Bit (200 usec) Half-Cycle]\r\n----------------------------------- ;Write a Bit (2 Half-Cycles) to Tape:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19659":{
"Text":"                                    ;^[For \u0027Long-1\u0027 (650 usec) Half-Cycles]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20214":{
"Text":"==============================================================================\r\n2nd End Of Internal Cassette Tape Write (Output) \u0026 Read (Input) Routines\r\n==============================================================================\r\n\r\n\r\n==============================================================================\r\nMonitor End Input (\"Carriage Return\") Command Handler: *\u003cSome Input\u003e\u003cCtrl-M\u003e\r\n==============================================================================\r\n\r\n----------------------------------- ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19692":{
"Text":"==============================================================================\r\nRead Byte Subroutine: Reads a Byte (8 Bits) from a Cassette Tape Record\r\n==============================================================================\r\nThe Duration between 2 Voltage Transitions from Tape determines whether a Bit is a Zero-Bit or a One-Bit; (Y) is used to Count this Period of Time; If it has Time to go Negative, the Duration is Longer, representing a One-Bit; If it does not go Negative, the Duration is Shorter, representing a Zero-Bit; Carry (C) is Set or Cleared, respectively, based on (Y), \u0026 Used to Rotate the Bit into the Accumulator (A); After 8 Bits, (A) represents a Byte Read from Tape\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19706":{
"Text":"==============================================================================\r\nRead Bits Subroutines: Read Voltage Transitions (2 or 1) from a Tape Record\r\n==============================================================================\r\n                        [See RDBYTE Description above]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Read 2 Transitions from Tape Record:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19709":{
"Text":"----------------------------------- ;Read 1 Transition from Tape Record:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20221":{
"Text":"\r\n==============================================================================\r\nMonitor READ from Audio Cassette Tape (\"R\") Command Handler: *Adrs1.Adrs2R\r\n==============================================================================\r\nReads Tape Records from Audio-in, placing the input into the memory range specified, then a one byte CheckSum\r\n------------------------------------------------------------------------------\r\nEnter with: (A1L,A1H)=($3C,$3D)=(Address of first Data Byte)\r\n            (A2L,A2H)=($3E,$3F)=(Address of  last Data Byte)\r\n------------------------------------------------------------------------------\r\n[See \"A2 Monitors Peeled\" pgs.81~84, TN/TIL# 495~496, \u0026 RDBYTE Description ^^]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20173":{
"Text":"\r\n==============================================================================\r\nMonitor WRITE to Audio Cassette Tape (\"W\") Command Handler: *Adrs1.Adrs2W\r\n==============================================================================\r\nWrites 10 second Header Monotone to Audio-Out, followed by a Synchronization Bit, then the contents of the memory specified, then a one byte CheckSum\r\n------------------------------------------------------------------------------\r\nEnter with: (A1L,A1H)=($3C,$3D)=(Address of first Data Byte)\r\n            (A2L,A2H)=($3E,$3F)=(Address of  last Data Byte)\r\n------------------------------------------------------------------------------\r\n[See \"A2 Monitors Peeled\" pgs.81~84, TN/TIL# 495~496, \u0026 RDBYTE Description ^^]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19700":{
"Text":"                                    ;\u0026 Discard Old (A) High Bit into Carry\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19715":{
"Text":"                                    ;\u003c\u003c\u003c LASTIN Unkown 1st time through! \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19736":{
"Text":"                                    ;Key Switch (KSW) Input Hook ...\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19759":{
"Text":"==============================================================================\r\nEscape Character Handler:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19765":{
"Text":"\r\n==============================================================================\r\nRead Character Subroutine: Read a Character into (A)\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19773":{
"Text":"==============================================================================\r\nNOTCR: Character Input is NOT a Carriage Return; \r\n       So, send it as Non Inverse Character to COUT\r\n==============================================================================\r\nReceives control w/ Character of Interest in Input Buffer at ($0200,X)\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19836":{
"Text":"                                    ;Else, Use Screen Char under Right-Arrow:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19875":{
"Text":"==============================================================================\r\nExamine Eight Routine: Prints \u003c= 8 Sequential Memory Locations Per Line in Hex\r\n==============================================================================\r\n\r\n----------------------------------- ;[Y-Reg Must Be Zero on Entry]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19910":{
"Text":"==============================================================================\r\n\"Is Monitor Mode: Examine, Add (Plus), or Subtract (Minus)?\" (XAMPM) Routine: \r\n==============================================================================\r\nFor Mode Commands: Address Range Delimiter (\".\"); Add (\"+\"); or Subtract (\"-\")\r\n[Command Characters are converted to Command Tokens during the Input Process!]\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19952":{
"Text":"==============================================================================\r\nEnd of Memory Dump Routines\r\n==============================================================================\r\n\r\n==============================================================================\r\nCharacter Output Routines:\r\n==============================================================================\r\nCOUT1 is usually the Target of the \"Character Switch (CSW)\" Output Hook/Vector\r\n------------------------------------------------------------------------------\r\nCOUT1: Write Byte in A-Reg to Display Screen at Current Cursor Position\r\n       [(CV),(CH)] using Inverse Flag Mask \u0026 supporting Cursor Move:\r\n------------------------------------------------------------------------------\r\nCOUTZ: Write Byte in A-Reg to Display Screen at Current Cursor Position\r\n       [(CV),(CH)] supporting Cursor Move but NOT using Inverse Flag Mask:\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20000":{
"Text":"==============================================================================\r\nEnd of More Memory Dump Routines:\r\n==============================================================================\r\n\r\n==============================================================================\r\nMonitor \"\u003c\" Move/Verify Delimiter\r\n==============================================================================\r\n\r\n----------------------------------- ;Copy A2 (2 bytes) to A4 \u0026 A5;\r\n                                    ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20012":{
"Text":"==============================================================================\r\nMonitor Move Memory (\"M\") Command Handler: *Adrs1\u003cAdrs2.Adrs3M\r\n==============================================================================\r\n\r\n----------------------------------- ;Copy/Move Bytes from (A1~A2),Y to (A4),Y;\r\n                                    ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20022":{
"Text":"==============================================================================\r\nMonitor Verify Memory (\"V\") Command Handler: *Adrs1\u003cAdrs2.Adrs3V\r\n==============================================================================\r\n\r\n----------------------------------- ;Verify Bytes from (A1~A2),Y with (A4),Y;\r\n                                    ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20062":{
"Text":"==============================================================================\r\nMonitor List (\"L\") Command Handler: *AdrsL\r\n==============================================================================\r\nDisassembles 20 Instructions per List (\"L\") Command [e.g., *AdrsLL; *LL; *LLL]\r\nIf User Specified an Address, then (X) is Not Zero (0) \u0026 should be One (1)!\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Disassemble 20 Instruction Lines;\r\n                                    ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20085":{
"Text":"==============================================================================\r\nCopy A1 (2 bytes) to PC if Specified (X=1):      [\u003c\u003c\u003c or Bug: if (0\u003eX\u003e1)! \u003e\u003e\u003e]\r\n==============================================================================\r\nIf User Specified an Address, then (X) is Not Zero (0) \u0026 should be One (1)!\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Copy A1 (2 bytes) to PC if Specified;\r\n                                    ;\u003c\u003c\u003c (X) must be (0|1) upon Entry \u003e\u003e\u003e:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20096":{
"Text":"==============================================================================\r\nMonitor Set Inverse Video (\"I\") Command Handler: Black Chr on White Background\r\n==============================================================================\r\n\r\n----------------------------------- ;Set Inverse Video;\r\n                                    ;Referenced via Subroutine Address Table:",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20105":{
"Text":"==============================================================================\r\nReset \"Key Switch (KSW)\" Input Vector to KEYIN ($FD1B):\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20115":{
"Text":"==============================================================================\r\nReset \"Character Switch (CSW)\" Output Vector to COUT1 ($FDF0):\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19972":{
"Text":"----------------------------------- ;Monitor Blank Space Command Handler;\r\n                                    ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20144":{
"Text":"\r\n==============================================================================\r\nMonitor Cold Start BASIC: (\"Ctrl-B\") Command Handler: *\u003cCtrl-B\u003e\u003cReturn\u003e\r\n==============================================================================\r\nJump to [Integer/Applesoft] BASIC [Hard/Cold/Control-B Entry Point (With Complete Reinitialization)]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20150":{
"Text":"==============================================================================\r\nMonitor Execute a Program (\"G\") Command Handler: *AdrsG\r\n==============================================================================\r\nJumps to Address Specified in Program Counter (PC) with 6502 Registers Restored from Save Area\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20159":{
"Text":"==============================================================================\r\nMonitor Display Registers (\"Ctrl-E\") Command Handler: *\u003cCtrl-E\u003e\r\n==============================================================================\r\nDisplay Current Values of A-Reg, X-Reg, Y-Reg, P-Reg, \u0026 S-Reg\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20287":{
"Text":"==============================================================================\r\nRestore (P), (A), (X), \u0026 (Y) Register Contents            [Used for Debugging]\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20298":{
"Text":"==============================================================================\r\nSave All 6502 Registers, Including Program Counter [(PCL,H)=($3A,$3B)]:\r\n==============================================================================\r\n\r\n\u003cUser Entry Point (Label Not Used)\u003e ;Save All Registers \u0026 Program Counter:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20313":{
"Text":"==============================================================================\r\nOld Reset Routine:\r\n==============================================================================\r\nMonitor \"Cold Start\" Entry Point [Referenced via Reset Vector]: All Resets are Vectored here; Sets Normal Text Screen Mode \u0026 Initializes Keyboard \u0026 Screen as the I/O Devices\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Referenced via Interrupt Vector Table:\r\n                                    ;\u003c\u003c BUG: OLDRST Vector ($FF59) IS Wrong \u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20362":{
"Text":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\u003c\u003c\u003c ZMODE is NOT HERE (above) at $FF7C!  ZMODE is actually at $FFC7!  The $FF7C address, as documented in Luebbert\u0027s \"What\u0027s Where in The Apple\", is incorrect.  He mistakenly transposed the last two hexadecimal digits of the real $FFC7 address to get $FF7C.  [Or, was it on purpose, to confuse the enemy during the cold war?  IIRC, Luebbert was a professor at Anapolis then.] \u003e\u003e\u003e\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n==============================================================================\r\nHexadecimal Digit Shifter:\r\n==============================================================================\r\nBit Map: \u003c- (A2H)=(%ABCD,EFGH); \u003c- (A2L)=(%IJKL,MNOP); \u003c- (A)=(%QRST,UVWX) \u003c-\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20391":{
"Text":"==============================================================================\r\nMonitor Command Parser: Gets a Hexadecimal Digits from the Input Buffer\r\n==============================================================================\r\nGet a Character from Input Buffer; If it is a Hexadecimal Digit, Branch to Digit; Else, Return to Caller\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20414":{
"Text":"\r\n==============================================================================\r\nMonitor Command Found; Push \u0026 Return to Corresponding Subroutine:\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19854":{
"Text":"\r\n==============================================================================\r\nPrint Carriage Return: Display Screen Scroll Window Output Routine\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19885":{
"Text":"----------------------------------- ;Modulus Check [(Adrs)MOD(8 Bytes)=(0)?]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19894":{
"Text":"----------------------------------- ;Print Output Data to Output Device:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19919":{
"Text":"                                    ;Else [A*:Bit 2 was 1] Do SUBTRACT (Minus)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19891":{
"Text":"** Main Memory Dump Entry Point **  ;Examine Memory from (A1L,H) to (A2L,H):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19913":{
"Text":"                                    ;^[Examine Memory from (A1L,H) to (A2L,H)]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19939":{
"Text":"\u003cUser Entry Point (Label Not Used)\u003e ;Print Low Nibble as Hex Number [0~9,A~F]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19949":{
"Text":"\r\n==============================================================================\r\nDisplay Screen Scroll Window Output Routines:\r\n==============================================================================\r\n\r\n==============================================================================\r\nCharacter Output Routine: Jump (Indirectly via Vector) to User Output Routine\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19992":{
"Text":"==============================================================================\r\nMonitor Mode Commands Handler:\r\n==============================================================================\r\nSubtract (\"-\"), Add (\"+\"), Fill Memory (\":\"), or Address Range Delimiter (\".\")\r\n[Command Characters are converted to Command Tokens during the Input Process!]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Mode (\"-\"|\"+\"|\":\"|\".\") Commands Handler;\r\n                                    ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19999":{
"Text":"----------------------------------- ;JSR here to determine where one is:\r\n\u003cUser Entry Point (Label Not Used)\u003e ;[A JSR to an RTS STACKs Current Address]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20028":{
"Text":"----------------------------------- ;Else, Verify Failed:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20056":{
"Text":"----------------------------------- ;Verify Succeeded; Do Next Byte:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20088":{
"Text":"                                    ;\u003c\u003c\u003c Catastrophic to A1~ if (0\u003eX\u003e1) \u003e\u003e\u003e:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20104":{
"Text":"                                    ;^[Normal  = $FF = %11111111: N=%1 \u0026 V=%1]\r\n                                    ;^[Flash   = $7F = %01111111: N=%0 \u0026 V=%1]\r\n                                    ;^[Inverse = $3F = %00111111: N=%0 \u0026 V=%0]",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20100":{
"Text":"==============================================================================\r\nMonitor Set Normal Video (\"N\") Command Handler: White Chr on Black Background\r\n==============================================================================\r\n\r\n----------------------------------- ;Set Normal Video;\r\n                                    ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20102":{
"Text":"----------------------------------- ;Set Inverse Flag (from Y-Reg):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20123":{
"Text":"\r\n==============================================================================\r\nSet Input/Output Vector (Port/Slot):\r\n==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20137":{
"Text":"                                    ;^[KEYIN ($FD1B) \u0026 COUT1 ($FDF0) S/Rs]\r\n\u003c*** A Great User Entry Point! ***\u003e ;Set Any 2 Byte ZP Location Based on (X);\r\n                                    ;LOC0: Preset to JMP OpCode ($4C); (X=1):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20142":{
"Text":"==============================================================================\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20119":{
"Text":"\r\n==============================================================================\r\nMonitor Set PR# Slot (\"Ctrl+P\") Command Handler: *\u003cSlot# {0~7}\u003e\u003cCtrl+P\u003e\r\n==============================================================================\r\n\r\n----------------------------------- ;Set PR# Slot (\"Ctrl+P\");\r\n                                    ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20109":{
"Text":"\r\n==============================================================================\r\nMonitor Set IN# Slot (\"Ctrl+K\") Command Handler: *\u003cSlot# {0~7}\u003e\u003cCtrl+K\u003e\r\n==============================================================================\r\n\r\n----------------------------------- ;Set IN# Slot (\"Ctrl-K\"); \r\n                                    ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20147":{
"Text":"\r\n==============================================================================\r\nMonitor Warm Start BASIC: (\"Ctrl-C\") Command Handler: *\u003cCtrl-C\u003e\u003cReturn\u003e\r\n==============================================================================\r\nJump to [Integer/Applesoft] BASIC [Soft/Warm/Control-C Entry Point (Without Reinitialization of Symbol-Table, Variables or Data)]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20153":{
"Text":"             ---------------------- ;\u003cUndocumented User Entry Point\u003e:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20156":{
"Text":"             ---------------------- ;\u003cUndocumented User Entry Point\u003e:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20165":{
"Text":"----------------------------------- ;Referenced via Subroutine Address Table:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20175":{
"Text":"                                    ;^[For \u0027Long-1\u0027 (650 usec) Half-Cycles]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20178":{
"Text":"                                    ;^[A-Reg, X-Reg \u0026 Y-Reg are Altered!]\r\n             ---------------------- ;Write Memory Data to Cassette Tape Record\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20198":{
"Text":"             ---------------------- ;Write CheckSum to Cassette Tape Record\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20329":{
"Text":"\r\n==============================================================================\r\nMonitor \"Warm Start\" (\"Silent Reset\") Entry Point (from BASIC):\r\n==============================================================================\r\nSets Monitor \"Star\" (\u0027*\u0027) Prompt \u0026 Reads a Line of User Input\r\n[See also, \"The 3D0G (3-Dog-Night) Command Returns A User To Basic\"]\r\n------------------------------------------------------------------------------\r\n\r\n----------------------------------- ;Restart Monitor (\"*\" Prompt) Silently:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20325":{
"Text":"\r\n==============================================================================\r\nMonitor \"Warm Start\" (\"Loud Reset\") Entry Point: Sets Hexadecimal Mode \u0026 Beeps\r\n==============================================================================\r\n\r\n----------------------------------- ;Restart Monitor (\"*\" Prompt) Loudly:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20226":{
"Text":"                                    ;^[For \u0027Long-1\u0027 (650 usec) Half-Cycles]\r\n----------------------------------- ;Entry Point to Read Shape Table\r\n\u003c\u003c\u003c DANGEROUS if Accidentally Tape Recording instead of Playing Tape!  But,\r\nfor a Program Tape, Accidentally Recording would be BAD all by itself! \u003e\u003e\u003e:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20229":{
"Text":"                                    ;Writes 3.7 second Header [3,660,800 usec]\r\n                                    ;^[A-Reg, X-Reg \u0026 Y-Reg are Altered!]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20234":{
"Text":"                                    ;Find \u0027Short-0\u0027 Sync Bit:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20269":{
"Text":"\u003cUser Entry Point (Label Not Used)\u003e ;Print \"ERR\" \u0026 Bell to Outpud Device:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20300":{
"Text":"----------------------------------- ;Save Registers on Break Entry Point:\r\n                                    ;\u003c\u003c\u003c BUG: SAV1 Does Not Save A-Reg! \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20312":{
"Text":"----------------------------------- ;JSR here to determine where one is:\r\n                                    ;[A JSR to an RTS STACKs Current Address]\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20336":{
"Text":"\u003cUser Entry Point (Label Not Used)\u003e ;Scan IDX [Input Buffer ($200..$2FF)?]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20423":{
"Text":"----------------------------------- ;Clear/Zero Monitor Mode:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20339":{
"Text":"----------------------------------- ;Process Monitor Commands; Get Next Item:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20346":{
"Text":"----------------------------------- ;Search Character Table (Loop)\r\n                                    ;^[Used to Decode Keyboard Input]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20409":{
"Text":"                                    ;[($88)+(\"A\"=$C1)+(C=1)]=($14A)-\u003e(C=1)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20411":{
"Text":"                                    ;[($4A)]-($FA=\"z\")=($50)] [A\u003cData];\r\n                                    ; But (C=1) remains unchaged, so ...\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20373":{
"Text":"                                    ;(Discards A2H Hi Nib); (A2H)=(%EFGH,IJKL)",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20376":{
"Text":"                                    ;^[Leaves (X)=($FF)=(-1) \u0026 (A=0)]\r\n------------------------------------------------------------------------------\r\nNote: If (0\u003c=X\u003c=$80) upon entry, NXTBIT could shift up to 128 bits left through A2 but, only the last 16 bits would be retained!\r\n------------------------------------------------------------------------------\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20421":{
"Text":"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nThis confirms the order of the return address pushed onto the stack during a subroutine call (JSR); the high-order subroutine address is pushed 1st and the low-order subroutine address is pushed 2nd (so, reverse order when pulling)\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"20416":{
"Text":"                                    ; Referenced via Subroutine Address Table\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9554":{
"Text":"                      ^^^^^^^^^^^   ;Why does this display this way?\r\n                                    ;It should be minus one!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"9624":{
"Text":"                      ^^^^^^^^^^^^  ;Why does this display this way?\r\n                                    ;It should be minus one!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"10050":{
"Text":"                      ^^^^^^^^^^^^  ;Why does this display this way?\r\n                                    ;It should be minus one!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"11293":{
"Text":"                      ^^^^^^^^^^^   ;Why does this display this way?\r\n                                    ;It should be minus one!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"12566":{
"Text":"                    --------------- ;[See above: \"BUG in Constant NEG32768\"]:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13233":{
"Text":"\u003c\u003c\u003c Why No Count Down Loop here, too; Inverted as in SAVOLD above? \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"13261":{
"Text":"\u003c\u003c\u003c How do we know there wasn\u0027t a collision with the Top of the Stack? \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15710":{
"Text":"                    ^^^^^---------- ;\u003c\u003c\u003c Because of bug in FMULT, ... \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16073":{
"Text":"                    ^^^^^---------- ;\u003c\u003c\u003c Because of bug in FMULT, ... \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16144":{
"Text":"                    ^^^^^---------- ;\u003c\u003c\u003c Because of bug in FMULT, EXP(x) is\r\n                                    ;off for approximately 1\u003cx\u003c1.00000012 and\r\n                                    ;many other values; e.g., near any integer\r\n                                    ;(not too large), half integer, etc. \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16232":{
"Text":"                    ^^^^^---------- ;\u003c\u003c\u003c Because of bug in FMULT, ... \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16239":{
"Text":"                    --------------- ;\u003c\u003c\u003c Because of bug in FMULT, ... \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15343":{
"Text":"\u003c\u003c\u003c ====================================================================== \u003e\u003e\u003e\r\n\u003c\u003c\u003c Above three lines can be shortened:                                    \u003e\u003e\u003e\r\n\u003c\u003c\u003c ---------------------------------------------------------------------- \u003e\u003e\u003e\r\n\u003c\u003c\u003c FCFINISH ROR                    ;Put Carry into Sign Bit               \u003e\u003e\u003e\r\n\u003c\u003c\u003c          EOR    FAC_SIGN        ;Toggle with Sign of FAC               \u003e\u003e\u003e\r\n\u003c\u003c\u003c ====================================================================== \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15518":{
"Text":"\u003c\u003c\u003c ====================================================================== \u003e\u003e\u003e\r\n\u003c\u003c\u003c There should be a jump to to error here!  Multiple decimal points give \u003e\u003e\u003e\r\n\u003c\u003c\u003c strange results in PRINT statements.  Variable assignments correctly   \u003e\u003e\u003e\r\n\u003c\u003c\u003c give syntax errors; e.g., \"A=11..22\" will give a syntax error, because \u003e\u003e\u003e\r\n\u003c\u003c\u003c it is two numbers with no operator in between.  But, in a numeric      \u003e\u003e\u003e\r\n\u003c\u003c\u003c string, a second decimal point is taken as a terminator; e.g.,         \u003e\u003e\u003e\r\n\u003c\u003c\u003c \"PRINT 11..22\" gives no error, because it is just the concatenation of \u003e\u003e\u003e\r\n\u003c\u003c\u003c two numbers.                                                           \u003e\u003e\u003e\r\n\u003c\u003c\u003c ====================================================================== \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15565":{
"Text":"\u003c\u003c\u003c Shorter here to just \"AND #$0F\" to Convert ASCII to Binary Form: \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"15619":{
"Text":"\u003c\u003c\u003c Shorter here to just \"AND #$0F\" to Convert ASCII to Binary Form: \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16132":{
"Text":"\u003c\u003c Is this a BUG?  {POLY_EXP_L2 == ln(2)+(0.5E-8)} \u003c\u003e {CON_LOGTWO == ln(2)} \u003e\u003e\r\n\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16183":{
"Text":"\u003c\u003c\u003c Why Swap?  It\u0027s doing -(A-B) when (B-A) is the same thing! \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16219":{
"Text":"\u003c\u003c\u003c Wasted byte here (below), could have just jumped there (above) \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16322":{
"Text":"                    --------------- ;\u003c\u003c\u003c BUG: Constants are Truncated \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16329":{
"Text":"                    --------------- ;\u003c\u003c\u003c BUG: Constants are Truncated; \u0026 Due\r\n                                    ;to Small Exponent, JSR Does Nothing: \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16391":{
"Text":"\u003c\u003c\u003c Wasted lines (above), because FSUBT (below) changes SGNCPR again! \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16398":{
"Text":"\u003c\u003c\u003c There are much simpler ways to do this! \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16456":{
"Text":"\u003c\u003c\u003c A Strange Way to Call FACRND2XY! \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16472":{
"Text":"\u003c\u003c\u003c A \"Weird \u0026 Dangerous Way [Why?] to Get into SIN\" -- BS-C \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16482":{
"Text":"\u003c\u003c\u003c Shame, Shame! -- BS-C\r\n    Why not just put this \u0027in-line\u0027 above with a JSR instead of JMP? \u003e\u003e\u003e",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"16722":{
"Text":"\u003c\u003c\u003c BUG: Should be COLD_START-GENCHRGET=$1D=29!  Includes RND_SEED! \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18412":{
"Text":"\u003c\u003c\u003c If WNDLFT \u003c\u003e (0), HTAB can Print Outside of Screen, within Program! \u003e\u003e\u003e\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18536":{
"Text":"--\u003cUndocumented User Entry Point\u003e-- ;Shift Low Nibble to High Nibble:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"18555":{
"Text":"--\u003cUndocumented User Entry Point\u003e-- ;Shift High Nibble to Low Nibble:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19789":{
"Text":"--\u003cUndocumented User Entry Point\u003e-- ;Backspace or Cancel Check: \r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19800":{
"Text":"--\u003cUndocumented User Entry Point\u003e-- ;Margin Check:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19802":{
"Text":"--\u003cUndocumented User Entry Point\u003e-- ;Wait for Next Char or a Carriage Return:\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19804":{
"Text":"--\u003cUndocumented User Entry Point\u003e-- ;Sound Warning Bell \u0026 Wait (as above):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19865":{
"Text":"--\u003cUndocumented User Entry Point\u003e-- ;Sound Warning Bell \u0026 Wait (as above):\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0},

"19964":{
"Text":"--\u003cUndocumented User Entry Point\u003e-- ;Restore A-Reg \u0026 Y-Reg (frm STACK \u0026 YSAV1)\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":0}},

"Notes":{
"14617":{
"Text":"Packed FAC Constants or Not?  Still a Mystery!\r\n",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":-18751},

"16590":{
"Text":"Polynomial ATN Coeficients?  Still a Mystery!",
"BoxMode":false,
"MaxWidth":80,
"BackgroundColor":-18751}},

"UserLabels":{
"18432":{
"Label":"MON_PLOT",
"Value":63488,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5632":{
"Label":"DISK2ROM",
"Value":50688,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12095":{
"Label":"UNARY2",
"Value":57151,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4352":{
"Label":"SLOT1",
"Value":49408,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4608":{
"Label":"SLOT2",
"Value":49664,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4864":{
"Label":"SLOT3",
"Value":49920,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5120":{
"Label":"SLOT4",
"Value":50176,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5376":{
"Label":"SLOT5",
"Value":50432,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20313":{
"Label":"OLDRST",
"Value":65369,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19008":{
"Label":"IRQ",
"Value":64064,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19020":{
"Label":"BREAK",
"Value":64076,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19033":{
"Label":"OLDBRK",
"Value":64089,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19042":{
"Label":"RESET",
"Value":64098,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18444":{
"Label":"RTMASK",
"Value":63500,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18446":{
"Label":"PLOT1",
"Value":63502,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18457":{
"Label":"HLINE",
"Value":63513,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18460":{
"Label":"HLINE1",
"Value":63516,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18470":{
"Label":"VLINEZ",
"Value":63526,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18472":{
"Label":"VLINE",
"Value":63528,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18481":{
"Label":"MON_RTS1",
"Value":63537,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18503":{
"Label":"GBASCALC",
"Value":63559,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18482":{
"Label":"CLRSCR",
"Value":63538,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18488":{
"Label":"CLRSCR2",
"Value":63544,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18492":{
"Label":"CLRSCR3",
"Value":63548,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18486":{
"Label":"CLRTOP",
"Value":63542,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18518":{
"Label":"GBCALC",
"Value":63574,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18545":{
"Label":"SCRN",
"Value":63601,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18553":{
"Label":"SCRN2",
"Value":63609,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18559":{
"Label":"RTMSKZ",
"Value":63615,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18532":{
"Label":"SETCOL",
"Value":63588,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18562":{
"Label":"INSDS1",
"Value":63618,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19862":{
"Label":"PRYX2",
"Value":64918,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18760":{
"Label":"PRBLNK",
"Value":63816,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18587":{
"Label":"IEVEN",
"Value":63643,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18597":{
"Label":"ERR",
"Value":63653,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18786":{
"Label":"FMT1",
"Value":63842,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18601":{
"Label":"GETFMT",
"Value":63657,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18854":{
"Label":"FMT2",
"Value":63910,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18633":{
"Label":"MNNDX3",
"Value":63689,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18622":{
"Label":"MNNDX1",
"Value":63678,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18626":{
"Label":"MNNDX2",
"Value":63682,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18640":{
"Label":"INSTDSP",
"Value":63696,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18644":{
"Label":"PRNTOP",
"Value":63700,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18651":{
"Label":"PRNTBL",
"Value":63707,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19930":{
"Label":"PRBYTE",
"Value":64986,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18762":{
"Label":"PRBL2",
"Value":63818,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18880":{
"Label":"MNEML",
"Value":63936,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18944":{
"Label":"MNEMR",
"Value":64000,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18677":{
"Label":"NXTCOL",
"Value":63733,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18681":{
"Label":"PRMN2",
"Value":63737,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19949":{
"Label":"COUT",
"Value":65005,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18736":{
"Label":"PRADR5",
"Value":63792,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18704":{
"Label":"PRADR1",
"Value":63760,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18708":{
"Label":"PRADR2",
"Value":63764,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18726":{
"Label":"PRADR3",
"Value":63782,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18730":{
"Label":"PRADR4",
"Value":63786,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18868":{
"Label":"CHAR1",
"Value":63924,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19162":{
"Label":"RGDSP1",
"Value":64218,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20300":{
"Label":"SAV1",
"Value":65356,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18874":{
"Label":"CHAR2",
"Value":63930,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18744":{
"Label":"RELADR",
"Value":63800,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18774":{
"Label":"PCADJ3",
"Value":63830,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18752":{
"Label":"PRNTYX",
"Value":63808,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18753":{
"Label":"PRNTAX",
"Value":63809,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18756":{
"Label":"PRNTX",
"Value":63812,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18764":{
"Label":"PRBL3",
"Value":63820,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18771":{
"Label":"PCADJ",
"Value":63827,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18772":{
"Label":"PCADJ2",
"Value":63828,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18780":{
"Label":"PCADJ4",
"Value":63836,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18785":{
"Label":"MON_RTS2",
"Value":63841,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18527":{
"Label":"NEXTCOLOR",
"Value":63583,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18574":{
"Label":"INSDS2",
"Value":63630,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8156":{
"Label":"JMPADRTBL",
"Value":53212,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16853":{
"Label":"CALL",
"Value":61909,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10086":{
"Label":"FOR",
"Value":55142,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5888":{
"Label":"SLOT7",
"Value":50944,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8191":{
"Label":"CLRROM",
"Value":53247,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11519":{
"Label":"VARNXT",
"Value":56575,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10645":{
"Label":"DATA",
"Value":55701,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17201":{
"Label":"DEL",
"Value":62257,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12249":{
"Label":"DIM",
"Value":57305,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11234":{
"Label":"BAS_READ",
"Value":56290,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17296":{
"Label":"GR",
"Value":62352,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8198":{
"Label":"TA_DATA",
"Value":53254,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16869":{
"Label":"PR_NUMBER",
"Value":61925,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16862":{
"Label":"IN_NUMBER",
"Value":61918,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17046":{
"Label":"JMM",
"Value":62102,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17378":{
"Label":"HGR",
"Value":62434,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17425":{
"Label":"HPOSN",
"Value":62481,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18215":{
"Label":"SCALE",
"Value":63271,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18174":{
"Label":"HPLOT",
"Value":63230,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14203":{
"Label":"POKE",
"Value":59259,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8194":{
"Label":"TA_FOR",
"Value":53250,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18209":{
"Label":"ROT",
"Value":63265,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18241":{
"Label":"DRWPTR1",
"Value":63297,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18407":{
"Label":"HTAB",
"Value":63463,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8196":{
"Label":"TA_NEXT",
"Value":53252,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10602":{
"Label":"BAS_RTS07",
"Value":55658,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17030":{
"Label":"HIMEM",
"Value":62086,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17176":{
"Label":"RESUME",
"Value":62232,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17340":{
"Label":"RECALL",
"Value":62396,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13075":{
"Label":"DEF",
"Value":58131,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10529":{
"Label":"GOSUB",
"Value":55585,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10729":{
"Label":"JGOCMD",
"Value":55785,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10740":{
"Label":"ONGOTOK",
"Value":55796,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10415":{
"Label":"BAS_RTS06",
"Value":55471,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13070":{
"Label":"UNDFNCERR",
"Value":58126,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10959":{
"Label":"PRSTR",
"Value":56015,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10313":{
"Label":"RESTORE",
"Value":55369,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9800":{
"Label":"BAS_RTS02",
"Value":54856,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15248":{
"Label":"SGN",
"Value":60304,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15395":{
"Label":"INT",
"Value":60451,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15279":{
"Label":"ABS",
"Value":60335,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13022":{
"Label":"FRE",
"Value":58078,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9234":{
"Label":"ERROR",
"Value":54290,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12237":{
"Label":"PDL",
"Value":57293,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13055":{
"Label":"POS",
"Value":58111,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16013":{
"Label":"SQR",
"Value":61069,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16302":{
"Label":"RND",
"Value":61358,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14657":{
"Label":"LOG",
"Value":59713,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16137":{
"Label":"EXP",
"Value":61193,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16362":{
"Label":"COS",
"Value":61418,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16369":{
"Label":"SIN",
"Value":61425,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16442":{
"Label":"TAN",
"Value":61498,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16542":{
"Label":"ATN",
"Value":61598,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14180":{
"Label":"PEEK",
"Value":59236,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14038":{
"Label":"LEN",
"Value":59094,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13253":{
"Label":"STR",
"Value":58309,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14087":{
"Label":"VAL",
"Value":59143,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14053":{
"Label":"ASC",
"Value":59109,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13894":{
"Label":"CHRSTR",
"Value":58950,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13914":{
"Label":"LEFTSTR",
"Value":58970,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13958":{
"Label":"RIGHTSTR",
"Value":59014,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13969":{
"Label":"MIDSTR",
"Value":59025,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8370":{
"Label":"MO_ADD",
"Value":53426,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8192":{
"Label":"TA_END",
"Value":53248,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8320":{
"Label":"TA_SGN",
"Value":53376,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8400":{
"Label":"TN_END",
"Value":53456,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8800":{
"Label":"NOFOR_ERR",
"Value":53856,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9061":{
"Label":"GETFORPTR",
"Value":54117,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9066":{
"Label":"FORFRAME",
"Value":54122,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9087":{
"Label":"SAMEVARPTR",
"Value":54143,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9099":{
"Label":"NEXTFRAME",
"Value":54155,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9106":{
"Label":"BAS_RTS00",
"Value":54162,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9107":{
"Label":"MVBLKUP1",
"Value":54163,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9114":{
"Label":"MVBLKUP2",
"Value":54170,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9143":{
"Label":"MVBKPHDA",
"Value":54199,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9155":{
"Label":"DOMVBLKUP1",
"Value":54211,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9159":{
"Label":"DOMVBLKUP2",
"Value":54215,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9166":{
"Label":"NXTMVBLKUP",
"Value":54222,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9187":{
"Label":"REASON",
"Value":54243,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9174":{
"Label":"CHKMEM",
"Value":54230,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9040":{
"Label":"QT_ERROR",
"Value":54096,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9048":{
"Label":"QT_IN",
"Value":54104,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9053":{
"Label":"QT_BREAK",
"Value":54109,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"7678":{
"Label":"SLTVTAB",
"Value":52734,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8019":{
"Label":"SLTGOERR",
"Value":53075,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"6144":{
"Label":"ALLSLOTS",
"Value":51200,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5638":{
"Label":"MKDCTBL",
"Value":50694,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5652":{
"Label":"CHKDBL0S",
"Value":50708,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5662":{
"Label":"REJECT",
"Value":50718,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20312":{
"Label":"IORTS",
"Value":65368,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5693":{
"Label":"FINDT0S0",
"Value":50749,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5724":{
"Label":"RDSECT",
"Value":50780,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5725":{
"Label":"RDSECT0",
"Value":50781,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5726":{
"Label":"RDSECT1",
"Value":50782,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5731":{
"Label":"RDSECT2",
"Value":50787,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5735":{
"Label":"RDSECT3",
"Value":50791,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5745":{
"Label":"RDSECT4",
"Value":50801,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5763":{
"Label":"RDSAD",
"Value":50819,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5765":{
"Label":"RDSAD1",
"Value":50821,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5767":{
"Label":"RDSAD2",
"Value":50823,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5775":{
"Label":"RDSAD3",
"Value":50831,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5798":{
"Label":"RDF62ESD",
"Value":50854,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5800":{
"Label":"RDTWOS",
"Value":50856,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5818":{
"Label":"RDSIXES",
"Value":50874,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5802":{
"Label":"RDTWOS1",
"Value":50858,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5820":{
"Label":"RDSIXES1",
"Value":50876,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5835":{
"Label":"RDCHKSUM",
"Value":50891,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5843":{
"Label":"RDF62ESDX",
"Value":50899,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5847":{
"Label":"DCD62ENC",
"Value":50903,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"5849":{
"Label":"DCD62ENC1",
"Value":50905,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"1792":{
"Label":"MTSPC2",
"Value":46848,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"0":{
"Label":"MTSPC1",
"Value":45056,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10603":{
"Label":"POPRTN",
"Value":55659,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8391":{
"Label":"MO_UMNS_GTLT",
"Value":53447,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8394":{
"Label":"MO_UNOT_EQUL",
"Value":53450,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8397":{
"Label":"MO_UPLS_LTGT",
"Value":53453,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9241":{
"Label":"DOERRMSG",
"Value":54297,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9247":{
"Label":"PRERRMSG",
"Value":54303,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9265":{
"Label":"PRERRLINO",
"Value":54321,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9276":{
"Label":"RESTART",
"Value":54332,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8816":{
"Label":"SYNTAXERR",
"Value":53872,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8822":{
"Label":"NOGOSUBERR",
"Value":53878,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8842":{
"Label":"NODATAERR",
"Value":53898,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8853":{
"Label":"ILLQTYERR",
"Value":53909,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8869":{
"Label":"OVERFLOWERR",
"Value":53925,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8877":{
"Label":"MEMFULLERR",
"Value":53933,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8890":{
"Label":"UNDEFSTATERR",
"Value":53946,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8907":{
"Label":"BADSUBSERR",
"Value":53963,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8920":{
"Label":"REDIMDERR",
"Value":53976,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8933":{
"Label":"ZERODIVERR",
"Value":53989,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8949":{
"Label":"ILLDIRERR",
"Value":54005,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8963":{
"Label":"BADTYPEERR",
"Value":54019,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8976":{
"Label":"STRLONGERR",
"Value":54032,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8991":{
"Label":"FRMCPXERR",
"Value":54047,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9010":{
"Label":"CANTCONTERR",
"Value":54066,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9024":{
"Label":"UNDEFFUNCERR",
"Value":54080,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9878":{
"Label":"BAS_RTS03",
"Value":54934,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9829":{
"Label":"SETPTRS",
"Value":54885,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9836":{
"Label":"CLEARC",
"Value":54892,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9859":{
"Label":"STKINI",
"Value":54915,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9803":{
"Label":"SCRTCH",
"Value":54859,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9801":{
"Label":"NEW",
"Value":54857,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10306":{
"Label":"COLONQ",
"Value":55362,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10245":{
"Label":"TRACEQ",
"Value":55301,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10310":{
"Label":"SYNERR",
"Value":55366,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9754":{
"Label":"FNDLIN",
"Value":54810,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9758":{
"Label":"FNDLIN2",
"Value":54814,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9781":{
"Label":"FL_CHKLO",
"Value":54837,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9790":{
"Label":"FL_NXTLIN",
"Value":54846,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9799":{
"Label":"FL_NOTFND",
"Value":54855,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11977":{
"Label":"SYNERROR",
"Value":57033,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10328":{
"Label":"ISCTRLCH",
"Value":55384,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10336":{
"Label":"GETLOWKEY",
"Value":55392,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10348":{
"Label":"ISCTRLCL",
"Value":55404,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10339":{
"Label":"ISONERRON",
"Value":55395,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17129":{
"Label":"ERRHNDLR",
"Value":62185,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9232":{
"Label":"MEMERR",
"Value":54288,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9231":{
"Label":"BAS_RTS01",
"Value":54287,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9197":{
"Label":"MAXFRESPC",
"Value":54253,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9201":{
"Label":"PUSHNINE",
"Value":54257,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9212":{
"Label":"PULLNINE",
"Value":54268,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8200":{
"Label":"TA_INPUT",
"Value":53256,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8202":{
"Label":"TA_DEL",
"Value":53258,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8204":{
"Label":"TA_DIM",
"Value":53260,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8206":{
"Label":"TA_READ",
"Value":53262,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8208":{
"Label":"TA_GR",
"Value":53264,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8210":{
"Label":"TA_TEXT",
"Value":53266,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8212":{
"Label":"TA_PR",
"Value":53268,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8214":{
"Label":"TA_IN",
"Value":53270,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8216":{
"Label":"TA_CALL",
"Value":53272,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8218":{
"Label":"TA_PLOT",
"Value":53274,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8220":{
"Label":"TA_HLIN",
"Value":53276,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8222":{
"Label":"TA_VLIN",
"Value":53278,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8224":{
"Label":"TA_HGR2",
"Value":53280,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8226":{
"Label":"TA_HGR",
"Value":53282,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8228":{
"Label":"TA_HCOLOR",
"Value":53284,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8230":{
"Label":"TA_HPLOT",
"Value":53286,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8232":{
"Label":"TA_DRAW",
"Value":53288,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8234":{
"Label":"TA_XDRAW",
"Value":53290,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8236":{
"Label":"TA_HTAB",
"Value":53292,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8238":{
"Label":"TA_HOME",
"Value":53294,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8240":{
"Label":"TA_ROT",
"Value":53296,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8242":{
"Label":"TA_SCALE",
"Value":53298,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8244":{
"Label":"TA_SHLOAD",
"Value":53300,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8246":{
"Label":"TA_TRACE",
"Value":53302,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8248":{
"Label":"TA_NOTRACE",
"Value":53304,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8250":{
"Label":"TA_NORMAL",
"Value":53306,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8252":{
"Label":"TA_INVERSE",
"Value":53308,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8254":{
"Label":"TA_FLASH",
"Value":53310,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8256":{
"Label":"TA_COLOR",
"Value":53312,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8258":{
"Label":"TA_POP",
"Value":53314,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8260":{
"Label":"TA_VTAB",
"Value":53316,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8262":{
"Label":"TA_HIMEM",
"Value":53318,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8264":{
"Label":"TA_LOMEM",
"Value":53320,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8266":{
"Label":"TA_ONERR",
"Value":53322,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8268":{
"Label":"TA_RESUME",
"Value":53324,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8270":{
"Label":"TA_RECALL",
"Value":53326,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8272":{
"Label":"TA_STORE",
"Value":53328,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8274":{
"Label":"TA_SPEED",
"Value":53330,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8276":{
"Label":"TA_LET",
"Value":53332,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8278":{
"Label":"TA_GOTO",
"Value":53334,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8280":{
"Label":"TA_RUN",
"Value":53336,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8282":{
"Label":"TA_IF",
"Value":53338,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8284":{
"Label":"TA_RESTORE",
"Value":53340,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8286":{
"Label":"TA_AMPERV",
"Value":53342,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8288":{
"Label":"TA_GOSUB",
"Value":53344,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8290":{
"Label":"TA_RETURN",
"Value":53346,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8292":{
"Label":"TA_REM",
"Value":53348,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8294":{
"Label":"TA_STOP",
"Value":53350,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8296":{
"Label":"TA_ONGOTO",
"Value":53352,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8298":{
"Label":"TA_WAIT",
"Value":53354,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8300":{
"Label":"TA_LOAD",
"Value":53356,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8302":{
"Label":"TA_SAVE",
"Value":53358,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8304":{
"Label":"TA_DEF",
"Value":53360,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8306":{
"Label":"TA_POKE",
"Value":53362,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8308":{
"Label":"TA_PRINT",
"Value":53364,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8310":{
"Label":"TA_CONT",
"Value":53366,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8312":{
"Label":"TA_LIST",
"Value":53368,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8314":{
"Label":"TA_CLEAR",
"Value":53370,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8316":{
"Label":"TA_GET",
"Value":53372,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8318":{
"Label":"TA_NEW",
"Value":53374,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8322":{
"Label":"TA_INT",
"Value":53378,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8324":{
"Label":"TA_ABS",
"Value":53380,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8326":{
"Label":"TA_USR",
"Value":53382,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8328":{
"Label":"TA_FRE",
"Value":53384,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8330":{
"Label":"TA_ERROR",
"Value":53386,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8332":{
"Label":"TA_PDL",
"Value":53388,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8334":{
"Label":"TA_POS",
"Value":53390,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8336":{
"Label":"TA_SQR",
"Value":53392,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8338":{
"Label":"TA_RND",
"Value":53394,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8340":{
"Label":"TA_LOG",
"Value":53396,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8342":{
"Label":"TA_EXP",
"Value":53398,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8344":{
"Label":"TA_COS",
"Value":53400,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8346":{
"Label":"TA_SIN",
"Value":53402,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8348":{
"Label":"TA_TAN",
"Value":53404,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8350":{
"Label":"TA_ATN",
"Value":53406,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8352":{
"Label":"TA_PEEK",
"Value":53408,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8354":{
"Label":"TA_LEN",
"Value":53410,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8356":{
"Label":"TA_STR",
"Value":53412,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8358":{
"Label":"TA_VAL",
"Value":53414,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8360":{
"Label":"TA_ASC",
"Value":53416,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8362":{
"Label":"TA_CHR",
"Value":53418,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8364":{
"Label":"TA_LEFT",
"Value":53420,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8366":{
"Label":"TA_RIGHT",
"Value":53422,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8368":{
"Label":"TA_MID",
"Value":53424,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8373":{
"Label":"MO_SUB",
"Value":53429,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8376":{
"Label":"MO_MUL",
"Value":53432,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8379":{
"Label":"MO_DIV",
"Value":53435,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8382":{
"Label":"MO_PWR",
"Value":53438,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8385":{
"Label":"MO_AND",
"Value":53441,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8388":{
"Label":"MO_OR",
"Value":53444,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8403":{
"Label":"TN_FOR",
"Value":53459,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8406":{
"Label":"TN_NEXT",
"Value":53462,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8410":{
"Label":"TN_DATA",
"Value":53466,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8414":{
"Label":"TN_INPUT",
"Value":53470,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8419":{
"Label":"TN_DEL",
"Value":53475,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8422":{
"Label":"TN_DIM",
"Value":53478,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8425":{
"Label":"TN_READ",
"Value":53481,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8429":{
"Label":"TN_GR",
"Value":53485,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8431":{
"Label":"TN_TEXT",
"Value":53487,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8435":{
"Label":"TN_PR",
"Value":53491,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8438":{
"Label":"TN_IN",
"Value":53494,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8441":{
"Label":"TN_CALL",
"Value":53497,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8445":{
"Label":"TN_PLOT",
"Value":53501,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8449":{
"Label":"TN_HLIN",
"Value":53505,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8453":{
"Label":"TN_VLIN",
"Value":53509,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8457":{
"Label":"TN_HGR2",
"Value":53513,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8461":{
"Label":"TN_HGR",
"Value":53517,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8464":{
"Label":"TN_HCOLOR",
"Value":53520,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8471":{
"Label":"TN_HPLOT",
"Value":53527,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8476":{
"Label":"TN_DRAW",
"Value":53532,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8480":{
"Label":"TN_XDRAW",
"Value":53536,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8485":{
"Label":"TN_HTAB",
"Value":53541,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8489":{
"Label":"TN_HOME",
"Value":53545,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8493":{
"Label":"TN_ROT",
"Value":53549,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8497":{
"Label":"TN_SCALE",
"Value":53553,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8503":{
"Label":"TN_SHLOAD",
"Value":53559,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8509":{
"Label":"TN_TRACE",
"Value":53565,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8514":{
"Label":"TN_NOTRACE",
"Value":53570,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8521":{
"Label":"TN_NORMAL",
"Value":53577,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8527":{
"Label":"TN_INVERSE",
"Value":53583,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8534":{
"Label":"TN_FLASH",
"Value":53590,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8539":{
"Label":"TN_COLOR",
"Value":53595,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8545":{
"Label":"TN_POP",
"Value":53601,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8548":{
"Label":"TN_VTAB",
"Value":53604,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8552":{
"Label":"TN_HIMEM",
"Value":53608,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8558":{
"Label":"TN_LOMEM",
"Value":53614,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8564":{
"Label":"TN_ONERR",
"Value":53620,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8569":{
"Label":"TN_RESUME",
"Value":53625,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8575":{
"Label":"TN_RECALL",
"Value":53631,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8581":{
"Label":"TN_STORE",
"Value":53637,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8586":{
"Label":"TN_SPEED",
"Value":53642,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8592":{
"Label":"TN_LET",
"Value":53648,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8595":{
"Label":"TN_GOTO",
"Value":53651,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8599":{
"Label":"TN_RUN",
"Value":53655,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8602":{
"Label":"TN_IF",
"Value":53658,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8604":{
"Label":"TN_RESTORE",
"Value":53660,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8611":{
"Label":"TN_AMPERSAND",
"Value":53667,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8612":{
"Label":"TN_GOSUB",
"Value":53668,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8617":{
"Label":"TN_RETURN",
"Value":53673,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8623":{
"Label":"TN_REM",
"Value":53679,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8626":{
"Label":"TN_STOP",
"Value":53682,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8630":{
"Label":"TN_ON",
"Value":53686,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8632":{
"Label":"TN_WAIT",
"Value":53688,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8636":{
"Label":"TN_LOAD",
"Value":53692,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8640":{
"Label":"TN_SAVE",
"Value":53696,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8644":{
"Label":"TN_DEF",
"Value":53700,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8647":{
"Label":"TN_POKE",
"Value":53703,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8651":{
"Label":"TN_PRINT",
"Value":53707,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8656":{
"Label":"TN_CONT",
"Value":53712,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8660":{
"Label":"TN_LIST",
"Value":53716,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8664":{
"Label":"TN_CLEAR",
"Value":53720,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8669":{
"Label":"TN_GET",
"Value":53725,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8672":{
"Label":"TN_NEW",
"Value":53728,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8675":{
"Label":"TN_TAB",
"Value":53731,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8679":{
"Label":"TN_TO",
"Value":53735,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8681":{
"Label":"TN_FN",
"Value":53737,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8683":{
"Label":"TN_SPC",
"Value":53739,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8687":{
"Label":"TN_THEN",
"Value":53743,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8691":{
"Label":"TN_AT",
"Value":53747,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8693":{
"Label":"TN_NOT",
"Value":53749,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8696":{
"Label":"TN_STEP",
"Value":53752,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8700":{
"Label":"TN_ADD",
"Value":53756,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8701":{
"Label":"TN_SUB",
"Value":53757,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8702":{
"Label":"TN_MUL",
"Value":53758,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8703":{
"Label":"TN_DIV",
"Value":53759,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8704":{
"Label":"TN_PWR",
"Value":53760,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8705":{
"Label":"TN_AND",
"Value":53761,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8708":{
"Label":"TN_OR",
"Value":53764,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8710":{
"Label":"TN_NEG",
"Value":53766,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8711":{
"Label":"TN_EQU",
"Value":53767,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8712":{
"Label":"TN_REL",
"Value":53768,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8713":{
"Label":"TN_SGN",
"Value":53769,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8716":{
"Label":"TN_INT",
"Value":53772,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8719":{
"Label":"TN_ABS",
"Value":53775,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8722":{
"Label":"TN_USR",
"Value":53778,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8725":{
"Label":"TN_FRE",
"Value":53781,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8728":{
"Label":"TN_SCRN",
"Value":53784,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8733":{
"Label":"TN_PDL",
"Value":53789,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8736":{
"Label":"TN_POS",
"Value":53792,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8739":{
"Label":"TN_SQR",
"Value":53795,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8742":{
"Label":"TN_RND",
"Value":53798,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8745":{
"Label":"TN_LOG",
"Value":53801,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8748":{
"Label":"TN_EXP",
"Value":53804,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8751":{
"Label":"TN_COS",
"Value":53807,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8754":{
"Label":"TN_SIN",
"Value":53810,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8757":{
"Label":"TN_TAN",
"Value":53813,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8760":{
"Label":"TN_ATN",
"Value":53816,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8763":{
"Label":"TN_PEEK",
"Value":53819,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8767":{
"Label":"TN_LEN",
"Value":53823,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8770":{
"Label":"TN_STR",
"Value":53826,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8774":{
"Label":"TN_VAL",
"Value":53830,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8777":{
"Label":"TN_ASC",
"Value":53833,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8780":{
"Label":"TN_CHR",
"Value":53836,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8784":{
"Label":"TN_LEFT",
"Value":53840,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8789":{
"Label":"TN_RIGHT",
"Value":53845,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8795":{
"Label":"TN_MID",
"Value":53851,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8799":{
"Label":"TOKNAMEND",
"Value":53855,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8371":{
"Label":"TA_ADD",
"Value":53427,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8374":{
"Label":"TA_SUB",
"Value":53430,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8377":{
"Label":"TA_MUL",
"Value":53433,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8380":{
"Label":"TA_DIV",
"Value":53436,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8383":{
"Label":"TA_PWR",
"Value":53439,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8386":{
"Label":"TA_AND",
"Value":53442,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8389":{
"Label":"TA_OR",
"Value":53445,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8392":{
"Label":"TA_UMNS_GTLT",
"Value":53448,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8395":{
"Label":"TA_UNOT_EQUL",
"Value":53451,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"8398":{
"Label":"TA_UPLS_LTGT",
"Value":53454,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9879":{
"Label":"CLRTXTPTR",
"Value":54935,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9834":{
"Label":"CLEAR",
"Value":54890,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16933":{
"Label":"BAS_PLOT",
"Value":61989,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12288":{
"Label":"BASIC",
"Value":57344,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9893":{
"Label":"LIST",
"Value":54949,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9905":{
"Label":"STRTRNG",
"Value":54961,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9924":{
"Label":"ENDRNG",
"Value":54980,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9932":{
"Label":"MAINLST",
"Value":54988,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9946":{
"Label":"LSTNXTLIN",
"Value":55002,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9973":{
"Label":"LSTD",
"Value":55029,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9975":{
"Label":"LST1",
"Value":55031,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9982":{
"Label":"LISTLINE",
"Value":55038,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9986":{
"Label":"SNDCHR",
"Value":55042,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10002":{
"Label":"NOCRTAB",
"Value":55058,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10020":{
"Label":"LISTED",
"Value":55076,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19544":{
"Label":"HOME",
"Value":64600,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10028":{
"Label":"GETCHAR",
"Value":55084,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10033":{
"Label":"GC1",
"Value":55089,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10036":{
"Label":"TOKEN",
"Value":55092,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10054":{
"Label":"SKPTK",
"Value":55110,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10057":{
"Label":"TOKL",
"Value":55113,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10064":{
"Label":"PT",
"Value":55120,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10069":{
"Label":"TOKLP",
"Value":55125,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10079":{
"Label":"TOKDUN",
"Value":55135,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17007":{
"Label":"NOTRACE",
"Value":62063,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17005":{
"Label":"TRACE",
"Value":62061,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9308":{
"Label":"NMBRDLN",
"Value":54364,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9375":{
"Label":"DECSRCPTR",
"Value":54431,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9383":{
"Label":"DOMVBLKDWN",
"Value":54439,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9397":{
"Label":"NEWLINE",
"Value":54453,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9425":{
"Label":"MVPRGM",
"Value":54481,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9450":{
"Label":"INSERTLINE",
"Value":54506,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10323":{
"Label":"SETDA",
"Value":55379,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10327":{
"Label":"BAS_RTS05",
"Value":55383,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10350":{
"Label":"STOP",
"Value":55406,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9458":{
"Label":"FIXLINKS",
"Value":54514,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9470":{
"Label":"NXTLNK",
"Value":54526,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9487":{
"Label":"PUTLNK",
"Value":54543,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9489":{
"Label":"FNDEOL",
"Value":54545,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9516":{
"Label":"INLIN",
"Value":54572,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9518":{
"Label":"INLIN2",
"Value":54574,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9529":{
"Label":"LENGTHOK",
"Value":54585,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9537":{
"Label":"STRIP",
"Value":54593,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9548":{
"Label":"NOINPUT",
"Value":54604,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9555":{
"Label":"INCHR",
"Value":54611,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9561":{
"Label":"PARSELINE",
"Value":54617,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9580":{
"Label":"PARSE",
"Value":54636,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9581":{
"Label":"NXCHR",
"Value":54637,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9592":{
"Label":"DATASTATE",
"Value":54648,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9608":{
"Label":"ISITATOKEN",
"Value":54664,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9616":{
"Label":"ISATOKEN",
"Value":54672,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9634":{
"Label":"INC_Y",
"Value":54690,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9639":{
"Label":"INC_X",
"Value":54695,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9640":{
"Label":"LIN",
"Value":54696,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9675":{
"Label":"PUTTOK",
"Value":54731,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9677":{
"Label":"PUTIN",
"Value":54733,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9696":{
"Label":"SDF",
"Value":54752,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9698":{
"Label":"ISITAREM",
"Value":54754,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9705":{
"Label":"COPYCHARS",
"Value":54761,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9714":{
"Label":"QUOTATION",
"Value":54770,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9721":{
"Label":"NXTTOKNAM",
"Value":54777,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9725":{
"Label":"SKIPOVER",
"Value":54781,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9732":{
"Label":"CHKTNCHR",
"Value":54788,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9744":{
"Label":"LINEND",
"Value":54800,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13444":{
"Label":"GARBAGE",
"Value":58500,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11066":{
"Label":"STROUT",
"Value":56122,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11003":{
"Label":"CRDO",
"Value":56059,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11098":{
"Label":"OUTQUES",
"Value":56154,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11100":{
"Label":"OUTDO",
"Value":56156,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15641":{
"Label":"INPRT",
"Value":60697,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16680":{
"Label":"COLD_START",
"Value":61736,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16651":{
"Label":"GENCHRGET",
"Value":61707,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16657":{
"Label":"GENCHRGOT",
"Value":61713,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16674":{
"Label":"GENCGRTS",
"Value":61730,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16590":{
"Label":"POLYATN",
"Value":61646,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10103":{
"Label":"FOR2",
"Value":55159,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10179":{
"Label":"ONESTEP",
"Value":55235,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10159":{
"Label":"STEP",
"Value":55215,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10194":{
"Label":"NEWSTT",
"Value":55250,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10213":{
"Label":"DIR",
"Value":55269,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10269":{
"Label":"EXECUTE",
"Value":55325,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10278":{
"Label":"GOEND",
"Value":55334,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10280":{
"Label":"EXECSTMNT",
"Value":55336,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10282":{
"Label":"EXECSTMNT1",
"Value":55338,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10303":{
"Label":"ASSIGNMENT",
"Value":55359,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16419":{
"Label":"SIN1",
"Value":61475,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16486":{
"Label":"PI_HALVED",
"Value":61542,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16491":{
"Label":"PI_DOUBLED",
"Value":61547,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16496":{
"Label":"QUARTER",
"Value":61552,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16501":{
"Label":"POLY_SIN",
"Value":61557,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16502":{
"Label":"PI2_11",
"Value":61558,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16507":{
"Label":"PI2_9",
"Value":61563,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16512":{
"Label":"PI2_7",
"Value":61568,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16517":{
"Label":"PI2_5",
"Value":61573,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16522":{
"Label":"PI2_3",
"Value":61578,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16527":{
"Label":"PI2_1",
"Value":61583,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16532":{
"Label":"EASTER_EGG1",
"Value":61588,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16537":{
"Label":"EASTER_EGG0",
"Value":61593,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10353":{
"Label":"END2",
"Value":55409,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10352":{
"Label":"END",
"Value":55408,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10376":{
"Label":"END3",
"Value":55432,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10378":{
"Label":"END4",
"Value":55434,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10387":{
"Label":"GOSTART",
"Value":55443,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10401":{
"Label":"CANCONT",
"Value":55457,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10390":{
"Label":"CONT",
"Value":55446,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10416":{
"Label":"BAS_SAVE",
"Value":55472,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10441":{
"Label":"BAS_LOAD",
"Value":55497,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10477":{
"Label":"BAS_LOADED",
"Value":55533,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10480":{
"Label":"VARTIO",
"Value":55536,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10497":{
"Label":"PROGIO",
"Value":55553,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10523":{
"Label":"RUNLIN",
"Value":55579,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10514":{
"Label":"RUN",
"Value":55570,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10549":{
"Label":"GO_TO_LINE",
"Value":55605,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10558":{
"Label":"GOTO",
"Value":55614,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10581":{
"Label":"GOTO_1",
"Value":55637,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10585":{
"Label":"GOTO_2",
"Value":55641,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10620":{
"Label":"UNDFSTERR",
"Value":55676,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10625":{
"Label":"SYNERR2",
"Value":55681,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10628":{
"Label":"RETURN",
"Value":55684,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10648":{
"Label":"ADDON",
"Value":55704,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10658":{
"Label":"BAS_RTS08",
"Value":55714,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10659":{
"Label":"DATA_END",
"Value":55715,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10662":{
"Label":"REM_END",
"Value":55718,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10670":{
"Label":"END_SWAP",
"Value":55726,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10678":{
"Label":"END_SCAN",
"Value":55734,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10693":{
"Label":"PULL3",
"Value":55749,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10697":{
"Label":"IF",
"Value":55753,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10712":{
"Label":"QTF",
"Value":55768,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10716":{
"Label":"REM",
"Value":55772,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10721":{
"Label":"IF_TRUE",
"Value":55777,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10732":{
"Label":"ONGOTO",
"Value":55788,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10744":{
"Label":"ONGOCASE",
"Value":55800,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10752":{
"Label":"ONGOFIND",
"Value":55808,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10763":{
"Label":"BAS_RTS09",
"Value":55819,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10822":{
"Label":"LET",
"Value":55878,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10965":{
"Label":"PRINT",
"Value":56021,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11168":{
"Label":"GET",
"Value":56224,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11186":{
"Label":"INPUT",
"Value":56242,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11513":{
"Label":"NEXT",
"Value":56569,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11928":{
"Label":"EQUOP",
"Value":56984,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12111":{
"Label":"OR",
"Value":57167,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12117":{
"Label":"AND",
"Value":57173,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12133":{
"Label":"RELOPS",
"Value":57189,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14212":{
"Label":"WAIT",
"Value":59268,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14250":{
"Label":"FSUBT",
"Value":59306,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14273":{
"Label":"FADDT",
"Value":59329,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14722":{
"Label":"FMULTT",
"Value":59778,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14719":{
"Label":"FMULT",
"Value":59775,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14953":{
"Label":"FDIVT",
"Value":60009,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16023":{
"Label":"FPWRT",
"Value":61079,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16080":{
"Label":"NEGOP",
"Value":61136,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16946":{
"Label":"HLIN",
"Value":62002,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16961":{
"Label":"VLIN",
"Value":62017,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16975":{
"Label":"COLOR",
"Value":62031,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16982":{
"Label":"VTAB",
"Value":62038,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16994":{
"Label":"SPEED",
"Value":62050,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17011":{
"Label":"NORMAL",
"Value":62067,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17015":{
"Label":"INVERSE",
"Value":62071,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17024":{
"Label":"FLASH",
"Value":62080,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17062":{
"Label":"LOMEM",
"Value":62118,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17099":{
"Label":"ONERR",
"Value":62155,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17311":{
"Label":"STORE",
"Value":62367,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17368":{
"Label":"HGR2",
"Value":62424,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18153":{
"Label":"HCOLOR",
"Value":63209,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18281":{
"Label":"DRAW",
"Value":63337,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18287":{
"Label":"XDRAW",
"Value":63343,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18293":{
"Label":"SHLOAD",
"Value":63349,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17305":{
"Label":"TEXT",
"Value":62361,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10764":{
"Label":"LINGET",
"Value":55820,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10770":{
"Label":"ASCHEX",
"Value":55826,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10816":{
"Label":"NXTDGT",
"Value":55872,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10851":{
"Label":"LETINT",
"Value":55907,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10871":{
"Label":"LETREAL",
"Value":55927,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10874":{
"Label":"LETSTR",
"Value":55930,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15143":{
"Label":"SETFOR",
"Value":60199,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10875":{
"Label":"PUTSTR",
"Value":55931,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10892":{
"Label":"STRDSC",
"Value":55948,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10906":{
"Label":"COPSTRDSC",
"Value":55962,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10913":{
"Label":"NEWSTRDSC",
"Value":55969,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10935":{
"Label":"SAVSTRDSC",
"Value":55991,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"10967":{
"Label":"PRINT2",
"Value":56023,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11010":{
"Label":"BAS_RTS10",
"Value":56066,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11008":{
"Label":"NEGATE",
"Value":56064,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11011":{
"Label":"PRCOMMA",
"Value":56067,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11022":{
"Label":"PRCMMA",
"Value":56078,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11030":{
"Label":"PRTABSPC",
"Value":56086,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11041":{
"Label":"PRTAB",
"Value":56097,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11051":{
"Label":"PRSPC",
"Value":56107,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11052":{
"Label":"NXTSPC",
"Value":56108,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11055":{
"Label":"PRNXTCHR",
"Value":56111,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11061":{
"Label":"DOSPC",
"Value":56117,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11069":{
"Label":"STRPRT",
"Value":56125,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11076":{
"Label":"STRPRT_1",
"Value":56132,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11095":{
"Label":"OUTSP",
"Value":56151,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11108":{
"Label":"OUTDOCTRL",
"Value":56164,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17017":{
"Label":"NRMINV",
"Value":62073,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17019":{
"Label":"NRMINVFLSH",
"Value":62075,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11121":{
"Label":"INPUTERR",
"Value":56177,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11131":{
"Label":"READERR",
"Value":56187,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11135":{
"Label":"ERRLINE",
"Value":56191,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11142":{
"Label":"INPERR",
"Value":56198,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11143":{
"Label":"RESPERR",
"Value":56199,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11152":{
"Label":"DOREENTRY",
"Value":56208,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11204":{
"Label":"QOUT",
"Value":56260,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11207":{
"Label":"DIRINERR",
"Value":56263,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11228":{
"Label":"NEXTIN",
"Value":56284,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11241":{
"Label":"INFLAG0",
"Value":56297,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11243":{
"Label":"PRCSINLST",
"Value":56299,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11249":{
"Label":"PRCSINITM",
"Value":56305,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11295":{
"Label":"PRCNOTGET",
"Value":56351,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11303":{
"Label":"PRCTXTPTR",
"Value":56359,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11307":{
"Label":"INSTART",
"Value":56363,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11363":{
"Label":"NUMIN",
"Value":56419,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11351":{
"Label":"SKIPHIGH",
"Value":56407,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11340":{
"Label":"PUTENDCHR",
"Value":56396,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11339":{
"Label":"PPENDCHR",
"Value":56395,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11327":{
"Label":"PUTCHR",
"Value":56383,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11369":{
"Label":"DATIN",
"Value":56425,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11378":{
"Label":"INMORE",
"Value":56434,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11390":{
"Label":"SWAPPTRS",
"Value":56446,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11417":{
"Label":"INPFIN",
"Value":56473,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11424":{
"Label":"FINDATA",
"Value":56480,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11449":{
"Label":"NXTSTT",
"Value":56505,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13062":{
"Label":"ERRDIR",
"Value":58118,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4096":{
"Label":"KBD",
"Value":49152,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11462":{
"Label":"INPDONE",
"Value":56518,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11473":{
"Label":"INDNSKIP",
"Value":56529,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11486":{
"Label":"BAS_RTS11",
"Value":56542,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11487":{
"Label":"ERR_EXTRA",
"Value":56543,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11503":{
"Label":"ERR_REENTRY",
"Value":56559,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11522":{
"Label":"SKPV",
"Value":56578,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11533":{
"Label":"GERR",
"Value":56589,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11535":{
"Label":"GOTFOR",
"Value":56591,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11602":{
"Label":"GONEWST",
"Value":56658,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11605":{
"Label":"ENDFOR",
"Value":56661,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11623":{
"Label":"FRMNUM",
"Value":56679,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11626":{
"Label":"CHKNUM",
"Value":56682,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11628":{
"Label":"CHKSTR",
"Value":56684,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11629":{
"Label":"CHKVAL",
"Value":56685,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11635":{
"Label":"BAS_RTS12",
"Value":56691,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11636":{
"Label":"NOTNUMSTR",
"Value":56692,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11638":{
"Label":"MISMATCH",
"Value":56694,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11640":{
"Label":"JERROR",
"Value":56696,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11643":{
"Label":"FRMEVL",
"Value":56699,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11649":{
"Label":"FESKPHI",
"Value":56705,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11654":{
"Label":"FRMEVL1",
"Value":56710,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11669":{
"Label":"FRMEVL2",
"Value":56725,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11672":{
"Label":"FE2LOOP",
"Value":56728,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11700":{
"Label":"FE2CONT",
"Value":56756,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11717":{
"Label":"FE2NUM",
"Value":56773,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11725":{
"Label":"PREFTEST",
"Value":56781,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11734":{
"Label":"NXTOP",
"Value":56790,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11735":{
"Label":"SAVOP",
"Value":56791,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11748":{
"Label":"FRMREL",
"Value":56804,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11758":{
"Label":"FRSKPGR",
"Value":56814,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11766":{
"Label":"PREFNC",
"Value":56822,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20325":{
"Label":"MON",
"Value":65381,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12291":{
"Label":"BASIC2",
"Value":57347,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19217":{
"Label":"XLTBL",
"Value":64273,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19197":{
"Label":"PWRCON",
"Value":64253,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19209":{
"Label":"TITLE",
"Value":64265,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19225":{
"Label":"RTBL",
"Value":64281,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19230":{
"Label":"PREAD",
"Value":64286,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20428":{
"Label":"CHRTBL",
"Value":65484,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20451":{
"Label":"SUBTBL",
"Value":65507,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20147":{
"Label":"BASCONT",
"Value":65203,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20144":{
"Label":"XBASIC",
"Value":65200,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20150":{
"Label":"GO",
"Value":65206,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20159":{
"Label":"REGZ",
"Value":65215,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20022":{
"Label":"VFY",
"Value":65078,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20164":{
"Label":"STEPZ_RTS",
"Value":65220,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20119":{
"Label":"OUTPRT",
"Value":65175,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19992":{
"Label":"SETMODE",
"Value":65048,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20012":{
"Label":"MOVE",
"Value":65068,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20000":{
"Label":"LT",
"Value":65056,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20100":{
"Label":"SETNORM",
"Value":65156,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20096":{
"Label":"SETINV",
"Value":65152,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20214":{
"Label":"CRMON",
"Value":65270,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19972":{
"Label":"BLANK",
"Value":65028,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20170":{
"Label":"USR",
"Value":65226,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20173":{
"Label":"MON_WRITE",
"Value":65229,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20221":{
"Label":"MON_READ",
"Value":65277,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20162":{
"Label":"TRACE_RTS",
"Value":65218,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20062":{
"Label":"MON_LIST",
"Value":65118,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20067":{
"Label":"MON_LIST2",
"Value":65123,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19968":{
"Label":"BL1",
"Value":65024,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20109":{
"Label":"MON_INPRT",
"Value":65165,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20165":{
"Label":"STEPZ_USR",
"Value":65221,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19952":{
"Label":"COUT1",
"Value":65008,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19958":{
"Label":"COUTZ",
"Value":65014,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19320":{
"Label":"VIDWAIT",
"Value":64376,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19055":{
"Label":"INITAN",
"Value":64111,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19073":{
"Label":"NEWMON",
"Value":64129,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20282":{
"Label":"BELL",
"Value":65338,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19110":{
"Label":"PWRUP",
"Value":64166,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19107":{
"Label":"NOFIX",
"Value":64163,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19099":{
"Label":"FIXSEV",
"Value":64155,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19296":{
"Label":"APPLEII",
"Value":64352,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19115":{
"Label":"SETPLP",
"Value":64171,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19113":{
"Label":"SETPG3",
"Value":64169,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19202":{
"Label":"DISKID",
"Value":64258,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19130":{
"Label":"SLOOP",
"Value":64186,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19143":{
"Label":"NXTBYT",
"Value":64199,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19159":{
"Label":"REGDSP",
"Value":64215,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19854":{
"Label":"CROUT",
"Value":64910,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19172":{
"Label":"RDSP1",
"Value":64228,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19237":{
"Label":"PREAD2",
"Value":64293,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19246":{
"Label":"MON_RTS2D",
"Value":64302,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19247":{
"Label":"INIT",
"Value":64303,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19257":{
"Label":"SETTXT",
"Value":64313,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19264":{
"Label":"SETGR",
"Value":64320,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19275":{
"Label":"SETWND",
"Value":64331,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19281":{
"Label":"SETWND2",
"Value":64337,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19291":{
"Label":"TABV",
"Value":64347,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19490":{
"Label":"MON_VTAB",
"Value":64546,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11773":{
"Label":"FRM_RECURSE",
"Value":56829,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11789":{
"Label":"SNTXERR",
"Value":56845,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11792":{
"Label":"PSHFAC",
"Value":56848,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11797":{
"Label":"PSHFACX",
"Value":56853,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11808":{
"Label":"PUSHFAC",
"Value":56864,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11829":{
"Label":"NOTMATH",
"Value":56885,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11832":{
"Label":"GOEX",
"Value":56888,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11834":{
"Label":"DOMATHNOW",
"Value":56890,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11841":{
"Label":"SKPNUMCHK",
"Value":56897,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11843":{
"Label":"DOMATH",
"Value":56899,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11869":{
"Label":"EXIT",
"Value":56925,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11872":{
"Label":"GETVAL",
"Value":56928,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11876":{
"Label":"SKIP",
"Value":56932,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11881":{
"Label":"NUMBER",
"Value":56937,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11884":{
"Label":"VARIABLE",
"Value":56940,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11905":{
"Label":"STRTEXT",
"Value":56961,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11914":{
"Label":"TEXTSTR",
"Value":56970,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11920":{
"Label":"TOKNOT",
"Value":56976,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11935":{
"Label":"EQUOP1",
"Value":56991,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11940":{
"Label":"TOKFN",
"Value":56996,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11947":{
"Label":"TOKSGN",
"Value":57003,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11954":{
"Label":"PARCHK",
"Value":57010,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11960":{
"Label":"CHKCLS",
"Value":57016,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11963":{
"Label":"CHKOPN",
"Value":57019,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11966":{
"Label":"CHKCOM",
"Value":57022,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11968":{
"Label":"SYNCHR",
"Value":57024,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11982":{
"Label":"UMINUS",
"Value":57038,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11984":{
"Label":"EQUL",
"Value":57040,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"11989":{
"Label":"FNDNUMVAR",
"Value":57045,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12005":{
"Label":"FNDINTVAR",
"Value":57061,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12022":{
"Label":"FNDFPVAR",
"Value":57078,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12025":{
"Label":"SCREEN",
"Value":57081,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12044":{
"Label":"UNARY",
"Value":57100,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12090":{
"Label":"UNARY1",
"Value":57146,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12125":{
"Label":"FALSE",
"Value":57181,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12128":{
"Label":"TRUE",
"Value":57184,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12157":{
"Label":"STRCMP",
"Value":57213,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12197":{
"Label":"SCFS",
"Value":57253,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12202":{
"Label":"CMPLOOP",
"Value":57258,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12208":{
"Label":"NUMCMP",
"Value":57264,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12213":{
"Label":"DOCMP",
"Value":57269,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12225":{
"Label":"CMPDONE",
"Value":57281,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12234":{
"Label":"CMPFINFLT",
"Value":57290,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12246":{
"Label":"NXDIM",
"Value":57302,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12259":{
"Label":"PTRGET",
"Value":57315,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12264":{
"Label":"PTRGET2",
"Value":57320,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12266":{
"Label":"PTRGET3",
"Value":57322,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12276":{
"Label":"BADNAM",
"Value":57332,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12279":{
"Label":"NAMOK",
"Value":57335,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12295":{
"Label":"PTRGETMOR",
"Value":57351,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12305":{
"Label":"PTRGETNUM",
"Value":57361,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12306":{
"Label":"PTRGETNLP",
"Value":57362,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12316":{
"Label":"PTRGETSTR",
"Value":57372,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12326":{
"Label":"PTRGETINT",
"Value":57382,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12342":{
"Label":"PTRGETNIN",
"Value":57398,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12349":{
"Label":"PTRGET2ND",
"Value":57405,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12358":{
"Label":"PTRGETARY",
"Value":57414,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12361":{
"Label":"PTRGETNVC",
"Value":57417,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12367":{
"Label":"PTRGETIVP",
"Value":57423,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12377":{
"Label":"PTRGETLP1",
"Value":57433,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12379":{
"Label":"PTRGETLP2",
"Value":57435,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12389":{
"Label":"PTRGETFND",
"Value":57445,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12403":{
"Label":"PTRGET4_13",
"Value":57459,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12413":{
"Label":"ISLETC",
"Value":57469,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12422":{
"Label":"BAS_RTS13",
"Value":57478,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12423":{
"Label":"NAMNOTFND",
"Value":57479,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12444":{
"Label":"MKNEWVAR",
"Value":57500,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12466":{
"Label":"MNVSPA",
"Value":57522,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12510":{
"Label":"SETVARPTRYA",
"Value":57566,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12520":{
"Label":"SETVARPTR",
"Value":57576,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12525":{
"Label":"GETARY",
"Value":57581,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12527":{
"Label":"GETARY2",
"Value":57583,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12537":{
"Label":"GETARY3",
"Value":57593,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12542":{
"Label":"NEG32768",
"Value":57598,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12546":{
"Label":"MAKINT",
"Value":57602,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12552":{
"Label":"MKINT",
"Value":57608,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12556":{
"Label":"AYINT",
"Value":57612,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12569":{
"Label":"IQERROR",
"Value":57625,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12571":{
"Label":"CNVRT2INT",
"Value":57627,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12574":{
"Label":"ARRAY",
"Value":57630,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12588":{
"Label":"NXTDIM",
"Value":57644,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12649":{
"Label":"FNDARY",
"Value":57705,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12653":{
"Label":"ARYLOOP",
"Value":57709,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12665":{
"Label":"ARYNAME",
"Value":57721,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12680":{
"Label":"NXTARY",
"Value":57736,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19301":{
"Label":"STITLE",
"Value":64357,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19336":{
"Label":"KBDWAIT",
"Value":64392,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19348":{
"Label":"NOWAIT",
"Value":64404,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19351":{
"Label":"ESCOLD",
"Value":64407,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19355":{
"Label":"ESCNOW",
"Value":64411,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19365":{
"Label":"ESCNEW",
"Value":64421,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17239":{
"Label":"DELSKIP1",
"Value":62295,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19393":{
"Label":"BASCALC",
"Value":64449,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17198":{
"Label":"JSYN",
"Value":62254,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17253":{
"Label":"DELMVDWN",
"Value":62309,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17255":{
"Label":"DELMVLOOP",
"Value":62311,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17265":{
"Label":"DELMVSKP1",
"Value":62321,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17271":{
"Label":"DELMVSKP2",
"Value":62327,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17288":{
"Label":"DELMVSKP3",
"Value":62344,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12694":{
"Label":"SUBERR",
"Value":57750,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12697":{
"Label":"IQERR",
"Value":57753,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12699":{
"Label":"JMPERR",
"Value":57755,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12702":{
"Label":"ARYVARFND",
"Value":57758,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12714":{
"Label":"CHKDIM",
"Value":57770,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12728":{
"Label":"NEWARYVAR",
"Value":57784,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12737":{
"Label":"MAKARY",
"Value":57793,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12757":{
"Label":"ARYNOTINT",
"Value":57813,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12766":{
"Label":"ARYISREAL",
"Value":57822,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12775":{
"Label":"SAVDIM",
"Value":57831,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12791":{
"Label":"DFLTDIM",
"Value":57847,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12826":{
"Label":"CHKARYSPC",
"Value":57882,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12841":{
"Label":"CLRARY",
"Value":57897,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12846":{
"Label":"CLRNXTPG",
"Value":57902,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12875":{
"Label":"FNDARYELM",
"Value":57931,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12883":{
"Label":"DIMLUP",
"Value":57939,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12905":{
"Label":"GSE",
"Value":57961,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12908":{
"Label":"GME",
"Value":57964,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12911":{
"Label":"DIMOK",
"Value":57967,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12912":{
"Label":"DIMOK1",
"Value":57968,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12929":{
"Label":"NEXTDIM",
"Value":57985,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12946":{
"Label":"DIMNOTINT",
"Value":58002,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12952":{
"Label":"DIMISREAL",
"Value":58008,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12972":{
"Label":"BAS_RTS14",
"Value":58028,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12973":{
"Label":"MULTSUBS",
"Value":58029,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12982":{
"Label":"MULTSUBS1",
"Value":58038,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12992":{
"Label":"MLTSBSLOOP",
"Value":58048,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13017":{
"Label":"MULTSUBS1_2",
"Value":58073,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13029":{
"Label":"FREESPACE",
"Value":58085,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13042":{
"Label":"GIVAYF",
"Value":58098,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13057":{
"Label":"SNGFLT",
"Value":58113,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13121":{
"Label":"FN_NAME",
"Value":58177,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13140":{
"Label":"FN_CALL",
"Value":58196,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13176":{
"Label":"SAVOLD",
"Value":58232,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13225":{
"Label":"GETOLD",
"Value":58281,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13231":{
"Label":"FN_DATA",
"Value":58287,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13448":{
"Label":"FNDVAR",
"Value":58504,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13269":{
"Label":"STRINI",
"Value":58325,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13277":{
"Label":"STRSPC",
"Value":58333,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13287":{
"Label":"STRLTRL",
"Value":58343,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13293":{
"Label":"STRLTRL2",
"Value":58349,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13303":{
"Label":"STRFNDEND",
"Value":58359,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13316":{
"Label":"STRENDFND",
"Value":58372,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13320":{
"Label":"STRZNDFND",
"Value":58376,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13321":{
"Label":"STRQNDFND",
"Value":58377,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13333":{
"Label":"STRLTRLNC",
"Value":58389,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13343":{
"Label":"STRLTRLZP",
"Value":58399,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13354":{
"Label":"PUTNEW",
"Value":58410,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13362":{
"Label":"JERR",
"Value":58418,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13365":{
"Label":"PUTEMP",
"Value":58421,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13394":{
"Label":"GETSPACE",
"Value":58450,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13396":{
"Label":"GETSPC",
"Value":58452,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13407":{
"Label":"GETSPC2",
"Value":58463,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13417":{
"Label":"GOTSPACE",
"Value":58473,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13428":{
"Label":"MEMFULL",
"Value":58484,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13472":{
"Label":"TVAR",
"Value":58528,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13481":{
"Label":"SVARS",
"Value":58537,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13493":{
"Label":"SVAR",
"Value":58549,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13501":{
"Label":"SVARGO",
"Value":58557,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13506":{
"Label":"ARYVAR",
"Value":58562,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13514":{
"Label":"ARYVAR2",
"Value":58570,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13518":{
"Label":"ARYVAR3",
"Value":58574,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13529":{
"Label":"ARYVARGO",
"Value":58585,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13578":{
"Label":"AVGSKPADV",
"Value":58634,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13580":{
"Label":"ARYSTR",
"Value":58636,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13588":{
"Label":"GOGO",
"Value":58644,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13593":{
"Label":"CHKSMPLVAR",
"Value":58649,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13603":{
"Label":"CHKVAR",
"Value":58659,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13624":{
"Label":"CHKVAR1",
"Value":58680,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13634":{
"Label":"CHKVAR2",
"Value":58690,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13650":{
"Label":"CHKBUMP",
"Value":58706,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13661":{
"Label":"CHKEXIT",
"Value":58717,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13666":{
"Label":"GRBGPASS",
"Value":58722,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18165":{
"Label":"BAS_RTS28",
"Value":63221,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18184":{
"Label":"HPLOTLOOP",
"Value":63240,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18191":{
"Label":"HPLOT2",
"Value":63247,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18166":{
"Label":"COLORTBL",
"Value":63222,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18221":{
"Label":"DRWPTR",
"Value":63277,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18247":{
"Label":"DRWPTR2",
"Value":63303,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18278":{
"Label":"DRWPTR3",
"Value":63334,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13719":{
"Label":"CAT",
"Value":58775,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13751":{
"Label":"CAT1",
"Value":58807,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13780":{
"Label":"MOVINS",
"Value":58836,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13794":{
"Label":"MOVSTR",
"Value":58850,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13798":{
"Label":"MOVSTR1",
"Value":58854,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13802":{
"Label":"MOVESTR",
"Value":58858,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13811":{
"Label":"MOVSTR2",
"Value":58867,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13820":{
"Label":"MOVSTR3",
"Value":58876,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13821":{
"Label":"FRESTR",
"Value":58877,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13824":{
"Label":"FREFAC",
"Value":58880,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13828":{
"Label":"FRETMP",
"Value":58884,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13871":{
"Label":"FRETMP1",
"Value":58927,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13872":{
"Label":"FRETMP2",
"Value":58928,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13877":{
"Label":"FRETMS",
"Value":58933,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13893":{
"Label":"FRETMS1",
"Value":58949,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13920":{
"Label":"RGHTSTR",
"Value":58976,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13926":{
"Label":"INSTR",
"Value":58982,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13927":{
"Label":"MIDSTR2",
"Value":58983,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13928":{
"Label":"MIDSTR3",
"Value":58984,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13951":{
"Label":"INSTRSKP",
"Value":59007,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13986":{
"Label":"MIDSTR1",
"Value":59042,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14009":{
"Label":"INSTRING",
"Value":59065,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14044":{
"Label":"GETSTR",
"Value":59100,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14066":{
"Label":"GOIQ",
"Value":59122,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14069":{
"Label":"GTBYTC",
"Value":59125,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14072":{
"Label":"GETBYT",
"Value":59128,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14075":{
"Label":"CONINT",
"Value":59131,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14095":{
"Label":"VALGO",
"Value":59151,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14119":{
"Label":"VALSKP",
"Value":59175,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14141":{
"Label":"POINT",
"Value":59197,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14150":{
"Label":"GTNUM",
"Value":59206,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14156":{
"Label":"COMBYTE",
"Value":59212,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14162":{
"Label":"GETADR",
"Value":59218,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14231":{
"Label":"WAITLOOP",
"Value":59287,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"14227":{
"Label":"WAITSKIP",
"Value":59283,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"14239":{
"Label":"BAS_RTS15",
"Value":59295,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14240":{
"Label":"FADDH",
"Value":59296,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14247":{
"Label":"FSUB",
"Value":59303,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14265":{
"Label":"FADD1",
"Value":59321,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14270":{
"Label":"FADD",
"Value":59326,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14278":{
"Label":"FADDFAC",
"Value":59334,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14286":{
"Label":"FADD2",
"Value":59342,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14314":{
"Label":"FARGLESS",
"Value":59370,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14318":{
"Label":"FBITSHFT",
"Value":59374,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14330":{
"Label":"FADD3",
"Value":59386,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14342":{
"Label":"SUBMANTS",
"Value":59398,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14377":{
"Label":"NRMLZFAC1",
"Value":59433,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14382":{
"Label":"NRMLZFAC2",
"Value":59438,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14386":{
"Label":"NRMLZLOOP",
"Value":59442,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14414":{
"Label":"ZFACEXPSGN",
"Value":59470,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14416":{
"Label":"ZFACSGNEXP",
"Value":59472,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14418":{
"Label":"ZFACSGN",
"Value":59474,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14421":{
"Label":"ADDMANTS",
"Value":59477,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14452":{
"Label":"FRLOOP",
"Value":59508,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14464":{
"Label":"FNRMLZFAC",
"Value":59520,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14477":{
"Label":"FRBCC",
"Value":59533,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14479":{
"Label":"FROUND",
"Value":59535,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14493":{
"Label":"BAS_RTS16",
"Value":59549,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14494":{
"Label":"TWSCMPFAC",
"Value":59550,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14500":{
"Label":"TCFACMANT",
"Value":59556,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14534":{
"Label":"INCFACMAN",
"Value":59590,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14548":{
"Label":"BAS_RTS17",
"Value":59604,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14549":{
"Label":"OVERFLOW",
"Value":59605,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14576":{
"Label":"SHFTRGHT",
"Value":59632,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14554":{
"Label":"SHFTRGHT1",
"Value":59610,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14556":{
"Label":"SR1LOOP",
"Value":59612,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14589":{
"Label":"SRLOOP",
"Value":59645,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14599":{
"Label":"SHFTRGHT4",
"Value":59655,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14609":{
"Label":"SHFTRGHT5",
"Value":59665,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14595":{
"Label":"SRSKP",
"Value":59651,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14611":{
"Label":"CON_ONE",
"Value":59667,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14616":{
"Label":"POLY_LOG",
"Value":59672,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14637":{
"Label":"CON_SQRHALF",
"Value":59693,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14642":{
"Label":"CON_SQRTWO",
"Value":59698,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14647":{
"Label":"CON_NEGHALF",
"Value":59703,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14652":{
"Label":"CON_LOGTWO",
"Value":59708,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14664":{
"Label":"GIQ",
"Value":59720,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14667":{
"Label":"LOG2",
"Value":59723,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14727":{
"Label":"FMULTT1",
"Value":59783,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14773":{
"Label":"MULT2",
"Value":59829,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14776":{
"Label":"M2ADDLOOP",
"Value":59832,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14804":{
"Label":"MULT2SHFT",
"Value":59860,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14768":{
"Label":"MULT1",
"Value":59824,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14818":{
"Label":"BAS_RTS18",
"Value":59874,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14819":{
"Label":"UPAY2ARG",
"Value":59875,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14862":{
"Label":"ADDEXPS",
"Value":59918,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14864":{
"Label":"ADDEXPS1",
"Value":59920,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14875":{
"Label":"ADDEXPS2",
"Value":59931,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14886":{
"Label":"ADDEXPS3",
"Value":59942,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14891":{
"Label":"OUTOFRNG",
"Value":59947,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14888":{
"Label":"ADDEXPS4",
"Value":59944,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14897":{
"Label":"ZERO",
"Value":59953,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14902":{
"Label":"JOV",
"Value":59958,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15282":{
"Label":"FCOMP",
"Value":60338,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15346":{
"Label":"QINT",
"Value":60402,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15366":{
"Label":"QINT1",
"Value":60422,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15377":{
"Label":"BAS_RTS21",
"Value":60433,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14905":{
"Label":"MUL10",
"Value":59961,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14927":{
"Label":"MUL10RTN",
"Value":59983,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14933":{
"Label":"DIV10",
"Value":59989,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14942":{
"Label":"DIV",
"Value":59998,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14944":{
"Label":"NON_SEQUITUR",
"Value":60000,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14950":{
"Label":"FDIV",
"Value":60006,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14976":{
"Label":"FDIVT1",
"Value":60032,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14998":{
"Label":"FDIVT2",
"Value":60054,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15011":{
"Label":"FDIVT3",
"Value":60067,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15014":{
"Label":"FDIVT4",
"Value":60070,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15028":{
"Label":"FDIVT5",
"Value":60084,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15057":{
"Label":"FDIVT6",
"Value":60113,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15061":{
"Label":"FDIVT7",
"Value":60117,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15073":{
"Label":"DOZDIVERR",
"Value":60129,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15078":{
"Label":"CPY2FAC",
"Value":60134,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15097":{
"Label":"UPAY2FAC",
"Value":60153,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15134":{
"Label":"FACRND2TMP2",
"Value":60190,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15137":{
"Label":"FACRND2TMP1",
"Value":60193,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15147":{
"Label":"FACRND2XY",
"Value":60203,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15187":{
"Label":"CPYARG2FAC",
"Value":60243,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15189":{
"Label":"CPYARGFAC",
"Value":60245,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15193":{
"Label":"CA2FLOOP",
"Value":60249,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15203":{
"Label":"FACRND2ARG",
"Value":60259,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15206":{
"Label":"FAC2ARG",
"Value":60262,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15208":{
"Label":"F2ALOOP",
"Value":60264,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15217":{
"Label":"BAS_RTS19",
"Value":60273,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15218":{
"Label":"ROUND_FAC",
"Value":60274,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15226":{
"Label":"INCMAN",
"Value":60282,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15234":{
"Label":"SIGN",
"Value":60290,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15238":{
"Label":"SIGN1",
"Value":60294,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15240":{
"Label":"SIGN2",
"Value":60296,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15247":{
"Label":"BAS_RTS20",
"Value":60303,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15251":{
"Label":"FLOAT",
"Value":60307,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15259":{
"Label":"FLOAT1",
"Value":60315,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15264":{
"Label":"FLOAT2",
"Value":60320,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16902":{
"Label":"BAS_GOERR",
"Value":61958,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16550":{
"Label":"ATN_1",
"Value":61606,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16564":{
"Label":"ATN_2",
"Value":61620,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16583":{
"Label":"ATN_3",
"Value":61639,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19426":{
"Label":"BELLB",
"Value":64482,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17406":{
"Label":"BGLOOP",
"Value":62462,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19614":{
"Label":"CLREOLZ",
"Value":64670,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16769":{
"Label":"FNDMEM",
"Value":61825,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16789":{
"Label":"MEMFND",
"Value":61845,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16824":{
"Label":"INITPRGM",
"Value":61880,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17545":{
"Label":"BAS_RTS26",
"Value":62601,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17700":{
"Label":"MVDWN1",
"Value":62756,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17706":{
"Label":"MVDWN2",
"Value":62762,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17708":{
"Label":"MVDWN3",
"Value":62764,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17921":{
"Label":"DRAW0",
"Value":62977,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17958":{
"Label":"DRWLP2",
"Value":63014,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17968":{
"Label":"DRWLP3",
"Value":63024,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17981":{
"Label":"DRW4",
"Value":63037,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17992":{
"Label":"DRW5",
"Value":63048,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18008":{
"Label":"DRW6",
"Value":63064,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16153":{
"Label":"EXP1",
"Value":61209,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16164":{
"Label":"EXP2LOOP",
"Value":61220,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16167":{
"Label":"EXP3",
"Value":61223,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16183":{
"Label":"EXP4LOOP",
"Value":61239,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15337":{
"Label":"FCFINISH",
"Value":60393,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15343":{
"Label":"FCDONE",
"Value":60399,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15493":{
"Label":"FIN3NEGX",
"Value":60549,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15529":{
"Label":"FIN8DPL",
"Value":60585,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15538":{
"Label":"FIN8DPR",
"Value":60594,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15545":{
"Label":"FIN8EVDN",
"Value":60601,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"Uncertain"},

"15550":{
"Label":"FIN8EVD",
"Value":60606,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15560":{
"Label":"FIN9X10",
"Value":60616,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15681":{
"Label":"FOUTPOS",
"Value":60737,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15753":{
"Label":"FOUTINRNG2",
"Value":60809,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15695":{
"Label":"FOUTNOT0",
"Value":60751,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15703":{
"Label":"FOUTIS1",
"Value":60759,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15712":{
"Label":"FOUTMORE",
"Value":60768,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15714":{
"Label":"FOUTADJ1",
"Value":60770,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15725":{
"Label":"FOUTADJ2",
"Value":60781,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15736":{
"Label":"FOUTSMALL",
"Value":60792,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15743":{
"Label":"FOUTLARGE",
"Value":60799,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15750":{
"Label":"FOUTINRNG1",
"Value":60806,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15774":{
"Label":"FOUTXF1",
"Value":60830,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15881":{
"Label":"FOUTSKPDP",
"Value":60937,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15775":{
"Label":"FOUTXF2",
"Value":60831,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15786":{
"Label":"FOUTPDP",
"Value":60842,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15803":{
"Label":"FOUTSVY",
"Value":60859,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15805":{
"Label":"FOUTMKS",
"Value":60861,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15809":{
"Label":"FOUT2LOOP",
"Value":60865,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15845":{
"Label":"FOUT2LPND",
"Value":60901,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15847":{
"Label":"FOUTCNTD",
"Value":60903,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15854":{
"Label":"FOUTNMRL",
"Value":60910,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15897":{
"Label":"FOUTMVBK",
"Value":60953,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15910":{
"Label":"FOUTNEEDX",
"Value":60966,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15926":{
"Label":"FOUTPUTX",
"Value":60982,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15938":{
"Label":"FOUTWHATX",
"Value":60994,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16032":{
"Label":"FPWRT1",
"Value":61088,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16058":{
"Label":"FPWRT2",
"Value":61114,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18576":{
"Label":"GET816LEN",
"Value":63632,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15607":{
"Label":"GETEXP1",
"Value":60663,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15621":{
"Label":"GETEXP2",
"Value":60677,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19820":{
"Label":"GETLN0",
"Value":64876,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17394":{
"Label":"HCLR",
"Value":62450,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17904":{
"Label":"HFNDLOOP",
"Value":62960,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17918":{
"Label":"HFNDFIN",
"Value":62974,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18125":{
"Label":"HFNS1",
"Value":63181,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17744":{
"Label":"HGLIN1",
"Value":62800,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17768":{
"Label":"HGLIN2",
"Value":62824,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17712":{
"Label":"HLINRL",
"Value":62768,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17473":{
"Label":"HPOSN1",
"Value":62529,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17474":{
"Label":"HPOSN2",
"Value":62530,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18412":{
"Label":"HTABLOOP",
"Value":63468,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18426":{
"Label":"HTABEXIT",
"Value":63482,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19999":{
"Label":"IDROUTINE",
"Value":65055,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16920":{
"Label":"LINAT",
"Value":61976,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20226":{
"Label":"MON_READ2",
"Value":65282,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20287":{
"Label":"MON_RESTORE",
"Value":65343,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20298":{
"Label":"MON_SAVE",
"Value":65354,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19624":{
"Label":"MON_WAIT",
"Value":64680,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20336":{
"Label":"SCANIDX",
"Value":65392,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17643":{
"Label":"MVUP1",
"Value":62699,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17654":{
"Label":"MVUP2",
"Value":62710,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17659":{
"Label":"MVUP3",
"Value":62715,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17661":{
"Label":"MVUP4",
"Value":62717,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17663":{
"Label":"MVUP5",
"Value":62719,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17803":{
"Label":"MOVEX3L2",
"Value":62859,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17822":{
"Label":"MOVEX4",
"Value":62878,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19233":{
"Label":"PREAD4",
"Value":64289,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19728":{
"Label":"RDKEY0",
"Value":64784,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19736":{
"Label":"RDKEY1",
"Value":64792,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17362":{
"Label":"RECALLDATA",
"Value":62418,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16332":{
"Label":"RNDFACNEG",
"Value":61388,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18555":{
"Label":"NIBHILO",
"Value":63611,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16261":{
"Label":"SERMAIN1",
"Value":61317,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16265":{
"Label":"SERMAIN2",
"Value":61321,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16278":{
"Label":"SERMAIN3",
"Value":61334,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18326":{
"Label":"SHLOAD1",
"Value":63382,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18336":{
"Label":"SHLOAD2",
"Value":63392,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18339":{
"Label":"SHLOAD3",
"Value":63395,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16435":{
"Label":"SIN3",
"Value":61491,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19379":{
"Label":"VERSION",
"Value":64435,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18013":{
"Label":"XDRAW0",
"Value":63069,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18050":{
"Label":"XDRWLP2",
"Value":63106,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18060":{
"Label":"XDRWLP3",
"Value":63116,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18073":{
"Label":"XDRW4",
"Value":63129,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18084":{
"Label":"XDRW5",
"Value":63140,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18100":{
"Label":"XDRW6",
"Value":63156,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19392":{
"Label":"ZIDBYTE",
"Value":64448,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19391":{
"Label":"ZIDBYTE2",
"Value":64447,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15284":{
"Label":"FCOMP2",
"Value":60340,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15378":{
"Label":"QINT2",
"Value":60434,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15424":{
"Label":"QINT3",
"Value":60480,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15433":{
"Label":"BAS_RTS22",
"Value":60489,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15434":{
"Label":"FIN",
"Value":60490,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15438":{
"Label":"FINLOOP",
"Value":60494,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15453":{
"Label":"FINPLUS",
"Value":60509,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"Uncertain"},

"15457":{
"Label":"FIN1EVAL",
"Value":60513,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15460":{
"Label":"FIN2NMRL",
"Value":60516,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15462":{
"Label":"FIN3PDP",
"Value":60518,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"Uncertain"},

"15495":{
"Label":"FIN4POSX",
"Value":60551,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15498":{
"Label":"FIN5NMRL",
"Value":60554,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15500":{
"Label":"FIN6SGNX",
"Value":60556,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15512":{
"Label":"FINADJX",
"Value":60568,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15518":{
"Label":"FIN7POSX",
"Value":60574,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15520":{
"Label":"FIN8ADJX",
"Value":60576,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15553":{
"Label":"FIN9NMRL",
"Value":60609,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15972":{
"Label":"CON_HALF",
"Value":61028,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15977":{
"Label":"DECTBL",
"Value":61033,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15573":{
"Label":"ADDACC",
"Value":60629,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15592":{
"Label":"GETEXP",
"Value":60648,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15636":{
"Label":"CON_1E9",
"Value":60692,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15631":{
"Label":"CON_1E9M1",
"Value":60687,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15626":{
"Label":"CON_1E8M1",
"Value":60682,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15652":{
"Label":"LINPRT",
"Value":60708,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15665":{
"Label":"PRINTSTR",
"Value":60721,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15668":{
"Label":"FOUT",
"Value":60724,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15670":{
"Label":"FOUT1",
"Value":60726,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15959":{
"Label":"FOUTFIN",
"Value":61015,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15962":{
"Label":"FOUTMKND",
"Value":61018,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15967":{
"Label":"FOUTPTSTK",
"Value":61023,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16090":{
"Label":"BAS_RTS23",
"Value":61146,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16091":{
"Label":"CON_LOG_E",
"Value":61147,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16096":{
"Label":"POLY_EXP",
"Value":61152,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16220":{
"Label":"POLY_ODD",
"Value":61276,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16242":{
"Label":"POLYNOMIAL",
"Value":61298,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16246":{
"Label":"SERMAIN",
"Value":61302,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16293":{
"Label":"BAS_RTS24",
"Value":61349,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16294":{
"Label":"CON_RND1",
"Value":61350,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16298":{
"Label":"CON_RND2",
"Value":61354,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16359":{
"Label":"GO_MOVMF",
"Value":61415,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16422":{
"Label":"SIN2",
"Value":61478,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16482":{
"Label":"TAN1",
"Value":61538,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16589":{
"Label":"BAS_RTS25",
"Value":61645,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16722":{
"Label":"CPYCHRGET",
"Value":61778,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16876":{
"Label":"PLOTFNS",
"Value":61932,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16905":{
"Label":"LINCOOR",
"Value":61961,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17049":{
"Label":"SETHI",
"Value":62105,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17327":{
"Label":"STORESKP1",
"Value":62383,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17495":{
"Label":"HPLOT0",
"Value":62551,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17509":{
"Label":"MVLFTRGT",
"Value":62565,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17518":{
"Label":"MVLFTRGT1",
"Value":62574,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17521":{
"Label":"MVLEFT1",
"Value":62577,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17526":{
"Label":"MVLEFT2",
"Value":62582,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17528":{
"Label":"MVLEFT3",
"Value":62584,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17534":{
"Label":"COLORSHIFT",
"Value":62590,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17546":{
"Label":"MVRIGHT",
"Value":62602,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17564":{
"Label":"LRUDX1",
"Value":62620,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17565":{
"Label":"LRUDX2",
"Value":62621,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17587":{
"Label":"LRUD1",
"Value":62643,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17588":{
"Label":"LRUD2",
"Value":62644,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17604":{
"Label":"LRUD3",
"Value":62660,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17608":{
"Label":"LRUD4",
"Value":62664,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17850":{
"Label":"COSTBL",
"Value":62906,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17619":{
"Label":"MVUPDWN0",
"Value":62675,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17665":{
"Label":"MVUPDWN1",
"Value":62721,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17669":{
"Label":"MVDWN",
"Value":62725,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12442":{
"Label":"CON_ZERO",
"Value":57498,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14928":{
"Label":"CON_TEN",
"Value":59984,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17386":{
"Label":"SETHPG",
"Value":62442,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17920":{
"Label":"BAS_RTS27",
"Value":62976,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17925":{
"Label":"DRAW1",
"Value":62981,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18017":{
"Label":"XDRAW1",
"Value":63073,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18429":{
"Label":"KRW",
"Value":63485,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19739":{
"Label":"KEYIN",
"Value":64795,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19765":{
"Label":"RDCHAR",
"Value":64821,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17842":{
"Label":"MSKTBL",
"Value":62898,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17849":{
"Label":"CON_1C",
"Value":62905,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17867":{
"Label":"HFIND",
"Value":62923,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17722":{
"Label":"HGLIN",
"Value":62778,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17788":{
"Label":"MOVEX1L1",
"Value":62844,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17793":{
"Label":"MOVEX2",
"Value":62849,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18105":{
"Label":"HFNS",
"Value":63161,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18150":{
"Label":"GGERR",
"Value":63206,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18364":{
"Label":"TAPEPTR",
"Value":63420,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18393":{
"Label":"GETARYPTR",
"Value":63449,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19408":{
"Label":"BASCALC2",
"Value":64464,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19417":{
"Label":"BELL1",
"Value":64473,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19428":{
"Label":"BELL2",
"Value":64484,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19421":{
"Label":"BELLA",
"Value":64477,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19439":{
"Label":"MON_RTS2B",
"Value":64495,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19440":{
"Label":"STORADV",
"Value":64496,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19444":{
"Label":"ADVANCE",
"Value":64500,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19452":{
"Label":"MON_RTS3",
"Value":64508,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19453":{
"Label":"VIDOUT",
"Value":64509,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19472":{
"Label":"BACKSPACE",
"Value":64528,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19482":{
"Label":"CURSORUP",
"Value":64538,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19492":{
"Label":"VTABZ",
"Value":64548,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19499":{
"Label":"MON_RTS4",
"Value":64555,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19500":{
"Label":"ESC1",
"Value":64556,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19526":{
"Label":"CLEOP1",
"Value":64582,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19522":{
"Label":"CLREOP",
"Value":64578,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19554":{
"Label":"CARRETURN",
"Value":64610,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19558":{
"Label":"LINEFEED",
"Value":64614,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19568":{
"Label":"SCROLL",
"Value":64624,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19574":{
"Label":"SCRL1",
"Value":64630,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19596":{
"Label":"SCRL2",
"Value":64652,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19605":{
"Label":"SCRL3",
"Value":64661,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19612":{
"Label":"CLREOL",
"Value":64668,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19616":{
"Label":"CLEOL2",
"Value":64672,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19625":{
"Label":"MON_WAIT2",
"Value":64681,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19626":{
"Label":"MON_WAIT3",
"Value":64682,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19636":{
"Label":"NXTA4",
"Value":64692,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19642":{
"Label":"NXTA1",
"Value":64698,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19656":{
"Label":"MON_RTS4B",
"Value":64712,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19657":{
"Label":"HEADER",
"Value":64713,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19685":{
"Label":"WRTAPE",
"Value":64741,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19670":{
"Label":"WRBIT",
"Value":64726,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19675":{
"Label":"ZERODLY",
"Value":64731,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19682":{
"Label":"ONEDLY",
"Value":64738,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19692":{
"Label":"RDBYTE",
"Value":64748,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19694":{
"Label":"RDBYT2",
"Value":64750,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19706":{
"Label":"RD2BIT",
"Value":64762,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19709":{
"Label":"RDBIT",
"Value":64765,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19724":{
"Label":"RDKEY",
"Value":64780,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19745":{
"Label":"KEYIN2",
"Value":64801,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19759":{
"Label":"ESC",
"Value":64815,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19773":{
"Label":"NOTCR",
"Value":64829,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19807":{
"Label":"NOTCR1",
"Value":64863,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19810":{
"Label":"CANCEL",
"Value":64866,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19815":{
"Label":"GETLNZ",
"Value":64871,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19818":{
"Label":"GETLN",
"Value":64874,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19823":{
"Label":"GETLN1",
"Value":64879,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19825":{
"Label":"BCKSPC",
"Value":64881,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19829":{
"Label":"NXTCHAR",
"Value":64885,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19838":{
"Label":"CAPTST",
"Value":64894,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19844":{
"Label":"ADDINP",
"Value":64900,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19851":{
"Label":"CROUT1",
"Value":64907,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19858":{
"Label":"PRA1",
"Value":64914,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19875":{
"Label":"XAM8",
"Value":64931,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19885":{
"Label":"MOD8CHK",
"Value":64941,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19891":{
"Label":"XAM",
"Value":64947,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19894":{
"Label":"DATAOUT",
"Value":64950,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19910":{
"Label":"XAMPM",
"Value":64966,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19921":{
"Label":"ADD",
"Value":64977,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19941":{
"Label":"PRHEXZ",
"Value":64997,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19939":{
"Label":"PRHEX",
"Value":64995,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19991":{
"Label":"MON_RTS5",
"Value":65047,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19997":{
"Label":"SETMDZ",
"Value":65053,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20002":{
"Label":"LT2",
"Value":65058,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20056":{
"Label":"VFYOK",
"Value":65112,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20085":{
"Label":"A1PC",
"Value":65141,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20088":{
"Label":"A1PCLP",
"Value":65144,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20095":{
"Label":"A1PCRTS",
"Value":65151,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20105":{
"Label":"SETKBD",
"Value":65161,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20102":{
"Label":"SETIFLG",
"Value":65158,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20107":{
"Label":"INPORT",
"Value":65163,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20115":{
"Label":"SETVID",
"Value":65171,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20117":{
"Label":"OUTPORT",
"Value":65173,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20123":{
"Label":"IOPRT",
"Value":65179,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20135":{
"Label":"IOPRT1",
"Value":65191,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20137":{
"Label":"IOPRT2",
"Value":65193,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20180":{
"Label":"WR1",
"Value":65236,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20205":{
"Label":"WRBYTE",
"Value":65261,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20207":{
"Label":"WRBYT2",
"Value":65263,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20234":{
"Label":"MON_RD2",
"Value":65290,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20246":{
"Label":"MON_RD3",
"Value":65302,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20329":{
"Label":"MONZ",
"Value":65385,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20339":{
"Label":"NXTITM",
"Value":65395,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20346":{
"Label":"CHRSRCH",
"Value":65402,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20362":{
"Label":"DIGIT",
"Value":65418,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20368":{
"Label":"NXTBIT",
"Value":65424,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20376":{
"Label":"NXTBAS",
"Value":65432,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20386":{
"Label":"NXTBS2",
"Value":65442,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20391":{
"Label":"GETNUM",
"Value":65447,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20397":{
"Label":"NXTCHR",
"Value":65453,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20414":{
"Label":"TOSUB",
"Value":65470,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20423":{
"Label":"ZMODE",
"Value":65479,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9131":{
"Label":"MVBKPHSA",
"Value":54187,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4112":{
"Label":"KBDSTRB",
"Value":49168,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4144":{
"Label":"SPKR",
"Value":49200,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4178":{
"Label":"MIXCLR",
"Value":49234,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4128":{
"Label":"TAPEOUT",
"Value":49184,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4160":{
"Label":"STROBE",
"Value":49216,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4176":{
"Label":"TXTCLR",
"Value":49232,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4177":{
"Label":"TXTSET",
"Value":49233,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4179":{
"Label":"MIXSET",
"Value":49235,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4180":{
"Label":"TXTPAGE1",
"Value":49236,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4181":{
"Label":"TXTPAGE2",
"Value":49237,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4182":{
"Label":"LORES",
"Value":49238,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4183":{
"Label":"HIRES",
"Value":49239,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4184":{
"Label":"AN0OFF",
"Value":49240,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4185":{
"Label":"AN0ON",
"Value":49241,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4186":{
"Label":"AN1OFF",
"Value":49242,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4187":{
"Label":"AN1ON",
"Value":49243,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4188":{
"Label":"AN2OFF",
"Value":49244,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4189":{
"Label":"AN2ON",
"Value":49245,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4190":{
"Label":"AN3OFF",
"Value":49246,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4191":{
"Label":"AN3ON",
"Value":49247,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4192":{
"Label":"TAPEIN",
"Value":49248,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4200":{
"Label":"TAPEIN_X",
"Value":49256,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4193":{
"Label":"PB0",
"Value":49249,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4201":{
"Label":"PB0_X",
"Value":49257,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4194":{
"Label":"PB1",
"Value":49250,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4202":{
"Label":"PB1_X",
"Value":49258,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4195":{
"Label":"PB2",
"Value":49251,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4203":{
"Label":"PB2_X",
"Value":49259,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4196":{
"Label":"PADDL0",
"Value":49252,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4197":{
"Label":"PADDL1",
"Value":49253,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4198":{
"Label":"PADDL2",
"Value":49254,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4199":{
"Label":"PADDL3",
"Value":49255,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4204":{
"Label":"PADDL0_X",
"Value":49260,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4205":{
"Label":"PADDL1_X",
"Value":49261,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4206":{
"Label":"PADDL2_X",
"Value":49262,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4207":{
"Label":"PADDL3_X",
"Value":49263,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4208":{
"Label":"PTRIG",
"Value":49264,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4224":{
"Label":"IWMPH0OFF",
"Value":49280,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4225":{
"Label":"IWMPH0ON",
"Value":49281,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4233":{
"Label":"IWMMOTORON",
"Value":49289,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4234":{
"Label":"IWMSELDRV1",
"Value":49290,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4236":{
"Label":"IWMQ6OFF",
"Value":49292,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4238":{
"Label":"IWMQ7OFF",
"Value":49294,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4226":{
"Label":"MTSPC3",
"Value":49282,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4235":{
"Label":"MTSPC4",
"Value":49291,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4237":{
"Label":"MTSPC5",
"Value":49293,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"4239":{
"Label":"MTSPC6",
"Value":49295,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"9316":{
"Label":"NMBRDLN2",
"Value":54372,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16675":{
"Label":"RND_SEED",
"Value":61731,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17612":{
"Label":"CON3",
"Value":62668,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"17671":{
"Label":"CON4",
"Value":62727,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16132":{
"Label":"POLY_ONE",
"Value":61188,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16646":{
"Label":"POLYATN_1",
"Value":61702,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"15662":{
"Label":"PRINTFAC",
"Value":60718,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"14632":{
"Label":"POLY_LOG_1",
"Value":59688,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14627":{
"Label":"POLY_LOG_3",
"Value":59683,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14622":{
"Label":"POLY_LOG_5",
"Value":59678,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"14617":{
"Label":"POLY_LOG_7",
"Value":59673,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"16127":{
"Label":"POLY_EXP_L2",
"Value":61183,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16641":{
"Label":"POLYATN_2",
"Value":61697,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16636":{
"Label":"POLYATN_3",
"Value":61692,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16631":{
"Label":"POLYATN_4",
"Value":61687,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16626":{
"Label":"POLYATN_5",
"Value":61682,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16621":{
"Label":"POLYATN_6",
"Value":61677,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16616":{
"Label":"POLYATN_7",
"Value":61672,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16611":{
"Label":"POLYATN_8",
"Value":61667,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16606":{
"Label":"POLYATN_9",
"Value":61662,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16601":{
"Label":"POLYATN_A",
"Value":61657,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16596":{
"Label":"POLYATN_B",
"Value":61652,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"16591":{
"Label":"POLYATN_C",
"Value":61647,
"Source":"User",
"Type":"LocalOrGlobalAddr",
"LabelAnno":"None"},

"10617":{
"Label":"NOGSBERR",
"Value":55673,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"13360":{
"Label":"FRM2CPXERR",
"Value":58416,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"13746":{
"Label":"STR2LGERR",
"Value":58802,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"11531":{
"Label":"NOFORERR",
"Value":56587,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"12732":{
"Label":"NODATERR",
"Value":57788,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"13067":{
"Label":"IDERR",
"Value":58123,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"11147":{
"Label":"BADRESPERR",
"Value":56203,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19254":{
"Label":"TEXT02",
"Value":64310,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"19251":{
"Label":"TEXT01",
"Value":64307,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"1536":{
"Label":"DISK2RAM",
"Value":46592,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"17511":{
"Label":"MVLEFT",
"Value":62567,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"18490":{
"Label":"CLRSCR4",
"Value":63546,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18477":{
"Label":"VLINE2",
"Value":63533,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"18496":{
"Label":"CLRSCR5",
"Value":63552,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"18536":{
"Label":"NIBLOHI",
"Value":63592,
"Source":"User",
"Type":"GlobalAddr",
"LabelAnno":"None"},

"19311":{
"Label":"SETPWRC",
"Value":64367,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19789":{
"Label":"NOTCR5",
"Value":64845,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19800":{
"Label":"NOTCR4",
"Value":64856,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19802":{
"Label":"NOTCR3",
"Value":64858,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19804":{
"Label":"NOTCR2",
"Value":64860,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19865":{
"Label":"PRYX3",
"Value":64921,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19964":{
"Label":"COUTA",
"Value":65020,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20142":{
"Label":"MON_NOP3",
"Value":65198,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20143":{
"Label":"MON_NOP4",
"Value":65199,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19157":{
"Label":"MON_NOP1",
"Value":64213,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"19158":{
"Label":"MON_NOP2",
"Value":64214,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20153":{
"Label":"GO1",
"Value":65209,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20156":{
"Label":"GO2",
"Value":65212,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"},

"20269":{
"Label":"MON_RDERR",
"Value":65325,
"Source":"User",
"Type":"GlobalAddrExport",
"LabelAnno":"None"}},

"OperandFormats":{
"0":{
"Length":1536,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"1536":{
"Length":256,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"1792":{
"Length":2304,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4096":{
"Length":16,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4112":{
"Length":16,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4128":{
"Length":16,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4144":{
"Length":16,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4160":{
"Length":16,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4208":{
"Length":16,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4226":{
"Length":7,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4239":{
"Length":113,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4352":{
"Length":256,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4608":{
"Length":256,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"4864":{
"Length":256,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"5120":{
"Length":256,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"5376":{
"Length":256,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"5638":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMBITS",
"Part":"Low"}},

"5642":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMBITS",
"Part":"Low"}},

"5646":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMBITS",
"Part":"Low"}},

"5648":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"5650":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"5658":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CNVTBL",
"Part":"Low"}},

"5665":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IORTS",
"Part":"Low"}},

"5669":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"5676":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMSLTNDX",
"Part":"Low"}},

"5679":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMQ7OFF",
"Part":"Low"}},

"5682":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMQ6OFF",
"Part":"Low"}},

"5685":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMSELDRV1",
"Part":"Low"}},

"5688":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMMOTORON",
"Part":"Low"}},

"5691":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"5693":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMPH0OFF",
"Part":"Low"}},

"5697":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"5700":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMSLTNDX",
"Part":"Low"}},

"5703":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMPH0ON",
"Part":"Low"}},

"5706":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"5708":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MON_WAIT",
"Part":"Low"}},

"5714":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMDATAPTR",
"Part":"Low"}},

"5716":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMSECTOR",
"Part":"Low"}},

"5718":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMTRACK",
"Part":"Low"}},

"5720":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BOOT1",
"Part":"High"}},

"5722":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMDATAPTR",
"Part":"Low"}},

"5726":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMQ6OFF",
"Part":"Low"}},

"5735":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMQ6OFF",
"Part":"Low"}},

"5745":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMQ6OFF",
"Part":"Low"}},

"5765":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMTRKFND",
"Part":"Low"}},

"5767":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMQ6OFF",
"Part":"Low"}},

"5773":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMBITS",
"Part":"Low"}},

"5775":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMQ6OFF",
"Part":"Low"}},

"5780":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMBITS",
"Part":"Low"}},

"5786":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMBITS",
"Part":"Low"}},

"5790":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMTRKFND",
"Part":"Low"}},

"5798":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"5800":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMBITS",
"Part":"Low"}},

"5802":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMQ6OFF",
"Part":"Low"}},

"5807":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CNVTBL",
"Part":"Low"}},

"5810":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMBITS",
"Part":"Low"}},

"5818":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMBITS",
"Part":"Low"}},

"5820":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMQ6OFF",
"Part":"Low"}},

"5825":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CNVTBL",
"Part":"Low"}},

"5828":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMBITS",
"Part":"Low"}},

"5830":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMDATAPTR",
"Part":"Low"}},

"5835":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMQ6OFF",
"Part":"Low"}},

"5840":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CNVTBL",
"Part":"Low"}},

"5852":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMDATAPTR",
"Part":"Low"}},

"5862":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMDATAPTR",
"Part":"Low"}},

"5867":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMDATAPTR",
"Part":"Low"}},

"5869":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMSECTOR",
"Part":"Low"}},

"5871":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMSECTOR",
"Part":"Low"}},

"5876":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IWMSLTNDX",
"Part":"Low"}},

"5880":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BOOT1",
"Part":"Low"}},

"5883":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"5888":{
"Length":256,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"6144":{
"Length":1534,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"7678":{
"Length":341,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"8019":{
"Length":137,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"8156":{
"Length":35,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"8191":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"8192":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"END",
"Part":"Low"}},

"8194":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOR",
"Part":"Low"}},

"8196":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NEXT",
"Part":"Low"}},

"8198":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DATA",
"Part":"Low"}},

"8200":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPUT",
"Part":"Low"}},

"8202":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DEL",
"Part":"Low"}},

"8204":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DIM",
"Part":"Low"}},

"8206":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_READ",
"Part":"Low"}},

"8208":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GR",
"Part":"Low"}},

"8210":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEXT",
"Part":"Low"}},

"8212":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PR_NUMBER",
"Part":"Low"}},

"8214":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IN_NUMBER",
"Part":"Low"}},

"8216":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CALL",
"Part":"Low"}},

"8218":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_PLOT",
"Part":"Low"}},

"8220":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HLIN",
"Part":"Low"}},

"8222":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VLIN",
"Part":"Low"}},

"8224":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGR2",
"Part":"Low"}},

"8226":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGR",
"Part":"Low"}},

"8228":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HCOLOR",
"Part":"Low"}},

"8230":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HPLOT",
"Part":"Low"}},

"8232":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DRAW",
"Part":"Low"}},

"8234":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"XDRAW",
"Part":"Low"}},

"8236":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HTAB",
"Part":"Low"}},

"8238":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HOME",
"Part":"Low"}},

"8240":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ROT",
"Part":"Low"}},

"8242":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SCALE",
"Part":"Low"}},

"8244":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SHLOAD",
"Part":"Low"}},

"8246":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TRACE",
"Part":"Low"}},

"8248":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NOTRACE",
"Part":"Low"}},

"8250":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NORMAL",
"Part":"Low"}},

"8252":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INVERSE",
"Part":"Low"}},

"8254":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FLASH",
"Part":"Low"}},

"8256":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COLOR",
"Part":"Low"}},

"8258":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POPRTN",
"Part":"Low"}},

"8260":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VTAB",
"Part":"Low"}},

"8262":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIMEM",
"Part":"Low"}},

"8264":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOMEM",
"Part":"Low"}},

"8266":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ONERR",
"Part":"Low"}},

"8268":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESUME",
"Part":"Low"}},

"8270":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RECALL",
"Part":"Low"}},

"8272":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STORE",
"Part":"Low"}},

"8274":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SPEED",
"Part":"Low"}},

"8276":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LET",
"Part":"Low"}},

"8278":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GOTO",
"Part":"Low"}},

"8280":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RUN",
"Part":"Low"}},

"8282":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IF",
"Part":"Low"}},

"8284":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESTORE",
"Part":"Low"}},

"8286":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"AMPERV",
"Part":"Low"}},

"8288":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GOSUB",
"Part":"Low"}},

"8290":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POPRTN",
"Part":"Low"}},

"8292":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"REM",
"Part":"Low"}},

"8294":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STOP",
"Part":"Low"}},

"8296":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ONGOTO",
"Part":"Low"}},

"8298":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"WAIT",
"Part":"Low"}},

"8300":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_LOAD",
"Part":"Low"}},

"8302":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_SAVE",
"Part":"Low"}},

"8304":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DEF",
"Part":"Low"}},

"8306":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POKE",
"Part":"Low"}},

"8308":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRINT",
"Part":"Low"}},

"8310":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CONT",
"Part":"Low"}},

"8312":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LIST",
"Part":"Low"}},

"8314":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CLEAR",
"Part":"Low"}},

"8316":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GET",
"Part":"Low"}},

"8318":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NEW",
"Part":"Low"}},

"8320":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGN",
"Part":"Low"}},

"8322":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INT",
"Part":"Low"}},

"8324":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ABS",
"Part":"Low"}},

"8326":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_USRVEC",
"Part":"Low"}},

"8328":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRE",
"Part":"Low"}},

"8330":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERROR",
"Part":"Low"}},

"8332":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PDL",
"Part":"Low"}},

"8334":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POS",
"Part":"Low"}},

"8336":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SQR",
"Part":"Low"}},

"8338":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RND",
"Part":"Low"}},

"8340":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOG",
"Part":"Low"}},

"8342":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXP",
"Part":"Low"}},

"8344":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COS",
"Part":"Low"}},

"8346":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SIN",
"Part":"Low"}},

"8348":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TAN",
"Part":"Low"}},

"8350":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ATN",
"Part":"Low"}},

"8352":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PEEK",
"Part":"Low"}},

"8354":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LEN",
"Part":"Low"}},

"8356":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STR",
"Part":"Low"}},

"8358":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VAL",
"Part":"Low"}},

"8360":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ASC",
"Part":"Low"}},

"8362":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRSTR",
"Part":"Low"}},

"8364":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LEFTSTR",
"Part":"Low"}},

"8366":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RIGHTSTR",
"Part":"Low"}},

"8368":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MIDSTR",
"Part":"Low"}},

"8370":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_ADD",
"Part":"Low"}},

"8371":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FADDT",
"Part":"Low"}},

"8373":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_ADD",
"Part":"Low"}},

"8374":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FSUBT",
"Part":"Low"}},

"8376":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_MUL",
"Part":"Low"}},

"8377":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FMULTT",
"Part":"Low"}},

"8379":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_MUL",
"Part":"Low"}},

"8380":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FDIVT",
"Part":"Low"}},

"8382":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_PWR",
"Part":"Low"}},

"8383":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FPWRT",
"Part":"Low"}},

"8385":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_AND",
"Part":"Low"}},

"8386":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"AND",
"Part":"Low"}},

"8388":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_OR",
"Part":"Low"}},

"8389":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OR",
"Part":"Low"}},

"8391":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_NEQ",
"Part":"Low"}},

"8392":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NEGOP",
"Part":"Low"}},

"8394":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_NEQ",
"Part":"Low"}},

"8395":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EQUOP",
"Part":"Low"}},

"8397":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_REL",
"Part":"Low"}},

"8398":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RELOPS",
"Part":"Low"}},

"8400":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8403":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8406":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8410":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8414":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8419":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8422":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8425":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8429":{
"Length":2,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8431":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8435":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8438":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8441":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8445":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8449":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8453":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8457":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8461":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8464":{
"Length":7,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8471":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8476":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8480":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8485":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8489":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8493":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8497":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8503":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8509":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8514":{
"Length":7,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8521":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8527":{
"Length":7,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8534":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8539":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8545":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8548":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8552":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8558":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8564":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8569":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8575":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8581":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8586":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8592":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8595":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8599":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8602":{
"Length":2,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8604":{
"Length":7,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8611":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"8612":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8617":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8623":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8626":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8630":{
"Length":2,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8632":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8636":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8640":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8644":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8647":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8651":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8656":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8660":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8664":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8669":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8672":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8675":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8679":{
"Length":2,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8681":{
"Length":2,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8683":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8687":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8691":{
"Length":2,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8693":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8696":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8700":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"8701":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"8702":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"8703":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"8704":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"8705":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8708":{
"Length":2,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8710":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"8711":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"8712":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"8713":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8716":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8719":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8722":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8725":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8728":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8733":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8736":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8739":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8742":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8745":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8748":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8751":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8754":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8757":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8760":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8763":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8767":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8770":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8774":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8777":{
"Length":3,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8780":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8784":{
"Length":5,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8789":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8795":{
"Length":4,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8799":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"8800":{
"Length":16,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8816":{
"Length":6,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8822":{
"Length":20,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8842":{
"Length":11,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8853":{
"Length":16,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8869":{
"Length":8,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8877":{
"Length":13,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8890":{
"Length":17,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8907":{
"Length":13,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8920":{
"Length":13,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8933":{
"Length":16,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8949":{
"Length":14,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8963":{
"Length":13,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8976":{
"Length":15,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"8991":{
"Length":19,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"9010":{
"Length":14,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"9024":{
"Length":16,
"Format":"StringDci",
"SubFormat":"Ascii",
"SymbolRef":null},

"9040":{
"Length":8,
"Format":"StringNullTerm",
"SubFormat":"Ascii",
"SymbolRef":null},

"9048":{
"Length":5,
"Format":"StringNullTerm",
"SubFormat":"Ascii",
"SymbolRef":null},

"9053":{
"Length":8,
"Format":"StringNullTerm",
"SubFormat":"Ascii",
"SymbolRef":null},

"9066":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"9069":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_FOR",
"Part":"Low"}},

"9073":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"9077":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"9080":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"9082":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"9085":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"9087":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"9094":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"9101":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"9107":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"REASON",
"Part":"Low"}},

"9110":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"9112":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"9115":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHTR",
"Part":"Low"}},

"9117":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"9122":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHTR",
"Part":"Low"}},

"9124":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"9140":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHTR",
"Part":"Low"}},

"9143":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"9147":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"9151":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"9166":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHTR",
"Part":"Low"}},

"9168":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"9177":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMERR",
"Part":"Low"}},

"9179":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STKPTR",
"Part":"Low"}},

"9182":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STKPTR",
"Part":"Low"}},

"9184":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMERR",
"Part":"Low"}},

"9187":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"9189":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_RTS01",
"Part":"Low"}},

"9191":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MAXFRESPC",
"Part":"Low"}},

"9193":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"9195":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_RTS01",
"Part":"Low"}},

"9205":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PUSHNINE",
"Part":"Low"}},

"9207":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GARBAGE",
"Part":"Low"}},

"9213":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"9216":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PULLNINE",
"Part":"Low"}},

"9221":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"9223":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_RTS01",
"Part":"Low"}},

"9225":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMERR",
"Part":"Low"}},

"9229":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMERR",
"Part":"Low"}},

"9232":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_MEMFULL",
"Part":"Low"}},

"9234":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRFLG",
"Part":"Low"}},

"9247":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_MSGS",
"Part":"Low"}},

"9261":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"QT_ERROR",
"Part":"Low"}},

"9263":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"QT_ERROR",
"Part":"High"}},

"9268":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"9273":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPRT",
"Part":"Low"}},

"9279":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"9284":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"9286":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"9290":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGET",
"Part":"Low"}},

"9298":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"9308":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGEND",
"Part":"Low"}},

"9310":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"9312":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGEND",
"Part":"Low"}},

"9314":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"9322":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKNCNTR",
"Part":"Low"}},

"9333":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SRCPTR",
"Part":"Low"}},

"9337":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SRCPTR",
"Part":"Low"}},

"9339":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"9341":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"9355":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"9359":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"9361":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"9373":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"9376":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SRCPTR",
"Part":"Low"}},

"9380":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SRCPTR",
"Part":"Low"}},

"9383":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SRCPTR",
"Part":"Low"}},

"9390":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SRCPTR",
"Part":"Low"}},

"9392":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"9397":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"Low"}},

"9404":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"9408":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"9414":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKNCNTR",
"Part":"Low"}},

"9416":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"9418":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"9420":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHTR",
"Part":"Low"}},

"9425":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"9427":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MVBLKUP1",
"Part":"Low"}},

"9432":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"9434":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IMGLINNUM",
"Part":"Low"}},

"9437":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IMGLINNUM",
"Part":"Low"}},

"9442":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"9446":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"9448":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKNCNTR",
"Part":"Low"}},

"9450":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINEIMAGE",
"Part":"Low"}},

"9463":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"9465":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINPTR",
"Part":"Low"}},

"9467":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINPTR",
"Part":"Low"}},

"9470":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"9472":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINPTR",
"Part":"Low"}},

"9480":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"9482":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGEND",
"Part":"Low"}},

"9487":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"9490":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINPTR",
"Part":"Low"}},

"9496":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINPTR",
"Part":"Low"}},

"9499":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"9501":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINPTR",
"Part":"Low"}},

"9503":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINPTR",
"Part":"Low"}},

"9505":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"9508":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINPTR",
"Part":"Low"}},

"9510":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINPTR",
"Part":"Low"}},

"9512":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINPTR",
"Part":"Low"}},

"9518":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PROMPT",
"Part":"Low"}},

"9527":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"9540":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"9550":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"Low"}},

"9552":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"High"}},

"9558":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"9564":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"9568":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"AUTORUN",
"Part":"Low"}},

"9588":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9592":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ENDCHR",
"Part":"Low"}},

"9594":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9600":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9604":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_PRINT",
"Part":"Low"}},

"9608":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9612":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9616":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"9618":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKNMTBL",
"Part":"Low"}},

"9622":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKNMTBL",
"Part":"High"}},

"9624":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"9626":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"9628":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKNCNTR",
"Part":"Low"}},

"9637":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"9643":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9656":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKNCNTR",
"Part":"Low"}},

"9658":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_AT",
"Part":"Low"}},

"9662":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"Low"}},

"9665":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9669":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9673":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_AT",
"Part":"Low"}},

"9688":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9692":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_DATA",
"Part":"Low"}},

"9699":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_REM",
"Part":"Low"}},

"9723":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKNCNTR",
"Part":"Low"}},

"9730":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"9744":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINEIMAGE",
"Part":"Low"}},

"9747":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"9756":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"9758":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"9762":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"9770":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"9774":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_RTS02",
"Part":"Low"}},

"9821":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"9825":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"9827":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGEND",
"Part":"Low"}},

"9829":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CLRTXTPTR",
"Part":"Low"}},

"9838":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"9842":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"9846":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"9848":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"9850":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"9854":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"9856":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESTORE",
"Part":"Low"}},

"9859":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMPST",
"Part":"Low"}},

"9874":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDTEXT",
"Part":"Low"}},

"9886":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"9890":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"9893":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRTRNG",
"Part":"Low"}},

"9897":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_MINUS",
"Part":"Low"}},

"9901":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9911":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGOT",
"Part":"Low"}},

"9916":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_MINUS",
"Part":"Low"}},

"9920":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9936":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"9944":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"9946":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"9965":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"9980":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"9984":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"9991":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"9998":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10016":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"10020":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RTNL",
"Part":"Low"}},

"10031":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"10044":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKNMTBL",
"Part":"Low"}},

"10048":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKNMTBL",
"Part":"High"}},

"10050":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"10064":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"10082":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"10093":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GETFORPTR",
"Part":"Low"}},

"10105":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10107":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHKMEM",
"Part":"Low"}},

"10118":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"10123":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10129":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_TO",
"Part":"Low"}},

"10140":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"10142":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"10144":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"10146":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"10148":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STEP",
"Part":"Low"}},

"10150":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STEP",
"Part":"High"}},

"10152":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"10154":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"10159":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_ONE",
"Part":"Low"}},

"10161":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_ONE",
"Part":"High"}},

"10169":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_STEP",
"Part":"Low"}},

"10185":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"10191":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_FOR",
"Part":"Low"}},

"10202":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"10204":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10211":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDTEXT",
"Part":"Low"}},

"10213":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10219":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10234":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10243":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"10249":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10254":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"10261":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10292":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKADTBL",
"Part":"Low"}},

"10296":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TKADTBL",
"Part":"Low"}},

"10306":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"10316":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10318":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"10325":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DATPTR",
"Part":"Low"}},

"10328":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"KBD",
"Part":"Low"}},

"10331":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CTRLCH",
"Part":"Low"}},

"10339":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CTRLCIRQ",
"Part":"Low"}},

"10348":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CTRLCL",
"Part":"Low"}},

"10357":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"10359":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10366":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDTEXT",
"Part":"Low"}},

"10370":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10374":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDLIN",
"Part":"Low"}},

"10378":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"QT_BREAK",
"Part":"Low"}},

"10380":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"QT_BREAK",
"Part":"High"}},

"10392":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_CANTCONT",
"Part":"Low"}},

"10394":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDTEXT",
"Part":"Low"}},

"10405":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"10413":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10417":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGEND",
"Part":"Low"}},

"10419":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"10421":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10423":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGEND",
"Part":"Low"}},

"10425":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"10427":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10448":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"10450":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10452":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"10454":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"10456":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10458":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"10460":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMPPT",
"Part":"Low"}},

"10462":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"AUTORUN",
"Part":"Low"}},

"10470":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"AUTORUN",
"Part":"Low"}},

"10480":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10488":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMPPT",
"Part":"Low"}},

"10497":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"10499":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"10505":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"10507":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"10515":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10531":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHKMEM",
"Part":"Low"}},

"10534":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"10540":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10546":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_GOSUB",
"Part":"Low"}},

"10564":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10566":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10574":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"10581":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"10583":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"10592":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10598":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10600":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"10613":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_GOSUB",
"Part":"Low"}},

"10617":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_NOGOSUB",
"Part":"Low"}},

"10619":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"10620":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_UNDEFSTAT",
"Part":"Low"}},

"10637":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"10643":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"10656":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"10659":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"10661":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"10662":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10664":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHARAC",
"Part":"Low"}},

"10666":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10687":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"10703":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_GOTO",
"Part":"Low"}},

"10707":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_THEN",
"Part":"Low"}},

"10736":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_GOSUB",
"Part":"Low"}},

"10740":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_GOTO",
"Part":"Low"}},

"10744":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"10758":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"10764":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10768":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10772":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"10776":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10798":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10800":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10804":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10814":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"10827":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"10829":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_EQUAL",
"Part":"Low"}},

"10861":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"10866":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"10871":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SETFOR",
"Part":"Low"}},

"10875":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"10877":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"10879":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"10886":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"10888":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"10892":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"10894":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"10900":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"10906":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"10908":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"10915":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"10920":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"10922":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"10924":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"10926":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"10928":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MOVINS",
"Part":"Low"}},

"10931":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"10933":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"High"}},

"10935":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"10937":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"10967":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_RTS10",
"Part":"Low"}},

"10969":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_TAB",
"Part":"Low"}},

"10973":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_SPC",
"Part":"Low"}},

"10978":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"10983":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"10990":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"11003":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RTNL",
"Part":"Low"}},

"11008":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"11013":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11022":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11024":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"11034":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11085":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RTNL",
"Part":"Low"}},

"11095":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11097":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"11098":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11100":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"11102":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"11111":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"11121":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPUTFLG",
"Part":"Low"}},

"11131":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DATLIN",
"Part":"Low"}},

"11133":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DATLIN",
"Part":"Low"}},

"11137":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"11147":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_BADRESP",
"Part":"Low"}},

"11152":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_REENTRY",
"Part":"Low"}},

"11154":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_REENTRY",
"Part":"High"}},

"11159":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDTEXT",
"Part":"Low"}},

"11161":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDTEXT",
"Part":"Low"}},

"11163":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11165":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11171":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"Low"}},

"11173":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"High"}},

"11177":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"Low"}},

"11186":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11193":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11210":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11221":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CTRLCL",
"Part":"Low"}},

"11236":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DATPTR",
"Part":"Low"}},

"11240":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"11245":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPTR",
"Part":"Low"}},

"11247":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPTR",
"Part":"Low"}},

"11252":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"11254":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"11256":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11258":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11260":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXPSV",
"Part":"Low"}},

"11262":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXPSV",
"Part":"Low"}},

"11264":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPTR",
"Part":"Low"}},

"11266":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPTR",
"Part":"Low"}},

"11270":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11272":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGOT",
"Part":"Low"}},

"11284":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"11286":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"Low"}},

"11289":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"Low"}},

"11291":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"High"}},

"11305":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11307":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGET",
"Part":"Low"}},

"11310":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"11321":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11329":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11333":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11337":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11344":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11346":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11383":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11392":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11394":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPTR",
"Part":"Low"}},

"11396":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPTR",
"Part":"Low"}},

"11398":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXPSV",
"Part":"Low"}},

"11400":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXPSV",
"Part":"Low"}},

"11404":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11431":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_NODATA",
"Part":"Low"}},

"11441":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DATLIN",
"Part":"Low"}},

"11447":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DATLIN",
"Part":"Low"}},

"11455":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_DATA",
"Part":"Low"}},

"11462":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPTR",
"Part":"Low"}},

"11464":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPTR",
"Part":"Low"}},

"11473":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11475":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INPTR",
"Part":"Low"}},

"11479":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_EXTRA",
"Part":"Low"}},

"11481":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_EXTRA",
"Part":"High"}},

"11487":{
"Length":16,
"Format":"StringNullTerm",
"SubFormat":"Ascii",
"SymbolRef":null},

"11503":{
"Length":10,
"Format":"StringNullTerm",
"SubFormat":"Ascii",
"SymbolRef":null},

"11515":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11522":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"11524":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"11531":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_NOFOR",
"Part":"Low"}},

"11549":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"High"}},

"11555":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"11560":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"11562":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"11570":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"High"}},

"11577":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"11582":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"11585":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"11587":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"11590":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"11592":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"11595":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11597":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"11600":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11606":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11610":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGOT",
"Part":"Low"}},

"11613":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11617":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGET",
"Part":"Low"}},

"11627":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ZP",
"Part":"Low"}},

"11638":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_BADTYPE",
"Part":"Low"}},

"11647":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11653":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ZP",
"Part":"Low"}},

"11657":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11659":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHKMEM",
"Part":"Low"}},

"11673":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_GREATER",
"Part":"Low"}},

"11677":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11681":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11684":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"11706":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11710":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"11719":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"11722":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"11726":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MATHTBL",
"Part":"Low"}},

"11739":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LASTOP",
"Part":"Low"}},

"11748":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"11752":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11756":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11758":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11762":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CPRTYP",
"Part":"Low"}},

"11766":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MATHTBL",
"Part":"Low"}},

"11773":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MATHTBL",
"Part":"Low"}},

"11777":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MATHTBL",
"Part":"Low"}},

"11792":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"11794":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MATHTBL",
"Part":"Low"}},

"11804":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"11811":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"11814":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"11817":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"11820":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"11823":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"11834":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"P_REL",
"Part":"Low"}},

"11841":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LASTOP",
"Part":"Low"}},

"11845":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CPRMASK",
"Part":"Low"}},

"11848":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"11851":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"11854":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"11857":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"11860":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"11863":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGSIGN",
"Part":"Low"}},

"11865":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"11867":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGNCPR",
"Part":"Low"}},

"11869":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"11874":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"11876":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGET",
"Part":"Low"}},

"11889":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11893":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_MINUS",
"Part":"Low"}},

"11897":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_PLUS",
"Part":"Low"}},

"11901":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11907":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"11920":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_NOT",
"Part":"Low"}},

"11934":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"11940":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_FN",
"Part":"Low"}},

"11947":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_SGN",
"Part":"Low"}},

"11960":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11962":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"11963":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11965":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"11966":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"11968":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"11977":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_SYNTAX",
"Part":"Low"}},

"11992":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"11994":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"12005":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INTFLG",
"Part":"Low"}},

"12009":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12011":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"12015":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"12044":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_SCRN",
"Part":"Low"}},

"12054":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"UNFNC",
"Part":"High"}},

"12072":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"12095":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"UNFNC",
"Part":"Low"}},

"12098":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"JMPADRS",
"Part":"Low"}},

"12100":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"UNFNC",
"Part":"Low"}},

"12103":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"JMPADRS",
"Part":"Low"}},

"12111":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"12113":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"12117":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"12121":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"12127":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"12140":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"12142":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"12144":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"12146":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"12148":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12166":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMP",
"Part":"Low"}},

"12172":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGVPTR",
"Part":"Low"}},

"12174":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGVPTR",
"Part":"Low"}},

"12179":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGVPTR",
"Part":"Low"}},

"12181":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGVPTR",
"Part":"Low"}},

"12185":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMP",
"Part":"Low"}},

"12189":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12193":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMP",
"Part":"Low"}},

"12223":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12228":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CPRMASK",
"Part":"Low"}},

"12264":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DIMFLG",
"Part":"Low"}},

"12266":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12291":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESTART",
"Part":"Low"}},

"12295":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGET",
"Part":"Low"}},

"12306":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGET",
"Part":"Low"}},

"12316":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"12322":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"12326":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"12330":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SUBFLG",
"Part":"Low"}},

"12336":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INTFLG",
"Part":"Low"}},

"12338":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12340":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12349":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12354":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"12371":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"12373":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"12375":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12377":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12381":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"12385":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"12389":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12395":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12406":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12413":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"12417":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"12425":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNDNUMVAR",
"Part":"Low"}},

"12430":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"12433":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNDNUMVAR",
"Part":"High"}},

"12437":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_ZERO",
"Part":"Low"}},

"12439":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_ZERO",
"Part":"High"}},

"12442":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"12444":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"12446":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"12448":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12450":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12452":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"12454":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"12456":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHTR",
"Part":"Low"}},

"12458":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHTR",
"Part":"Low"}},

"12461":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12466":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"12468":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"12470":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MVBLKUP1",
"Part":"Low"}},

"12473":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"12475":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"12478":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"12480":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"12482":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12484":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12489":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12493":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12513":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12515":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12520":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"12522":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"12525":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NUMDIM",
"Part":"Low"}},

"12528":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12530":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12532":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12537":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"12539":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"12542":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"12562":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NEG32768",
"Part":"Low"}},

"12564":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NEG32768",
"Part":"High"}},

"12566":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FCOMP",
"Part":"Low"}},

"12574":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SUBFLG",
"Part":"Low"}},

"12578":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DIMFLG",
"Part":"Low"}},

"12580":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INTFLG",
"Part":"Low"}},

"12583":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"12586":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12590":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12593":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12600":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12603":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12608":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"12612":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"12616":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"12618":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"12621":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"12623":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"12630":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"12634":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NUMDIM",
"Part":"Low"}},

"12640":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"12643":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INTFLG",
"Part":"Low"}},

"12645":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"12647":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DIMFLG",
"Part":"Low"}},

"12649":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"12651":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"12653":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12655":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12657":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"12661":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"12665":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12667":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12670":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12674":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12676":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12681":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12684":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12688":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12690":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12694":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_BADSUBS",
"Part":"Low"}},

"12696":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"12697":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_ILLQTY",
"Part":"Low"}},

"12702":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_REDIMD",
"Part":"Low"}},

"12704":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DIMFLG",
"Part":"Low"}},

"12708":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SUBFLG",
"Part":"Low"}},

"12717":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NUMDIM",
"Part":"Low"}},

"12719":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12728":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SUBFLG",
"Part":"Low"}},

"12732":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_NODATA",
"Part":"Low"}},

"12740":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"REASON",
"Part":"Low"}},

"12743":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12746":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12748":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12750":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12752":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12758":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12760":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12766":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12768":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NUMDIM",
"Part":"Low"}},

"12773":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12775":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12777":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12779":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DIMFLG",
"Part":"Low"}},

"12785":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12789":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12792":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12796":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12801":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12803":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12807":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NUMDIM",
"Part":"Low"}},

"12811":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"12815":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"12819":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"12826":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"REASON",
"Part":"Low"}},

"12829":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"12831":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"12833":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12835":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12837":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12842":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"12846":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"12848":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12852":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"12855":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"12857":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12859":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12861":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12863":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"12866":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12868":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"12870":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DIMFLG",
"Part":"Low"}},

"12877":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NUMDIM",
"Part":"Low"}},

"12879":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12881":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12883":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12888":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"12891":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"12908":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMERR",
"Part":"Low"}},

"12912":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12914":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12923":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"12929":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"12931":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12933":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NUMDIM",
"Part":"Low"}},

"12937":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"12939":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12941":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12946":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARNAM",
"Part":"Low"}},

"12952":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"12954":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12960":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"12962":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"12965":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"12967":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"12970":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"12977":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"12982":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"12984":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12986":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDX",
"Part":"Low"}},

"12988":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"12990":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13000":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"13002":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"13008":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"13012":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"13017":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDX",
"Part":"Low"}},

"13022":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"13033":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13035":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"13038":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13040":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"13042":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13044":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"13046":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"13048":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"13057":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13062":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"13067":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_ILLDIR",
"Part":"Low"}},

"13069":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"13070":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_UNDEFFUNC",
"Part":"Low"}},

"13086":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SUBFLG",
"Part":"Low"}},

"13097":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_EQUAL",
"Part":"Low"}},

"13103":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"13109":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"13112":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"13121":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_FN",
"Part":"Low"}},

"13128":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SUBFLG",
"Part":"Low"}},

"13133":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13135":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13143":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13146":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13156":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13159":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13161":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13163":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13165":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"13169":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13173":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"13176":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"13182":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"13187":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"13190":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"13193":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13195":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"13198":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13200":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"13202":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"13205":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"13212":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13215":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13229":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"13231":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13256":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"High"}},

"13263":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"13265":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"High"}},

"13269":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"13271":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"13273":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"13275":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"13280":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMPL",
"Part":"Low"}},

"13282":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMPH",
"Part":"Low"}},

"13284":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMP",
"Part":"Low"}},

"13287":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"13293":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13295":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13297":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMPL",
"Part":"Low"}},

"13299":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMPH",
"Part":"Low"}},

"13316":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"13321":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMP",
"Part":"Low"}},

"13324":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13326":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"13328":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13333":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"13335":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13339":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"High"}},

"13349":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13354":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMPPT",
"Part":"Low"}},

"13356":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13360":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_FRMCPX",
"Part":"Low"}},

"13365":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMP",
"Part":"Low"}},

"13367":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC0",
"Part":"Low"}},

"13369":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMPL",
"Part":"Low"}},

"13371":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC0",
"Part":"Low"}},

"13373":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMPH",
"Part":"Low"}},

"13375":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC0",
"Part":"Low"}},

"13379":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"13381":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"13384":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VALTYP",
"Part":"Low"}},

"13386":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LASTPT",
"Part":"Low"}},

"13391":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMPPT",
"Part":"Low"}},

"13394":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GARFLG",
"Part":"Low"}},

"13397":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"13400":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13402":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13407":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"13413":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"13417":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13419":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13421":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRESPC",
"Part":"Low"}},

"13423":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRESPC",
"Part":"Low"}},

"13428":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_MEMFULL",
"Part":"Low"}},

"13430":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GARFLG",
"Part":"Low"}},

"13439":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GARFLG",
"Part":"Low"}},

"13444":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"13446":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"13448":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13450":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13452":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13454":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13458":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"13462":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"13464":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMPST",
"Part":"Low"}},

"13466":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMPST",
"Part":"High"}},

"13468":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13470":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13472":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMPPT",
"Part":"Low"}},

"13481":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13483":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCLEN",
"Part":"Low"}},

"13485":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"13487":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"13489":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13491":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13493":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"13497":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYTAB",
"Part":"Low"}},

"13506":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13508":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13510":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13514":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13516":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13518":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"13529":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13531":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13533":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13535":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13539":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13543":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13545":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13547":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13550":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13552":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13554":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13563":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13565":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13568":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13570":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13572":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13576":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13578":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13580":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13584":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13593":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13598":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13603":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13608":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13612":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13614":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13620":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13624":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"13630":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"13634":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"13636":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"13638":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13640":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13642":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13644":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13646":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCLEN",
"Part":"Low"}},

"13648":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GARLEN",
"Part":"Low"}},

"13650":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCLEN",
"Part":"Low"}},

"13653":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13655":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13659":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13661":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13663":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13666":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13670":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GARLEN",
"Part":"Low"}},

"13672":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"13676":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GARLEN",
"Part":"Low"}},

"13678":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13680":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"13682":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHTR",
"Part":"Low"}},

"13684":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"13686":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13688":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHTR",
"Part":"Low"}},

"13690":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13692":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13694":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13696":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13698":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MVBLKUP2",
"Part":"Low"}},

"13701":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GARLEN",
"Part":"Low"}},

"13704":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13706":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13709":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13711":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIGHDS",
"Part":"Low"}},

"13714":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FNCNAM",
"Part":"Low"}},

"13719":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"13722":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"13732":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13735":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13737":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13739":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13742":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"13746":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_STRLONG",
"Part":"Low"}},

"13757":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"13759":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"13767":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13769":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG1",
"Part":"Low"}},

"13780":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13794":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13796":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13803":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13805":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRESPC",
"Part":"Low"}},

"13812":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRESPC",
"Part":"Low"}},

"13814":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRESPC",
"Part":"Low"}},

"13818":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRESPC",
"Part":"Low"}},

"13824":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"13826":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPVPTR",
"Part":"Low"}},

"13830":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13836":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13853":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13857":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13863":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13865":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13869":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"13872":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13874":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13877":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LASTPT",
"Part":"Low"}},

"13881":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LASTPT",
"Part":"Low"}},

"13887":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13891":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13899":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13905":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13907":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMPL",
"Part":"Low"}},

"13917":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"13922":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"13932":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"13934":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"13943":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13945":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13949":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"13964":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"13971":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"13976":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"13993":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"13999":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14001":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14005":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14015":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GARLEN",
"Part":"Low"}},

"14022":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"14025":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCPTR",
"Part":"Low"}},

"14032":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14047":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14058":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14078":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14082":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14095":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"14097":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"14099":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"14101":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"14103":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"14105":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"14108":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"14110":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"14112":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"14114":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"14119":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"14121":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14123":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"14126":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14128":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"14130":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGOT",
"Part":"Low"}},

"14137":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14141":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"14143":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"14147":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"14171":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14173":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14175":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"14177":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"14180":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"14183":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"14189":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14191":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"14195":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"14198":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"14207":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14209":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"14215":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"14217":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14227":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"14229":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14231":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"14233":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"14235":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"14240":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_HALF",
"Part":"Low"}},

"14242":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_HALF",
"Part":"High"}},

"14250":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"14252":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14254":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"14256":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGSIGN",
"Part":"Low"}},

"14258":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGNCPR",
"Part":"Low"}},

"14260":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14278":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"14280":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGEXT",
"Part":"Low"}},

"14282":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14284":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14290":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14296":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14298":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGSIGN",
"Part":"Low"}},

"14300":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"14302":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14304":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14306":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14308":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGEXT",
"Part":"Low"}},

"14310":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14314":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14325":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"14330":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGNCPR",
"Part":"Low"}},

"14334":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14336":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14340":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14343":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14345":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGEXT",
"Part":"Low"}},

"14347":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"14349":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC4",
"Part":"Low"}},

"14352":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC4",
"Part":"Low"}},

"14354":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14356":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC3",
"Part":"Low"}},

"14359":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC3",
"Part":"Low"}},

"14361":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14363":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC2",
"Part":"Low"}},

"14366":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC2",
"Part":"Low"}},

"14368":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14370":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"14373":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"14375":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14382":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14386":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14390":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14392":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14394":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14396":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14398":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14400":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14402":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"14404":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14406":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"14408":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14410":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14414":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14416":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14418":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"14421":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGEXT",
"Part":"Low"}},

"14423":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"14425":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14427":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14429":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14431":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14433":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14435":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14437":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14439":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14441":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14443":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14445":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14447":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14452":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14456":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14458":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14460":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14462":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14471":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14473":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14483":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14485":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14487":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14489":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14496":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14500":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14502":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14504":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14506":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14508":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14510":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14512":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14514":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14516":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14518":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14520":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14522":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14526":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14534":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14538":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14542":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14546":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14549":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_OVERFLOW",
"Part":"Low"}},

"14554":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14556":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC4",
"Part":"Low"}},

"14558":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"14560":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC3",
"Part":"Low"}},

"14562":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC4",
"Part":"Low"}},

"14564":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC2",
"Part":"Low"}},

"14566":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC3",
"Part":"Low"}},

"14568":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"14570":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC2",
"Part":"Low"}},

"14572":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SHFTSGNX",
"Part":"Low"}},

"14574":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"14576":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14582":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14589":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"14593":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"14595":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"14597":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"14599":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC2",
"Part":"Low"}},

"14601":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC3",
"Part":"Low"}},

"14603":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC4",
"Part":"Low"}},

"14611":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"14617":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"14622":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"14627":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"14632":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"14637":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"14642":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"14647":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"14652":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"14676":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_SQRHALF",
"Part":"Low"}},

"14678":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_SQRHALF",
"Part":"High"}},

"14683":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_SQRTWO",
"Part":"Low"}},

"14685":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_SQRTWO",
"Part":"High"}},

"14690":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_ONE",
"Part":"Low"}},

"14692":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_ONE",
"Part":"High"}},

"14697":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POLY_LOG",
"Part":"Low"}},

"14699":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POLY_LOG",
"Part":"High"}},

"14704":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_NEGHALF",
"Part":"Low"}},

"14706":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_NEGHALF",
"Part":"High"}},

"14715":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_LOGTWO",
"Part":"Low"}},

"14717":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_LOGTWO",
"Part":"High"}},

"14730":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14732":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14734":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14736":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14738":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14740":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"14745":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14750":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14755":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14760":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14774":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14780":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14782":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14784":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14786":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14788":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14790":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14792":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14794":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14796":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14800":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14806":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14808":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14810":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"14812":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"14819":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"14821":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"14823":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14825":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"14827":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14830":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"14832":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14835":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"14837":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14840":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"14842":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGSIGN",
"Part":"Low"}},

"14844":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"14846":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGNCPR",
"Part":"Low"}},

"14848":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGSIGN",
"Part":"Low"}},

"14850":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14852":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14855":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"14857":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14859":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14871":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"JOV",
"Part":"Low"}},

"14874":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"14875":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ZERO",
"Part":"Low"}},

"14886":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGNCPR",
"Part":"Low"}},

"14893":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"14912":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14916":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14918":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGNCPR",
"Part":"Low"}},

"14928":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"14936":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_TEN",
"Part":"Low"}},

"14938":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_TEN",
"Part":"High"}},

"14940":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14942":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGNCPR",
"Part":"Low"}},

"14958":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14974":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"14976":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14978":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14982":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14984":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14988":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14990":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"14994":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"14996":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15003":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"15009":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15014":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15016":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15018":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15020":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15029":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15031":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15033":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15035":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15037":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15039":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15041":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15043":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15045":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15047":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15049":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15051":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15057":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15067":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"15073":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERR_ZERODIV",
"Part":"Low"}},

"15078":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"15080":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15082":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"15084":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15086":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"15088":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15090":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESULT",
"Part":"Low"}},

"15092":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15097":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15099":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15101":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15103":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15105":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15108":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15110":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15113":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15115":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15118":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15120":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15122":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15124":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15127":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15131":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"15134":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP2",
"Part":"Low"}},

"15136":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BIT_ABS",
"Part":"Low"}},

"15137":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP1",
"Part":"Low"}},

"15139":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP1",
"Part":"High"}},

"15143":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"15145":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORPTR",
"Part":"Low"}},

"15150":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15152":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15156":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15158":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15161":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15163":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15166":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15168":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15171":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15173":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15175":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15177":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15180":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15182":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INDEX",
"Part":"Low"}},

"15184":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"15187":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGSIGN",
"Part":"Low"}},

"15189":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15191":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15193":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15195":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15200":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"15206":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15208":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15210":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"15215":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"15218":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15222":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"15234":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15238":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15245":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15251":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15253":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15255":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15259":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15261":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15264":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15266":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15268":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15270":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15272":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"15274":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15279":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15282":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"15284":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"15286":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15288":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"15294":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"15296":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15300":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15304":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"15306":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15308":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15313":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"15315":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15320":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"15322":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15327":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15329":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"15331":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"15333":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15337":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15341":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15346":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15353":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15358":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15360":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SHFTSGNX",
"Part":"Low"}},

"15366":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15375":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SHFTSGNX",
"Part":"Low"}},

"15379":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15381":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15383":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15385":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15387":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15392":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SHFTSGNX",
"Part":"Low"}},

"15395":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15404":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"15406":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15408":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15410":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15417":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15424":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15426":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15428":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15430":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15434":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15436":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15438":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPEXP",
"Part":"Low"}},

"15445":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15449":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERLEN",
"Part":"Low"}},

"15453":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15462":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15466":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15475":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_MINUS",
"Part":"Low"}},

"15479":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15483":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_PLUS",
"Part":"Low"}},

"15487":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15504":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15507":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15512":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DPFLG",
"Part":"Low"}},

"15514":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DPFLG",
"Part":"Low"}},

"15518":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15521":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPEXP",
"Part":"Low"}},

"15523":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15532":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15541":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15545":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERLEN",
"Part":"Low"}},

"15554":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DPFLG",
"Part":"Low"}},

"15565":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15581":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGSIGN",
"Part":"Low"}},

"15583":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15585":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGNCPR",
"Part":"Low"}},

"15587":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15592":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15594":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15598":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15610":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15614":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15619":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15621":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15626":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"15631":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"15636":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"15641":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"QT_IN",
"Part":"Low"}},

"15643":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"QT_IN",
"Part":"High"}},

"15648":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"15650":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"15652":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15654":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15668":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15670":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15673":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15678":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15681":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"15683":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"15686":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15688":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15695":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15703":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_1E9",
"Part":"Low"}},

"15705":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_1E9",
"Part":"High"}},

"15712":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPEXP",
"Part":"Low"}},

"15714":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_1E9M1",
"Part":"Low"}},

"15716":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_1E9M1",
"Part":"High"}},

"15725":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_1E8M1",
"Part":"Low"}},

"15727":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_1E8M1",
"Part":"High"}},

"15739":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPEXP",
"Part":"Low"}},

"15746":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPEXP",
"Part":"Low"}},

"15756":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15758":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPEXP",
"Part":"Low"}},

"15761":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15765":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15772":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15775":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15777":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15779":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPEXP",
"Part":"Low"}},

"15788":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15791":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15797":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15800":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15805":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15809":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15815":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15817":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15822":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15824":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15829":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15831":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15836":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"15850":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15852":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15854":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15860":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"15862":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"15866":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15868":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15871":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TMPEXP",
"Part":"Low"}},

"15875":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15878":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15881":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STRNG2",
"Part":"Low"}},

"15883":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARPTR",
"Part":"Low"}},

"15886":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15888":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"15891":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15897":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15901":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15905":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15910":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15912":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15918":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15921":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"EXPON",
"Part":"Low"}},

"15924":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15926":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15929":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15931":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15935":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15939":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"15943":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"15945":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15949":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15952":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"15954":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15959":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15962":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"15964":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FOUTBUFF",
"Part":"Low"}},

"15967":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"Low"}},

"15969":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STACK",
"Part":"High"}},

"15972":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"15977":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"15981":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"15985":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"15989":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"15993":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"15997":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16001":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16005":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16009":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16016":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_HALF",
"Part":"Low"}},

"16018":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_HALF",
"Part":"High"}},

"16032":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP3",
"Part":"Low"}},

"16034":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP3",
"Part":"High"}},

"16039":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGSIGN",
"Part":"Low"}},

"16046":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP3",
"Part":"Low"}},

"16048":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP3",
"Part":"High"}},

"16056":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHARAC",
"Part":"Low"}},

"16066":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP3",
"Part":"Low"}},

"16068":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP3",
"Part":"High"}},

"16080":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"16084":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"16086":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"16088":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"16091":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16097":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16102":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16107":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16112":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16117":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16122":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16127":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16132":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16137":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_LOG_E",
"Part":"Low"}},

"16139":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_LOG_E",
"Part":"High"}},

"16144":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"16153":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGEXT",
"Part":"Low"}},

"16170":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHARAC",
"Part":"Low"}},

"16178":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16181":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16183":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"16185":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"16187":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"16189":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARG",
"Part":"Low"}},

"16194":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGEXT",
"Part":"Low"}},

"16196":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"16204":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POLY_EXP",
"Part":"Low"}},

"16206":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POLY_EXP",
"Part":"High"}},

"16211":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16213":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGNCPR",
"Part":"Low"}},

"16220":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16222":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16227":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP1",
"Part":"Low"}},

"16235":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP1",
"Part":"Low"}},

"16237":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP1",
"Part":"High"}},

"16242":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16244":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16249":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16253":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16259":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16261":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16263":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16268":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16270":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16273":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16278":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16280":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SERPTR",
"Part":"Low"}},

"16285":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP2",
"Part":"Low"}},

"16287":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP2",
"Part":"High"}},

"16294":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16298":{
"Length":4,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16308":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RNDSEED",
"Part":"Low"}},

"16310":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RNDSEED",
"Part":"High"}},

"16318":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_RND1",
"Part":"Low"}},

"16320":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_RND1",
"Part":"High"}},

"16325":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_RND2",
"Part":"Low"}},

"16327":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_RND2",
"Part":"High"}},

"16332":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"16334":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"16336":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"16338":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"16340":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16342":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"16344":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"16346":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACEXT",
"Part":"Low"}},

"16350":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FAC",
"Part":"Low"}},

"16355":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RNDSEED",
"Part":"Low"}},

"16357":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RNDSEED",
"Part":"High"}},

"16362":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PI_HALVED",
"Part":"Low"}},

"16364":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PI_HALVED",
"Part":"High"}},

"16372":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PI_DOUBLED",
"Part":"Low"}},

"16374":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PI_DOUBLED",
"Part":"High"}},

"16376":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARGSIGN",
"Part":"Low"}},

"16387":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16389":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SGNCPR",
"Part":"Low"}},

"16394":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"QUARTER",
"Part":"Low"}},

"16396":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"QUARTER",
"Part":"High"}},

"16401":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"16409":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"16413":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SIGNFLG",
"Part":"Low"}},

"16415":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"16417":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SIGNFLG",
"Part":"Low"}},

"16422":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"QUARTER",
"Part":"Low"}},

"16424":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"QUARTER",
"Part":"High"}},

"16435":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POLY_SIN",
"Part":"Low"}},

"16437":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POLY_SIN",
"Part":"High"}},

"16445":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16447":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SIGNFLG",
"Part":"Low"}},

"16452":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP3",
"Part":"Low"}},

"16454":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP3",
"Part":"High"}},

"16459":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP1",
"Part":"Low"}},

"16461":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP1",
"Part":"High"}},

"16466":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16468":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FACSIGN",
"Part":"Low"}},

"16470":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SIGNFLG",
"Part":"Low"}},

"16475":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP3",
"Part":"Low"}},

"16477":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMP3",
"Part":"High"}},

"16483":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SIN1",
"Part":"Low"}},

"16486":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16491":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16496":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16502":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16507":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16512":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16517":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16522":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16527":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16532":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16537":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16557":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_ONE",
"Part":"Low"}},

"16559":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_ONE",
"Part":"High"}},

"16564":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POLYATN",
"Part":"Low"}},

"16566":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"POLYATN",
"Part":"High"}},

"16576":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PI_HALVED",
"Part":"Low"}},

"16578":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PI_HALVED",
"Part":"High"}},

"16590":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16591":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16596":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16601":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16606":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16611":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16616":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16621":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16626":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16631":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16636":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16641":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16646":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16655":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"16660":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"16664":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"16669":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"16675":{
"Length":5,
"Format":"Dense",
"SubFormat":"None",
"SymbolRef":null},

"16682":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"16687":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COLD_START",
"Part":"Low"}},

"16689":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COLD_START",
"Part":"High"}},

"16693":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"16695":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC4",
"Part":"Low"}},

"16697":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC4",
"Part":"Low"}},

"16706":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC3",
"Part":"Low"}},

"16708":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"JMPADRS",
"Part":"Low"}},

"16710":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_USRVEC",
"Part":"Low"}},

"16712":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IQERR",
"Part":"Low"}},

"16714":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IQERR",
"Part":"High"}},

"16716":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_USRPTR",
"Part":"Low"}},

"16718":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BAS_USRPTR",
"Part":"Low"}},

"16737":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LASTPT",
"Part":"Low"}},

"16740":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16749":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IMGNXLNPTR",
"Part":"Low"}},

"16752":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IMGNXLNPTR",
"Part":"Low"}},

"16755":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TEMPST",
"Part":"Low"}},

"16759":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGMEM",
"Part":"Low"}},

"16761":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGMEM",
"Part":"High"}},

"16763":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"16765":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"16769":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"16773":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"16781":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"16791":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"16797":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"16801":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"16803":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGMEM",
"Part":"Low"}},

"16805":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGMEM",
"Part":"High"}},

"16809":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"16822":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"16824":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"16826":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTTAB",
"Part":"Low"}},

"16828":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"REASON",
"Part":"Low"}},

"16834":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STROUT",
"Part":"Low"}},

"16836":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STROUT",
"Part":"High"}},

"16840":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC4",
"Part":"Low"}},

"16842":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESTART",
"Part":"Low"}},

"16844":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESTART",
"Part":"High"}},

"16848":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"16879":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SIZE",
"Part":"Low"}},

"16883":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FIRST",
"Part":"Low"}},

"16885":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"16893":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SIZE",
"Part":"Low"}},

"16897":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"H2",
"Part":"Low"}},

"16899":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"V2",
"Part":"Low"}},

"16914":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"H2",
"Part":"Low"}},

"16916":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"V2",
"Part":"Low"}},

"16920":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_AT",
"Part":"Low"}},

"16928":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SIZE",
"Part":"Low"}},

"16939":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16952":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16966":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16987":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"16998":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17006":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BCC",
"Part":"Low"}},

"17019":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INVFLG",
"Part":"Low"}},

"17036":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17038":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"17040":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17042":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"17046":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMERR",
"Part":"Low"}},

"17049":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17051":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"17053":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"17055":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17057":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"17059":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"17072":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17074":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"17080":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"17082":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17084":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"17092":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17094":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"17099":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_GOTO",
"Part":"Low"}},

"17104":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"17106":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPSV",
"Part":"Low"}},

"17108":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"17110":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPSV",
"Part":"Low"}},

"17113":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRFLG",
"Part":"Low"}},

"17115":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"17117":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLSV",
"Part":"Low"}},

"17119":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"17121":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLSV",
"Part":"Low"}},

"17129":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRNUM",
"Part":"Low"}},

"17131":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"REMSTK",
"Part":"Low"}},

"17133":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRSTK",
"Part":"Low"}},

"17137":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRLIN",
"Part":"Low"}},

"17139":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"17141":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRLIN",
"Part":"Low"}},

"17143":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDTEXT",
"Part":"Low"}},

"17145":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRPOS",
"Part":"Low"}},

"17147":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDTEXT",
"Part":"Low"}},

"17149":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRPOS",
"Part":"Low"}},

"17153":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"17155":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPSV",
"Part":"Low"}},

"17157":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"17163":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLSV",
"Part":"Low"}},

"17165":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"17167":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGOT",
"Part":"Low"}},

"17176":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRLIN",
"Part":"Low"}},

"17178":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"17180":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRLIN",
"Part":"Low"}},

"17182":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CURLIN",
"Part":"Low"}},

"17184":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRPOS",
"Part":"Low"}},

"17186":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"17188":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRPOS",
"Part":"Low"}},

"17190":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPTR",
"Part":"Low"}},

"17192":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ERRSTK",
"Part":"Low"}},

"17203":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGEND",
"Part":"Low"}},

"17205":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"17207":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRGEND",
"Part":"Low"}},

"17209":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"17217":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17219":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"17221":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17223":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"17225":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"17233":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17237":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17242":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17244":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"17246":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17248":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"17253":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17255":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17257":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"17259":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17263":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17265":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"17269":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"17271":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"17273":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17275":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"17277":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17281":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"17283":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSTPTR",
"Part":"Low"}},

"17289":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"17291":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VARTAB",
"Part":"Low"}},

"17296":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LORES",
"Part":"Low"}},

"17299":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MIXSET",
"Part":"Low"}},

"17305":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPAGE1",
"Part":"Low"}},

"17314":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17316":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17320":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"17322":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17327":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17329":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17346":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17355":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"17374":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGR2SCRN",
"Part":"High"}},

"17378":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGR1SCRN",
"Part":"High"}},

"17380":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPAGE1",
"Part":"Low"}},

"17383":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MIXSET",
"Part":"Low"}},

"17386":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRPAGE",
"Part":"Low"}},

"17388":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HIRES",
"Part":"Low"}},

"17391":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTCLR",
"Part":"Low"}},

"17394":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17396":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HCOLOR1",
"Part":"Low"}},

"17398":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRPAGE",
"Part":"Low"}},

"17400":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"17402":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17404":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"17406":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HCOLOR1",
"Part":"Low"}},

"17408":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"17416":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"17418":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"17420":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17425":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRY",
"Part":"Low"}},

"17427":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17429":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17432":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17434":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17438":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17440":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17443":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"17448":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"17451":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"17454":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17456":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"17458":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17460":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRPAGE",
"Part":"Low"}},

"17462":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"17465":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17469":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17471":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17474":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17478":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRHORIZ",
"Part":"Low"}},

"17481":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MSKTBL",
"Part":"Low"}},

"17484":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17488":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRCOLOR",
"Part":"Low"}},

"17490":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HCOLOR1",
"Part":"Low"}},

"17498":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HCOLOR1",
"Part":"Low"}},

"17500":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17502":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17504":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17506":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17511":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17516":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17518":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17524":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17526":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17528":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17530":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRHORIZ",
"Part":"Low"}},

"17532":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HCOLOR1",
"Part":"Low"}},

"17535":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17541":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17546":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17549":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17553":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17556":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17560":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17565":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17567":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17571":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17573":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17575":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17579":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRCLSN",
"Part":"Low"}},

"17581":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17583":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17588":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17590":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17594":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17596":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HCOLOR1",
"Part":"Low"}},

"17598":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17602":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRCLSN",
"Part":"Low"}},

"17604":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17606":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17608":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17610":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRQUAD",
"Part":"Low"}},

"17612":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17614":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17622":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"17624":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_1C",
"Part":"Low"}},

"17629":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17633":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON3",
"Part":"Low"}},

"17638":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17646":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17648":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17652":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17654":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17659":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17661":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17663":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17665":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"17669":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"17671":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17673":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON_1C",
"Part":"Low"}},

"17678":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17682":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17685":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CON4",
"Part":"Low"}},

"17690":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17692":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17694":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17698":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17700":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17702":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRPAGE",
"Part":"Low"}},

"17706":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17708":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17713":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17715":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17717":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17719":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRY",
"Part":"Low"}},

"17724":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17728":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17730":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRQUAD",
"Part":"Low"}},

"17735":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17737":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17740":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17742":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRQUAD",
"Part":"Low"}},

"17744":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17746":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17749":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17751":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17754":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17756":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17760":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRY",
"Part":"Low"}},

"17764":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17766":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17768":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDY",
"Part":"Low"}},

"17770":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRY",
"Part":"Low"}},

"17772":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRQUAD",
"Part":"Low"}},

"17775":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17778":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17780":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17782":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HCOUNT",
"Part":"Low"}},

"17784":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRHORIZ",
"Part":"Low"}},

"17795":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDY",
"Part":"Low"}},

"17797":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17799":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17801":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17803":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17805":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17807":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HCOLOR1",
"Part":"Low"}},

"17809":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17811":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17813":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17818":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HCOUNT",
"Part":"Low"}},

"17822":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRQUAD",
"Part":"Low"}},

"17830":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17832":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17834":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17836":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17838":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17842":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17843":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17844":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17845":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17846":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17847":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17848":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17849":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17850":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"17852":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"17854":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"17856":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"17858":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"17860":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"17862":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"17864":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"17867":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17870":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"17872":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17875":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"17880":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRY",
"Part":"Low"}},

"17882":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"17886":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17888":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRY",
"Part":"Low"}},

"17890":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRY",
"Part":"Low"}},

"17892":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRHORIZ",
"Part":"Low"}},

"17895":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRHORIZ",
"Part":"Low"}},

"17900":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"17902":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17908":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17912":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRHORIZ",
"Part":"Low"}},

"17916":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17918":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRX",
"Part":"Low"}},

"17921":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"17923":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"17930":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRQUAD",
"Part":"Low"}},

"17933":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17936":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COSTBL",
"Part":"Low"}},

"17939":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17941":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"17944":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COSTBL",
"Part":"Low"}},

"17948":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDY",
"Part":"Low"}},

"17950":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRHORIZ",
"Part":"Low"}},

"17952":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"17954":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRCLSN",
"Part":"Low"}},

"17956":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"17958":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17962":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17964":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17966":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRSCALE",
"Part":"Low"}},

"17968":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17971":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"17973":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17981":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17983":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDY",
"Part":"Low"}},

"17985":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"17995":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"18002":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18006":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18008":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18015":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18022":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRQUAD",
"Part":"Low"}},

"18025":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18028":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COSTBL",
"Part":"Low"}},

"18031":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"18033":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18036":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COSTBL",
"Part":"Low"}},

"18040":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDY",
"Part":"Low"}},

"18042":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRHORIZ",
"Part":"Low"}},

"18044":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18046":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRCLSN",
"Part":"Low"}},

"18048":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18050":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"18054":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"18056":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"18058":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRSCALE",
"Part":"Low"}},

"18060":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"18063":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"18065":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"18073":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"18075":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDY",
"Part":"Low"}},

"18077":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRE",
"Part":"Low"}},

"18087":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRDX",
"Part":"Low"}},

"18094":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18098":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18100":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18111":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"18115":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRWIDE",
"Part":"High"}},

"18121":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRWIDE",
"Part":"Low"}},

"18129":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Ascii",
"SymbolRef":null},

"18137":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRHIGH",
"Part":"Low"}},

"18163":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRCOLOR",
"Part":"Low"}},

"18166":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18167":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18168":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18169":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18170":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18171":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18172":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18173":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18174":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_TO",
"Part":"Low"}},

"18184":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHRGOT",
"Part":"Low"}},

"18187":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_TO",
"Part":"Low"}},

"18197":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMP",
"Part":"Low"}},

"18201":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DSCTMP",
"Part":"Low"}},

"18212":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRROT",
"Part":"Low"}},

"18218":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRSCALE",
"Part":"Low"}},

"18224":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRSHPTR",
"Part":"Low"}},

"18226":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18228":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRSHPTR",
"Part":"Low"}},

"18230":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18233":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18235":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18244":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18248":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18250":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18254":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18256":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRSHPTR",
"Part":"Low"}},

"18258":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18260":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HSHAPE",
"Part":"Low"}},

"18265":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TOK_AT",
"Part":"Low"}},

"18278":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRROT",
"Part":"Low"}},

"18293":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18295":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1H",
"Part":"Low"}},

"18297":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2H",
"Part":"Low"}},

"18299":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"18301":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1L",
"Part":"Low"}},

"18304":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2L",
"Part":"Low"}},

"18310":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"18314":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2L",
"Part":"Low"}},

"18316":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"18319":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"18326":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2H",
"Part":"Low"}},

"18328":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"18330":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STREND",
"Part":"Low"}},

"18339":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"18341":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"18343":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1H",
"Part":"Low"}},

"18345":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRSHPTR",
"Part":"Low"}},

"18348":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HGRSHPTR",
"Part":"Low"}},

"18350":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MEMSIZ",
"Part":"Low"}},

"18352":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FRETOP",
"Part":"Low"}},

"18354":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1L",
"Part":"Low"}},

"18359":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18365":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"18367":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"18369":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2L",
"Part":"Low"}},

"18371":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"18373":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINNUM",
"Part":"Low"}},

"18375":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2H",
"Part":"Low"}},

"18377":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18379":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOWTR",
"Part":"Low"}},

"18384":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"18386":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1L",
"Part":"Low"}},

"18388":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ARYPTR",
"Part":"Low"}},

"18390":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1H",
"Part":"Low"}},

"18412":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"18416":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"18426":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CH",
"Part":"Low"}},

"18429":{
"Length":3,
"Format":"StringGeneric",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18434":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASCALC",
"Part":"Low"}},

"18438":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18442":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18444":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MASK",
"Part":"Low"}},

"18446":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"18448":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"18450":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MASK",
"Part":"Low"}},

"18452":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"18454":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"18460":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"H2",
"Part":"Low"}},

"18470":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18477":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"V2",
"Part":"Low"}},

"18482":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18486":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18488":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"V2",
"Part":"Low"}},

"18490":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18492":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18494":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"18505":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18507":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18509":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASH",
"Part":"Low"}},

"18512":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18516":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18518":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"18522":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"18524":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"18527":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"18530":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18532":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18534":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"18540":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"18542":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"HMASK",
"Part":"Low"}},

"18550":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GBASL",
"Part":"Low"}},

"18559":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18562":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PCL",
"Part":"Low"}},

"18564":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PCH",
"Part":"Low"}},

"18566":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRYX2",
"Part":"Low"}},

"18572":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PCL",
"Part":"Low"}},

"18581":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18585":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18599":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18605":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORMAT",
"Part":"Low"}},

"18607":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18609":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LENGTH",
"Part":"Low"}},

"18612":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18616":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18618":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18627":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18637":{
"Length":3,
"Format":"Fill",
"SubFormat":"None",
"SymbolRef":null},

"18644":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PCL",
"Part":"Low"}},

"18646":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRBYTE",
"Part":"Low"}},

"18649":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18651":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PRBL2",
"Part":"Low"}},

"18654":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LENGTH",
"Part":"Low"}},

"18659":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18661":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18667":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MNEML",
"Part":"Low"}},

"18670":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LMNEM",
"Part":"Low"}},

"18672":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MNEMR",
"Part":"Low"}},

"18675":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RMNEM",
"Part":"Low"}},

"18677":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18679":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18681":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RMNEM",
"Part":"Low"}},

"18683":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LMNEM",
"Part":"Low"}},

"18689":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18700":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LENGTH",
"Part":"Low"}},

"18702":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18704":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18708":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORMAT",
"Part":"Low"}},

"18712":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHAR1",
"Part":"Low"}},

"18718":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHAR2",
"Part":"Low"}},

"18736":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"FORMAT",
"Part":"Low"}},

"18740":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PCL",
"Part":"Low"}},

"18760":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"18762":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18772":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LENGTH",
"Part":"Low"}},

"18774":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PCH",
"Part":"Low"}},

"18780":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PCL",
"Part":"Low"}},

"18786":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18787":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18788":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18789":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18790":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18791":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18792":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18793":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18794":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18795":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18796":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18797":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18798":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18799":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18800":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18801":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18802":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18803":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18804":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18805":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18806":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18807":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18808":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18809":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18810":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18811":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18812":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18813":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18814":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18815":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18816":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18817":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18818":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18819":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18820":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18821":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18822":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18823":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18824":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18825":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18826":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18827":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18828":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18829":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18830":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18831":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18832":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18833":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18834":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18835":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18836":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18837":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18838":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18839":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18840":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18841":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18842":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18843":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18844":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18845":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18846":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18847":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18848":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18849":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18850":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18851":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18852":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18853":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"18854":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18855":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18856":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18857":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18858":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18859":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18860":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18861":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18862":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18863":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18864":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18865":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18866":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18867":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18868":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18869":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18870":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18871":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18872":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18873":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18874":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18875":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"18876":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18877":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18878":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"18879":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"18880":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18881":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18882":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18883":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18884":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18885":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18886":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18887":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18888":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18889":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18890":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18891":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18892":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18893":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18894":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18895":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18896":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18897":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18898":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18899":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18900":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18901":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18902":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18903":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18904":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18905":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18906":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18907":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18908":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18909":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18910":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18911":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18912":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18913":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18914":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18915":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18916":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18917":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18918":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18919":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18920":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18921":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18922":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18923":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18924":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18925":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18926":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18927":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18928":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18929":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18930":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18931":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18932":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18933":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18934":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18935":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18936":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18937":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18938":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18939":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18940":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18941":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18942":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18943":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18944":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18945":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18946":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18947":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18948":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18949":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18950":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18951":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18952":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18953":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18954":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18955":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18956":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18957":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18958":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18959":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18960":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18961":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18962":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18963":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18964":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18965":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18966":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18967":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18968":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18969":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18970":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18971":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18972":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18973":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18974":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18975":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18976":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18977":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18978":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18979":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18980":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18981":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18982":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18983":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18984":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18985":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18986":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18987":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18988":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18989":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18990":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18991":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18992":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18993":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18994":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18995":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18996":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18997":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18998":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"18999":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19000":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19001":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19002":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19003":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19004":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19005":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19006":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19007":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19008":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ACC",
"Part":"Low"}},

"19017":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IRQADDR",
"Part":"Low"}},

"19021":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SAV1",
"Part":"Low"}},

"19025":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PCL",
"Part":"Low"}},

"19028":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PCH",
"Part":"Low"}},

"19030":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BRKV",
"Part":"Low"}},

"19036":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RGDSP1",
"Part":"Low"}},

"19039":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MON",
"Part":"Low"}},

"19055":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"AN0OFF",
"Part":"Low"}},

"19058":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"AN1OFF",
"Part":"Low"}},

"19061":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"AN2ON",
"Part":"Low"}},

"19064":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"AN3ON",
"Part":"Low"}},

"19067":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CLRROM",
"Part":"Low"}},

"19070":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"KBDSTRB",
"Part":"Low"}},

"19074":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BELL",
"Part":"Low"}},

"19077":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SOFTEV",
"Part":"Low"}},

"19082":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PWREDUP",
"Part":"Low"}},

"19085":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PWRUP",
"Part":"Low"}},

"19087":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SOFTEV",
"Part":"Low"}},

"19090":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NOFIX",
"Part":"Low"}},

"19092":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASIC2",
"Part":"High"}},

"19094":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SOFTEV",
"Part":"Low"}},

"19099":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASIC2",
"Part":"Low"}},

"19101":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SOFTEV",
"Part":"Low"}},

"19104":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASIC",
"Part":"Low"}},

"19107":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SOFTEV",
"Part":"Low"}},

"19110":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"APPLEII",
"Part":"Low"}},

"19113":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19118":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GOBRKV",
"Part":"Low"}},

"19126":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC0",
"Part":"Low"}},

"19128":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"19132":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"19134":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"19140":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MSLOT",
"Part":"Low"}},

"19143":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC0",
"Part":"Low"}},

"19154":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC0",
"Part":"Low"}},

"19159":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CROUT",
"Part":"Low"}},

"19162":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ACC",
"Part":"Low"}},

"19164":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A3L",
"Part":"Low"}},

"19166":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ACC",
"Part":"High"}},

"19168":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A3H",
"Part":"Low"}},

"19172":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19177":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RTBL",
"Part":"Low"}},

"19183":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19188":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SAVE6502",
"Part":"Low"}},

"19197":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDBRK",
"Part":"Low"}},

"19199":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASIC",
"Part":"Low"}},

"19209":{
"Length":8,
"Format":"StringGeneric",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19217":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19218":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19219":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19220":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DELETE",
"Part":"Low"}},

"19221":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19222":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DELETE",
"Part":"Low"}},

"19223":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DELETE",
"Part":"Low"}},

"19224":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"DELETE",
"Part":"Low"}},

"19225":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19226":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19227":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19228":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19229":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19230":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PTRIG",
"Part":"Low"}},

"19233":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19237":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PADDL0",
"Part":"Low"}},

"19247":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19249":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STATUS",
"Part":"Low"}},

"19251":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LORES",
"Part":"Low"}},

"19254":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTPAGE1",
"Part":"Low"}},

"19257":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTSET",
"Part":"Low"}},

"19260":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19264":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TXTCLR",
"Part":"Low"}},

"19267":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MIXSET",
"Part":"Low"}},

"19273":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19275":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"WNDTOP",
"Part":"Low"}},

"19277":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19279":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"WNDLFT",
"Part":"Low"}},

"19281":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19283":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"WNDWDTH",
"Part":"Low"}},

"19285":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19287":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"WNDBTM",
"Part":"Low"}},

"19289":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19291":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CV",
"Part":"Low"}},

"19299":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19304":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LINE1",
"Part":"Low"}},

"19311":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SOFTEV",
"Part":"Low"}},

"19320":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RTNH",
"Part":"Low"}},

"19329":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CTRLSH",
"Part":"Low"}},

"19341":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CTRLCH",
"Part":"Low"}},

"19356":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"XLTBASE",
"Part":"Low"}},

"19365":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19369":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19373":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19379":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19380":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19381":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19382":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19383":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19384":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19385":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19386":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19387":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19388":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19389":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19390":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19391":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19392":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Hex",
"SymbolRef":null},

"19395":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19397":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19399":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASH",
"Part":"Low"}},

"19402":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19408":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19412":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19414":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19417":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BELL_H",
"Part":"Low"}},

"19421":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19426":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19428":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19442":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19453":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19460":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RTNH",
"Part":"Low"}},

"19464":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LFH",
"Part":"Low"}},

"19468":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BSH",
"Part":"Low"}},

"19495":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"WNDLFT",
"Part":"Low"}},

"19497":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19500":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19533":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19536":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19538":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"WNDBTM",
"Part":"Low"}},

"19544":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"WNDTOP",
"Part":"Low"}},

"19548":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19554":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19574":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19578":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASH",
"Part":"Low"}},

"19586":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19596":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19605":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19614":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19616":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19619":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"WNDWDTH",
"Part":"Low"}},

"19626":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19631":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19636":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A4L",
"Part":"Low"}},

"19640":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A4H",
"Part":"Low"}},

"19657":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19664":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19668":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19680":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19685":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TAPEOUT",
"Part":"Low"}},

"19688":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19692":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19710":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TAPEIN",
"Part":"Low"}},

"19713":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LASTIN",
"Part":"Low"}},

"19717":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LASTIN",
"Part":"Low"}},

"19719":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LASTIN",
"Part":"Low"}},

"19724":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CH",
"Part":"Low"}},

"19726":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19729":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19731":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19733":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19736":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"KSWL",
"Part":"Low"}},

"19739":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RNDL",
"Part":"Low"}},

"19743":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RNDH",
"Part":"Low"}},

"19750":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19768":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ESCH",
"Part":"Low"}},

"19778":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INVFLG",
"Part":"Low"}},

"19780":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"Low"}},

"19787":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INVFLG",
"Part":"Low"}},

"19789":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"Low"}},

"19792":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BSH",
"Part":"Low"}},

"19796":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CTRLXH",
"Part":"Low"}},

"19800":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19810":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19818":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PROMPT",
"Part":"Low"}},

"19823":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19832":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PICK",
"Part":"Low"}},

"19836":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASL",
"Part":"Low"}},

"19838":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19842":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19844":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INBUFF",
"Part":"Low"}},

"19847":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RTNH",
"Part":"Low"}},

"19854":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RTNH",
"Part":"Low"}},

"19868":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19870":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19875":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1L",
"Part":"Low"}},

"19877":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19879":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2L",
"Part":"Low"}},

"19881":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1H",
"Part":"Low"}},

"19883":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2H",
"Part":"Low"}},

"19885":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1L",
"Part":"Low"}},

"19887":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19894":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19899":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1L",
"Part":"Low"}},

"19915":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2L",
"Part":"Low"}},

"19919":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19924":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19939":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"19941":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19943":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19947":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"19949":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CSWL",
"Part":"Low"}},

"19952":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19956":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"INVFLG",
"Part":"Low"}},

"19958":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"YSAV1",
"Part":"Low"}},

"19965":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"YSAV1",
"Part":"Low"}},

"19968":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"YSAV",
"Part":"Low"}},

"19975":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"19979":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MODE",
"Part":"Low"}},

"19981":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2L",
"Part":"Low"}},

"19983":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A3L",
"Part":"Low"}},

"19985":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A3L",
"Part":"Low"}},

"19989":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A3H",
"Part":"Low"}},

"19992":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"YSAV",
"Part":"Low"}},

"20000":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20002":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2L",
"Part":"Low"}},

"20004":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A4L",
"Part":"Low"}},

"20006":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A5L",
"Part":"Low"}},

"20012":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1L",
"Part":"Low"}},

"20014":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A4L",
"Part":"Low"}},

"20022":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1L",
"Part":"Low"}},

"20024":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A4L",
"Part":"Low"}},

"20031":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A1L",
"Part":"Low"}},

"20036":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"20041":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"20046":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A4L",
"Part":"Low"}},

"20051":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"20065":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20074":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PCL",
"Part":"Low"}},

"20080":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20105":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"KSWL",
"Part":"High"}},

"20107":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2L",
"Part":"Low"}},

"20109":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"KSWL",
"Part":"Low"}},

"20111":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"KEYIN",
"Part":"Low"}},

"20115":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CSWL",
"Part":"High"}},

"20119":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CSWL",
"Part":"Low"}},

"20121":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"COUT1",
"Part":"Low"}},

"20125":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Binary",
"SymbolRef":null},

"20129":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"IOADR",
"Part":"High"}},

"20131":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20135":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CIOPG",
"Part":"Low"}},

"20137":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC0",
"Part":"Low"}},

"20139":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LOC1",
"Part":"Low"}},

"20170":{
"Length":3,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"USRADDR",
"Part":"Low"}},

"20173":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20178":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20180":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20193":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20198":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20205":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20224":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20229":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHKSUM",
"Part":"Low"}},

"20234":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20244":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20251":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHKSUM",
"Part":"Low"}},

"20253":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHKSUM",
"Part":"Low"}},

"20258":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20265":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CHKSUM",
"Part":"Low"}},

"20269":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"20274":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"20282":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BELL_H",
"Part":"Low"}},

"20287":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STATUS",
"Part":"Low"}},

"20290":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ACC",
"Part":"Low"}},

"20292":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"XREG",
"Part":"Low"}},

"20294":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"YREG",
"Part":"Low"}},

"20298":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"ACC",
"Part":"Low"}},

"20300":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"XREG",
"Part":"Low"}},

"20302":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"YREG",
"Part":"Low"}},

"20306":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STATUS",
"Part":"Low"}},

"20309":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SPNT",
"Part":"Low"}},

"20329":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"20331":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"PROMPT",
"Part":"Low"}},

"20342":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"YSAV",
"Part":"Low"}},

"20344":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20357":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"YSAV",
"Part":"Low"}},

"20362":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20369":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2L",
"Part":"Low"}},

"20371":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2H",
"Part":"Low"}},

"20376":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MODE",
"Part":"Low"}},

"20380":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2H",
"Part":"Low"}},

"20391":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20393":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"A2L",
"Part":"Low"}},

"20401":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"HighAscii",
"SymbolRef":null},

"20403":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Decimal",
"SymbolRef":null},

"20414":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BL1",
"Part":"High"}},

"20425":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MODE",
"Part":"Low"}},

"20428":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20429":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20430":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20431":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20432":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20433":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20434":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20435":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20436":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20437":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20438":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20439":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20440":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20441":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20442":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20443":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20444":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20445":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20446":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20447":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20448":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20449":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20450":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"None",
"SymbolRef":null},

"20451":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BASCONT",
"Part":"Low"}},

"20452":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"USR",
"Part":"Low"}},

"20453":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"REGZ",
"Part":"Low"}},

"20454":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"TRACE_RTS",
"Part":"Low"}},

"20455":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"VFY",
"Part":"Low"}},

"20456":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MON_INPRT",
"Part":"Low"}},

"20457":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"STEPZ_USR",
"Part":"Low"}},

"20458":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OUTPRT",
"Part":"Low"}},

"20459":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"XBASIC",
"Part":"Low"}},

"20460":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SETMODE",
"Part":"Low"}},

"20461":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SETMODE",
"Part":"Low"}},

"20462":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MOVE",
"Part":"Low"}},

"20463":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"LT",
"Part":"Low"}},

"20464":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SETNORM",
"Part":"Low"}},

"20465":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SETINV",
"Part":"Low"}},

"20466":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MON_LIST",
"Part":"Low"}},

"20467":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MON_WRITE",
"Part":"Low"}},

"20468":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"GO",
"Part":"Low"}},

"20469":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"MON_READ",
"Part":"Low"}},

"20470":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SETMODE",
"Part":"Low"}},

"20471":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"SETMODE",
"Part":"Low"}},

"20472":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"CRMON",
"Part":"Low"}},

"20473":{
"Length":1,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"BLANK",
"Part":"Low"}},

"20474":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"NMI",
"Part":"Low"}},

"20476":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"RESET",
"Part":"Low"}},

"20478":{
"Length":2,
"Format":"NumericLE",
"SubFormat":"Symbol",
"SymbolRef":{
"Label":"OLDRST",
"Part":"Low"}}},

"LvTables":{
},

"Visualizations":[],
"VisualizationAnimations":[],
"VisualizationSets":{
}}
